{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2","program":"/home/martin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","serde_cbor","--edition=2018","/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=38ce80f92d46c1cb","-C","extra-filename=-38ce80f92d46c1cb","--out-dir","/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps","-L","dependency=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps","--extern","half=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libhalf-104a350934fc19a4.rmeta","--extern","serde=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libserde-c947d780458f0fbc.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/martin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libserde_cbor-38ce80f92d46c1cb.rmeta"},"prelude":{"crate_id":{"name":"serde_cbor","disambiguator":[12143075314408894001,0]},"crate_root":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src","external_crates":[{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14788966508543342302,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","num":2,"id":{"name":"core","disambiguator":[2825088610194081445,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9481142260376939403,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16420834686343379425,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11097033969885139948,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6800150773471260640,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9424233180753397496,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4493421558680613340,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[10587786945246582611,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6037489587312533517,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[12999623613951624675,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[15285592788019233460,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[7690318462147983057,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16937637772373355212,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8216859446519220865,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[6387052066414425180,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[879344915155370202,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[12947071141408240460,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12545025351940724261,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","num":20,"id":{"name":"half","disambiguator":[14148917345091484181,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","num":21,"id":{"name":"serde","disambiguator":[6983298613914056521,0]}}],"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":0,"byte_end":12701,"line_start":1,"line_end":369,"column_start":1,"column_end":29}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1277},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13118,"byte_end":13124,"line_start":18,"line_end":18,"column_start":22,"column_end":28},"alias_span":null,"name":"IoRead","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":1292},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13220,"byte_end":13229,"line_start":21,"line_end":21,"column_start":22,"column_end":31},"alias_span":null,"name":"SliceRead","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":1311},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13253,"byte_end":13265,"line_start":22,"line_end":22,"column_start":23,"column_end":35},"alias_span":null,"name":"MutSliceRead","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":411},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13267,"byte_end":13271,"line_start":22,"line_end":22,"column_start":37,"column_end":41},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":1300},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13273,"byte_end":13287,"line_start":22,"line_end":22,"column_start":43,"column_end":57},"alias_span":null,"name":"SliceReadFixed","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":1540},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":81028,"byte_end":81035,"line_start":7,"line_end":7,"column_start":23,"column_end":30},"alias_span":null,"name":"IoWrite","value":"","parent":{"krate":0,"index":529}},{"kind":"Use","ref_id":{"krate":0,"index":1547},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":81060,"byte_end":81070,"line_start":8,"line_end":8,"column_start":24,"column_end":34},"alias_span":null,"name":"SliceWrite","value":"","parent":{"krate":0,"index":529}},{"kind":"Use","ref_id":{"krate":0,"index":860},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":81072,"byte_end":81077,"line_start":8,"line_end":8,"column_start":36,"column_end":41},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":529}},{"kind":"Use","ref_id":{"krate":0,"index":948},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":111638,"byte_end":111648,"line_start":10,"line_end":10,"column_start":19,"column_end":29},"alias_span":null,"name":"from_value","value":"","parent":{"krate":0,"index":895}},{"kind":"Use","ref_id":{"krate":0,"index":1073},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":111684,"byte_end":111692,"line_start":12,"line_end":12,"column_start":20,"column_end":28},"alias_span":null,"name":"to_value","value":"","parent":{"krate":0,"index":895}},{"kind":"Use","ref_id":{"krate":0,"index":1138},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":12004,"byte_end":12016,"line_start":340,"line_end":340,"column_start":21,"column_end":33},"alias_span":null,"name":"Deserializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1203},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":12018,"byte_end":12036,"line_start":340,"line_end":340,"column_start":35,"column_end":53},"alias_span":null,"name":"StreamDeserializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":352},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":12078,"byte_end":12083,"line_start":343,"line_end":343,"column_start":24,"column_end":29},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":355},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":12085,"byte_end":12091,"line_start":343,"line_end":343,"column_start":31,"column_end":37},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1320},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":12130,"byte_end":12140,"line_start":346,"line_end":346,"column_start":21,"column_end":31},"alias_span":null,"name":"Serializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":67},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":12318,"byte_end":12329,"line_start":352,"line_end":352,"column_start":20,"column_end":31},"alias_span":null,"name":"from_reader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":57},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":12414,"byte_end":12424,"line_start":356,"line_end":356,"column_start":20,"column_end":30},"alias_span":null,"name":"from_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":567},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":12510,"byte_end":12516,"line_start":360,"line_end":360,"column_start":21,"column_end":27},"alias_span":null,"name":"to_vec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":571},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":12578,"byte_end":12587,"line_start":364,"line_end":364,"column_start":21,"column_end":30},"alias_span":null,"name":"to_writer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1554},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":12695,"byte_end":12700,"line_start":369,"line_end":369,"column_start":23,"column_end":28},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":0,"byte_end":12701,"line_start":1,"line_end":369,"column_start":1,"column_end":29},"name":"","qualname":"::","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":333},{"krate":0,"index":387},{"krate":0,"index":529},{"krate":0,"index":730},{"krate":0,"index":853},{"krate":0,"index":895},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1110},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1117},{"krate":0,"index":1120},{"krate":0,"index":1123},{"krate":0,"index":1126},{"krate":0,"index":1129},{"krate":0,"index":1132},{"krate":0,"index":1135}],"decl_id":null,"docs":" CBOR and serialization.","sig":null,"attributes":[{"value":"/ CBOR and serialization.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":0,"byte_end":27,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":28,"byte_end":31,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":32,"byte_end":43,"line_start":3,"line_end":3,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":44,"byte_end":47,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Serde CBOR supports Rust 1.40 and up. Add this to your `Cargo.toml`:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":48,"byte_end":120,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ ```toml","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":121,"byte_end":132,"line_start":6,"line_end":6,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":133,"byte_end":151,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"/ serde_cbor = \"0.10\"","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":152,"byte_end":175,"line_start":8,"line_end":8,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":176,"byte_end":183,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":184,"byte_end":187,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Storing and loading Rust types is easy and requires only","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":188,"byte_end":248,"line_start":11,"line_end":11,"column_start":1,"column_end":61}},{"value":"/ minimal modifications to the program code.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":249,"byte_end":295,"line_start":12,"line_end":12,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":296,"byte_end":299,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":300,"byte_end":311,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":312,"byte_end":359,"line_start":15,"line_end":15,"column_start":1,"column_end":48}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":360,"byte_end":386,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":387,"byte_end":409,"line_start":17,"line_end":17,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":410,"byte_end":413,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ // Types annotated with `Serialize` can be stored as CBOR.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":414,"byte_end":476,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"/ // To be able to load them again add `Deserialize`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":477,"byte_end":532,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"/ #[derive(Debug, Serialize, Deserialize)]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":533,"byte_end":577,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/ struct Mascot {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":578,"byte_end":597,"line_start":22,"line_end":22,"column_start":1,"column_end":20}},{"value":"/     name: String,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":598,"byte_end":619,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/     species: String,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":620,"byte_end":644,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/     year_of_birth: u32,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":645,"byte_end":672,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":673,"byte_end":678,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":679,"byte_end":682,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":683,"byte_end":728,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"/     let ferris = Mascot {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":729,"byte_end":758,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/         name: \"Ferris\".to_owned(),","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":759,"byte_end":797,"line_start":30,"line_end":30,"column_start":1,"column_end":39}},{"value":"/         species: \"crab\".to_owned(),","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":798,"byte_end":837,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/         year_of_birth: 2015,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":838,"byte_end":870,"line_start":32,"line_end":32,"column_start":1,"column_end":33}},{"value":"/     };","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":871,"byte_end":881,"line_start":33,"line_end":33,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":882,"byte_end":885,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/     let ferris_file = File::create(\"examples/ferris.cbor\")?;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":886,"byte_end":950,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/     // Write Ferris to the given file.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":951,"byte_end":993,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/     // Instead of a file you can use any type that implements `io::Write`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":994,"byte_end":1071,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/     // like a HTTP body, database connection etc.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":1072,"byte_end":1125,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/     serde_cbor::to_writer(ferris_file, &ferris)?;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":1126,"byte_end":1179,"line_start":39,"line_end":39,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":1180,"byte_end":1183,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/     let tux_file = File::open(\"examples/tux.cbor\")?;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":1184,"byte_end":1240,"line_start":41,"line_end":41,"column_start":1,"column_end":57}},{"value":"/     // Load Tux from a file.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":1241,"byte_end":1273,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"/     // Serde CBOR performs roundtrip serialization meaning that","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":1274,"byte_end":1341,"line_start":43,"line_end":43,"column_start":1,"column_end":68}},{"value":"/     // the data will not change in any way.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":1342,"byte_end":1389,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/     let tux: Mascot = serde_cbor::from_reader(tux_file)?;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":1390,"byte_end":1451,"line_start":45,"line_end":45,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":1452,"byte_end":1455,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     println!(\"{:?}\", tux);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":1456,"byte_end":1486,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/     // prints: Mascot { name: \"Tux\", species: \"penguin\", year_of_birth: 1996 }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":1487,"byte_end":1569,"line_start":48,"line_end":48,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":1570,"byte_end":1573,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":1574,"byte_end":1588,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":1589,"byte_end":1594,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":1595,"byte_end":1602,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":1603,"byte_end":1606,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ There are a lot of options available to customize the format.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":1607,"byte_end":1672,"line_start":54,"line_end":54,"column_start":1,"column_end":66}},{"value":"/ To operate on untyped CBOR values have a look at the `Value` type.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":1673,"byte_end":1743,"line_start":55,"line_end":55,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":1744,"byte_end":1747,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Type-based Serialization and Deserialization","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":1748,"byte_end":1798,"line_start":57,"line_end":57,"column_start":1,"column_end":51}},{"value":"/ Serde provides a mechanism for low boilerplate serialization & deserialization of values to and","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":1799,"byte_end":1898,"line_start":58,"line_end":58,"column_start":1,"column_end":100}},{"value":"/ from CBOR via the serialization API. To be able to serialize a piece of data, it must implement","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":1899,"byte_end":1998,"line_start":59,"line_end":59,"column_start":1,"column_end":100}},{"value":"/ the `serde::Serialize` trait. To be able to deserialize a piece of data, it must implement the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":1999,"byte_end":2097,"line_start":60,"line_end":60,"column_start":1,"column_end":99}},{"value":"/ `serde::Deserialize` trait. Serde provides an annotation to automatically generate the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":2098,"byte_end":2188,"line_start":61,"line_end":61,"column_start":1,"column_end":91}},{"value":"/ code for these traits: `#[derive(Serialize, Deserialize)]`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":2189,"byte_end":2252,"line_start":62,"line_end":62,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":2253,"byte_end":2256,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The CBOR API also provides an enum `serde_cbor::Value`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":2257,"byte_end":2316,"line_start":64,"line_end":64,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":2317,"byte_end":2320,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ # Packed Encoding","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":2321,"byte_end":2342,"line_start":66,"line_end":66,"column_start":1,"column_end":22}},{"value":"/ When serializing structs or enums in CBOR the keys or enum variant names will be serialized","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":2343,"byte_end":2438,"line_start":67,"line_end":67,"column_start":1,"column_end":96}},{"value":"/ as string keys to a map. Especially in embedded environments this can increase the file","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":2439,"byte_end":2530,"line_start":68,"line_end":68,"column_start":1,"column_end":92}},{"value":"/ size too much. In packed encoding all struct keys, as well as any enum variant that has no data,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":2531,"byte_end":2631,"line_start":69,"line_end":69,"column_start":1,"column_end":101}},{"value":"/ will be serialized as variable sized integers. The first 24 entries in any struct consume only a","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":2632,"byte_end":2732,"line_start":70,"line_end":70,"column_start":1,"column_end":101}},{"value":"/ single byte!  Packed encoding uses serde's preferred [externally tagged enum","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":2733,"byte_end":2813,"line_start":71,"line_end":71,"column_start":1,"column_end":81}},{"value":"/ format](https://serde.rs/enum-representations.html) and therefore serializes enum variant names","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":2814,"byte_end":2913,"line_start":72,"line_end":72,"column_start":1,"column_end":100}},{"value":"/ as string keys when that variant contains data.  So, in the packed encoding example, `FirstVariant`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":2914,"byte_end":3017,"line_start":73,"line_end":73,"column_start":1,"column_end":104}},{"value":"/ encodes to a single byte, but encoding `SecondVariant` requires 16 bytes.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":3018,"byte_end":3095,"line_start":74,"line_end":74,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":3096,"byte_end":3099,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ To serialize a document in this format use `Serializer::new(writer).packed_format()` or","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":3100,"byte_end":3191,"line_start":76,"line_end":76,"column_start":1,"column_end":92}},{"value":"/ the shorthand `ser::to_vec_packed`. The deserialization works without any changes.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":3192,"byte_end":3278,"line_start":77,"line_end":77,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":3279,"byte_end":3282,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ If you would like to omit the enum variant encoding for all variants, including ones that","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":3283,"byte_end":3376,"line_start":79,"line_end":79,"column_start":1,"column_end":94}},{"value":"/ contain data, you can add `legacy_enums()` in addition to `packed_format()`, as can seen","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":3377,"byte_end":3469,"line_start":80,"line_end":80,"column_start":1,"column_end":93}},{"value":"/ in the Serialize using minimal encoding example.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":3470,"byte_end":3522,"line_start":81,"line_end":81,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":3523,"byte_end":3526,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Self describing documents","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":3527,"byte_end":3558,"line_start":83,"line_end":83,"column_start":1,"column_end":32}},{"value":"/ In some contexts different formats are used but there is no way to declare the format used","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":3559,"byte_end":3653,"line_start":84,"line_end":84,"column_start":1,"column_end":95}},{"value":"/ out of band. For this reason CBOR has a magic number that may be added before any document.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":3654,"byte_end":3749,"line_start":85,"line_end":85,"column_start":1,"column_end":96}},{"value":"/ Self describing documents are created with `serializer.self_describe()`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":3750,"byte_end":3826,"line_start":86,"line_end":86,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":3827,"byte_end":3830,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":3831,"byte_end":3845,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/ Read a CBOR value that is known to be a map of string keys to string values and print it.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":3846,"byte_end":3939,"line_start":89,"line_end":89,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":3940,"byte_end":3943,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":3944,"byte_end":3955,"line_start":91,"line_end":91,"column_start":1,"column_end":12}},{"value":"/ use std::collections::BTreeMap;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":3956,"byte_end":3991,"line_start":92,"line_end":92,"column_start":1,"column_end":36}},{"value":"/ use serde_cbor::from_slice;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":3992,"byte_end":4023,"line_start":93,"line_end":93,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4024,"byte_end":4027,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ let slice = b\"\\xa5aaaAabaBacaCadaDaeaE\";","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4028,"byte_end":4072,"line_start":95,"line_end":95,"column_start":1,"column_end":45}},{"value":"/ let value: BTreeMap<String, String> = from_slice(slice).unwrap();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4073,"byte_end":4142,"line_start":96,"line_end":96,"column_start":1,"column_end":70}},{"value":"/ println!(\"{:?}\", value); // {\"e\": \"E\", \"d\": \"D\", \"a\": \"A\", \"c\": \"C\", \"b\": \"B\"}","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4143,"byte_end":4225,"line_start":97,"line_end":97,"column_start":1,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4226,"byte_end":4233,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4234,"byte_end":4237,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ Read a general CBOR value with an unknown content.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4238,"byte_end":4292,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4293,"byte_end":4296,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4297,"byte_end":4308,"line_start":102,"line_end":102,"column_start":1,"column_end":12}},{"value":"/ use serde_cbor::from_slice;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4309,"byte_end":4340,"line_start":103,"line_end":103,"column_start":1,"column_end":32}},{"value":"/ use serde_cbor::value::Value;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4341,"byte_end":4374,"line_start":104,"line_end":104,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4375,"byte_end":4378,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ let slice = b\"\\x82\\x01\\xa1aaab\";","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4379,"byte_end":4415,"line_start":106,"line_end":106,"column_start":1,"column_end":37}},{"value":"/ let value: Value = from_slice(slice).unwrap();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4416,"byte_end":4466,"line_start":107,"line_end":107,"column_start":1,"column_end":51}},{"value":"/ println!(\"{:?}\", value); // Array([U64(1), Object({String(\"a\"): String(\"b\")})])","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4467,"byte_end":4550,"line_start":108,"line_end":108,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4551,"byte_end":4558,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4559,"byte_end":4562,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Serialize an object.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4563,"byte_end":4587,"line_start":111,"line_end":111,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4588,"byte_end":4591,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4592,"byte_end":4603,"line_start":113,"line_end":113,"column_start":1,"column_end":12}},{"value":"/ use std::collections::BTreeMap;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4604,"byte_end":4639,"line_start":114,"line_end":114,"column_start":1,"column_end":36}},{"value":"/ use serde_cbor::to_vec;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4640,"byte_end":4667,"line_start":115,"line_end":115,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4668,"byte_end":4671,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ let mut programming_languages = BTreeMap::new();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4672,"byte_end":4724,"line_start":117,"line_end":117,"column_start":1,"column_end":53}},{"value":"/ programming_languages.insert(\"rust\", vec![\"safe\", \"concurrent\", \"fast\"]);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4725,"byte_end":4802,"line_start":118,"line_end":118,"column_start":1,"column_end":78}},{"value":"/ programming_languages.insert(\"python\", vec![\"powerful\", \"friendly\", \"open\"]);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4803,"byte_end":4884,"line_start":119,"line_end":119,"column_start":1,"column_end":82}},{"value":"/ programming_languages.insert(\"js\", vec![\"lightweight\", \"interpreted\", \"object-oriented\"]);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4885,"byte_end":4979,"line_start":120,"line_end":120,"column_start":1,"column_end":95}},{"value":"/ let encoded = to_vec(&programming_languages);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":4980,"byte_end":5029,"line_start":121,"line_end":121,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(encoded.unwrap().len(), 103);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5030,"byte_end":5074,"line_start":122,"line_end":122,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5075,"byte_end":5082,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5083,"byte_end":5086,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ Deserializing data in the middle of a slice","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5087,"byte_end":5134,"line_start":125,"line_end":125,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5135,"byte_end":5142,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/ # extern crate serde_cbor;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5143,"byte_end":5173,"line_start":127,"line_end":127,"column_start":1,"column_end":31}},{"value":"/ use serde_cbor::Deserializer;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5174,"byte_end":5207,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5208,"byte_end":5211,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5212,"byte_end":5229,"line_start":130,"line_end":130,"column_start":1,"column_end":18}},{"value":"/ let data: Vec<u8> = vec![","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5230,"byte_end":5259,"line_start":131,"line_end":131,"column_start":1,"column_end":30}},{"value":"/     0x66, 0x66, 0x6f, 0x6f, 0x62, 0x61, 0x72, 0x66, 0x66, 0x6f, 0x6f, 0x62,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5260,"byte_end":5339,"line_start":132,"line_end":132,"column_start":1,"column_end":80}},{"value":"/     0x61, 0x72,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5340,"byte_end":5359,"line_start":133,"line_end":133,"column_start":1,"column_end":20}},{"value":"/ ];","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5360,"byte_end":5366,"line_start":134,"line_end":134,"column_start":1,"column_end":7}},{"value":"/ let mut deserializer = Deserializer::from_slice(&data);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5367,"byte_end":5426,"line_start":135,"line_end":135,"column_start":1,"column_end":60}},{"value":"/ let value: &str = serde::de::Deserialize::deserialize(&mut deserializer)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5427,"byte_end":5503,"line_start":136,"line_end":136,"column_start":1,"column_end":77}},{"value":"/     .unwrap();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5504,"byte_end":5522,"line_start":137,"line_end":137,"column_start":1,"column_end":19}},{"value":"/ let rest = &data[deserializer.byte_offset()..];","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5523,"byte_end":5574,"line_start":138,"line_end":138,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(value, \"foobar\");","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5575,"byte_end":5607,"line_start":139,"line_end":139,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(rest, &[0x66, 0x66, 0x6f, 0x6f, 0x62, 0x61, 0x72]);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5608,"byte_end":5674,"line_start":140,"line_end":140,"column_start":1,"column_end":67}},{"value":"/ # }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5675,"byte_end":5682,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5683,"byte_end":5690,"line_start":142,"line_end":142,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5691,"byte_end":5694,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ Serialize using packed encoding","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5695,"byte_end":5730,"line_start":144,"line_end":144,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5731,"byte_end":5734,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5735,"byte_end":5746,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5747,"byte_end":5794,"line_start":147,"line_end":147,"column_start":1,"column_end":48}},{"value":"/ use serde_cbor::ser::to_vec_packed;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5795,"byte_end":5834,"line_start":148,"line_end":148,"column_start":1,"column_end":40}},{"value":"/ use WithTwoVariants::*;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5835,"byte_end":5862,"line_start":149,"line_end":149,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5863,"byte_end":5866,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Serialize, Deserialize)]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5867,"byte_end":5911,"line_start":151,"line_end":151,"column_start":1,"column_end":45}},{"value":"/ enum WithTwoVariants {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5912,"byte_end":5938,"line_start":152,"line_end":152,"column_start":1,"column_end":27}},{"value":"/     FirstVariant,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5939,"byte_end":5960,"line_start":153,"line_end":153,"column_start":1,"column_end":22}},{"value":"/     SecondVariant(u8),","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5961,"byte_end":5987,"line_start":154,"line_end":154,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5988,"byte_end":5993,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5994,"byte_end":5997,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ let cbor = to_vec_packed(&FirstVariant).unwrap();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":5998,"byte_end":6051,"line_start":157,"line_end":157,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(cbor.len(), 1);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6052,"byte_end":6082,"line_start":158,"line_end":158,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6083,"byte_end":6086,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ let cbor = to_vec_packed(&SecondVariant(0)).unwrap();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6087,"byte_end":6144,"line_start":160,"line_end":160,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(cbor.len(), 16); // Includes 13 bytes of \"SecondVariant\"","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6145,"byte_end":6216,"line_start":161,"line_end":161,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6217,"byte_end":6224,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6225,"byte_end":6228,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ Serialize using minimal encoding","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6229,"byte_end":6265,"line_start":164,"line_end":164,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6266,"byte_end":6269,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6270,"byte_end":6281,"line_start":166,"line_end":166,"column_start":1,"column_end":12}},{"value":"/ use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6282,"byte_end":6329,"line_start":167,"line_end":167,"column_start":1,"column_end":48}},{"value":"/ use serde_cbor::{Result, Serializer, ser::{self, IoWrite}};","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6330,"byte_end":6393,"line_start":168,"line_end":168,"column_start":1,"column_end":64}},{"value":"/ use WithTwoVariants::*;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6394,"byte_end":6421,"line_start":169,"line_end":169,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6422,"byte_end":6425,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ fn to_vec_minimal<T>(value: &T) -> Result<Vec<u8>>","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6426,"byte_end":6480,"line_start":171,"line_end":171,"column_start":1,"column_end":55}},{"value":"/ where","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6481,"byte_end":6490,"line_start":172,"line_end":172,"column_start":1,"column_end":10}},{"value":"/     T: serde::Serialize,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6491,"byte_end":6519,"line_start":173,"line_end":173,"column_start":1,"column_end":29}},{"value":"/ {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6520,"byte_end":6525,"line_start":174,"line_end":174,"column_start":1,"column_end":6}},{"value":"/     let mut vec = Vec::new();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6526,"byte_end":6559,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"/     value.serialize(&mut Serializer::new(&mut IoWrite::new(&mut vec)).packed_format().legacy_enums())?;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6560,"byte_end":6667,"line_start":176,"line_end":176,"column_start":1,"column_end":108}},{"value":"/     Ok(vec)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6668,"byte_end":6683,"line_start":177,"line_end":177,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6684,"byte_end":6689,"line_start":178,"line_end":178,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6690,"byte_end":6693,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Serialize, Deserialize)]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6694,"byte_end":6738,"line_start":180,"line_end":180,"column_start":1,"column_end":45}},{"value":"/ enum WithTwoVariants {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6739,"byte_end":6765,"line_start":181,"line_end":181,"column_start":1,"column_end":27}},{"value":"/     FirstVariant,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6766,"byte_end":6787,"line_start":182,"line_end":182,"column_start":1,"column_end":22}},{"value":"/     SecondVariant(u8),","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6788,"byte_end":6814,"line_start":183,"line_end":183,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6815,"byte_end":6820,"line_start":184,"line_end":184,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6821,"byte_end":6824,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ let cbor = to_vec_minimal(&FirstVariant).unwrap();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6825,"byte_end":6879,"line_start":186,"line_end":186,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(cbor.len(), 1);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6880,"byte_end":6910,"line_start":187,"line_end":187,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6911,"byte_end":6914,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ let cbor = to_vec_minimal(&SecondVariant(0)).unwrap();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6915,"byte_end":6973,"line_start":189,"line_end":189,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(cbor.len(), 3);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":6974,"byte_end":7004,"line_start":190,"line_end":190,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7005,"byte_end":7012,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7013,"byte_end":7016,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ # `no-std` support","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7017,"byte_end":7039,"line_start":193,"line_end":193,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7040,"byte_end":7043,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ Serde CBOR supports building in a `no_std` context, use the following lines","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7044,"byte_end":7123,"line_start":195,"line_end":195,"column_start":1,"column_end":80}},{"value":"/ in your `Cargo.toml` dependencies:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7124,"byte_end":7162,"line_start":196,"line_end":196,"column_start":1,"column_end":39}},{"value":"/ ``` toml","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7163,"byte_end":7175,"line_start":197,"line_end":197,"column_start":1,"column_end":13}},{"value":"/ [dependencies]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7176,"byte_end":7194,"line_start":198,"line_end":198,"column_start":1,"column_end":19}},{"value":"/ serde = { version = \"1.0\", default-features = false }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7195,"byte_end":7252,"line_start":199,"line_end":199,"column_start":1,"column_end":58}},{"value":"/ serde_cbor = { version = \"0.10\", default-features = false }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7253,"byte_end":7316,"line_start":200,"line_end":200,"column_start":1,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7317,"byte_end":7324,"line_start":201,"line_end":201,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7325,"byte_end":7328,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ Without the `std` feature the functions [from_reader], [from_slice], [to_vec], and [to_writer]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7329,"byte_end":7427,"line_start":203,"line_end":203,"column_start":1,"column_end":99}},{"value":"/ are not exported. To export [from_slice] and [to_vec] enable the `alloc` feature. The `alloc`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7428,"byte_end":7525,"line_start":204,"line_end":204,"column_start":1,"column_end":98}},{"value":"/ feature uses the [`alloc` library][alloc-lib] and requires at least version 1.36.0 of Rust.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7526,"byte_end":7621,"line_start":205,"line_end":205,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7622,"byte_end":7625,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ [alloc-lib]: https://doc.rust-lang.org/alloc/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7626,"byte_end":7675,"line_start":207,"line_end":207,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7676,"byte_end":7679,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ *Note*: to use derive macros in serde you will need to declare `serde`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7680,"byte_end":7754,"line_start":209,"line_end":209,"column_start":1,"column_end":75}},{"value":"/ dependency like so:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7755,"byte_end":7778,"line_start":210,"line_end":210,"column_start":1,"column_end":24}},{"value":"/ ``` toml","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7779,"byte_end":7791,"line_start":211,"line_end":211,"column_start":1,"column_end":13}},{"value":"/ serde = { version = \"1.0\", default-features = false, features = [\"derive\"] }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7792,"byte_end":7872,"line_start":212,"line_end":212,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7873,"byte_end":7880,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7881,"byte_end":7884,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ Serialize an object with `no_std` and without `alloc`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7885,"byte_end":7943,"line_start":215,"line_end":215,"column_start":1,"column_end":59}},{"value":"/ ``` rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7944,"byte_end":7956,"line_start":216,"line_end":216,"column_start":1,"column_end":13}},{"value":"/ # #[macro_use] extern crate serde_derive;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":7957,"byte_end":8002,"line_start":217,"line_end":217,"column_start":1,"column_end":46}},{"value":"/ # fn main() -> Result<(), serde_cbor::Error> {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8003,"byte_end":8053,"line_start":218,"line_end":218,"column_start":1,"column_end":51}},{"value":"/ use serde::Serialize;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8054,"byte_end":8079,"line_start":219,"line_end":219,"column_start":1,"column_end":26}},{"value":"/ use serde_cbor::Serializer;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8080,"byte_end":8111,"line_start":220,"line_end":220,"column_start":1,"column_end":32}},{"value":"/ use serde_cbor::ser::SliceWrite;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8112,"byte_end":8148,"line_start":221,"line_end":221,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8149,"byte_end":8152,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8153,"byte_end":8177,"line_start":223,"line_end":223,"column_start":1,"column_end":25}},{"value":"/ struct User {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8178,"byte_end":8195,"line_start":224,"line_end":224,"column_start":1,"column_end":18}},{"value":"/     user_id: u32,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8196,"byte_end":8217,"line_start":225,"line_end":225,"column_start":1,"column_end":22}},{"value":"/     password_hash: [u8; 4],","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8218,"byte_end":8249,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8250,"byte_end":8255,"line_start":227,"line_end":227,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8256,"byte_end":8259,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0u8; 100];","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8260,"byte_end":8289,"line_start":229,"line_end":229,"column_start":1,"column_end":30}},{"value":"/ let writer = SliceWrite::new(&mut buf[..]);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8290,"byte_end":8337,"line_start":230,"line_end":230,"column_start":1,"column_end":48}},{"value":"/ let mut ser = Serializer::new(writer);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8338,"byte_end":8380,"line_start":231,"line_end":231,"column_start":1,"column_end":43}},{"value":"/ let user = User {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8381,"byte_end":8402,"line_start":232,"line_end":232,"column_start":1,"column_end":22}},{"value":"/     user_id: 42,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8403,"byte_end":8423,"line_start":233,"line_end":233,"column_start":1,"column_end":21}},{"value":"/     password_hash: [1, 2, 3, 4],","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8424,"byte_end":8460,"line_start":234,"line_end":234,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8461,"byte_end":8467,"line_start":235,"line_end":235,"column_start":1,"column_end":7}},{"value":"/ user.serialize(&mut ser)?;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8468,"byte_end":8498,"line_start":236,"line_end":236,"column_start":1,"column_end":31}},{"value":"/ let writer = ser.into_inner();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8499,"byte_end":8533,"line_start":237,"line_end":237,"column_start":1,"column_end":35}},{"value":"/ let size = writer.bytes_written();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8534,"byte_end":8572,"line_start":238,"line_end":238,"column_start":1,"column_end":39}},{"value":"/ let expected = [","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8573,"byte_end":8593,"line_start":239,"line_end":239,"column_start":1,"column_end":21}},{"value":"/     0xa2, 0x67, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x2a, 0x6d,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8594,"byte_end":8673,"line_start":240,"line_end":240,"column_start":1,"column_end":80}},{"value":"/     0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x68, 0x61, 0x73,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8674,"byte_end":8753,"line_start":241,"line_end":241,"column_start":1,"column_end":80}},{"value":"/     0x68, 0x84, 0x1, 0x2, 0x3, 0x4","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8754,"byte_end":8792,"line_start":242,"line_end":242,"column_start":1,"column_end":39}},{"value":"/ ];","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8793,"byte_end":8799,"line_start":243,"line_end":243,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(&buf[..size], expected);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8800,"byte_end":8839,"line_start":244,"line_end":244,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8840,"byte_end":8852,"line_start":245,"line_end":245,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8853,"byte_end":8860,"line_start":246,"line_end":246,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8861,"byte_end":8868,"line_start":247,"line_end":247,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8869,"byte_end":8872,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ Deserialize an object.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8873,"byte_end":8899,"line_start":249,"line_end":249,"column_start":1,"column_end":27}},{"value":"/ ``` rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8900,"byte_end":8912,"line_start":250,"line_end":250,"column_start":1,"column_end":13}},{"value":"/ # #[macro_use] extern crate serde_derive;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8913,"byte_end":8958,"line_start":251,"line_end":251,"column_start":1,"column_end":46}},{"value":"/ # fn main() -> Result<(), serde_cbor::Error> {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":8959,"byte_end":9009,"line_start":252,"line_end":252,"column_start":1,"column_end":51}},{"value":"/ #[derive(Debug, PartialEq, Deserialize)]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9010,"byte_end":9054,"line_start":253,"line_end":253,"column_start":1,"column_end":45}},{"value":"/ struct User {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9055,"byte_end":9072,"line_start":254,"line_end":254,"column_start":1,"column_end":18}},{"value":"/     user_id: u32,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9073,"byte_end":9094,"line_start":255,"line_end":255,"column_start":1,"column_end":22}},{"value":"/     password_hash: [u8; 4],","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9095,"byte_end":9126,"line_start":256,"line_end":256,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9127,"byte_end":9132,"line_start":257,"line_end":257,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9133,"byte_end":9136,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ let value = [","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9137,"byte_end":9154,"line_start":259,"line_end":259,"column_start":1,"column_end":18}},{"value":"/     0xa2, 0x67, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x2a, 0x6d,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9155,"byte_end":9234,"line_start":260,"line_end":260,"column_start":1,"column_end":80}},{"value":"/     0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x68, 0x61, 0x73,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9235,"byte_end":9314,"line_start":261,"line_end":261,"column_start":1,"column_end":80}},{"value":"/     0x68, 0x84, 0x1, 0x2, 0x3, 0x4","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9315,"byte_end":9353,"line_start":262,"line_end":262,"column_start":1,"column_end":39}},{"value":"/ ];","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9354,"byte_end":9360,"line_start":263,"line_end":263,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9361,"byte_end":9364,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ // from_slice_with_scratch will not alter input data, use it whenever you","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9365,"byte_end":9442,"line_start":265,"line_end":265,"column_start":1,"column_end":78}},{"value":"/ // borrow from somewhere else.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9443,"byte_end":9477,"line_start":266,"line_end":266,"column_start":1,"column_end":35}},{"value":"/ // You will have to size your scratch according to the input data you","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9478,"byte_end":9551,"line_start":267,"line_end":267,"column_start":1,"column_end":74}},{"value":"/ // expect.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9552,"byte_end":9566,"line_start":268,"line_end":268,"column_start":1,"column_end":15}},{"value":"/ use serde_cbor::de::from_slice_with_scratch;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9567,"byte_end":9615,"line_start":269,"line_end":269,"column_start":1,"column_end":49}},{"value":"/ let mut scratch = [0u8; 32];","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9616,"byte_end":9648,"line_start":270,"line_end":270,"column_start":1,"column_end":33}},{"value":"/ let user: User = from_slice_with_scratch(&value[..], &mut scratch)?;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9649,"byte_end":9721,"line_start":271,"line_end":271,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(user, User {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9722,"byte_end":9749,"line_start":272,"line_end":272,"column_start":1,"column_end":28}},{"value":"/     user_id: 42,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9750,"byte_end":9770,"line_start":273,"line_end":273,"column_start":1,"column_end":21}},{"value":"/     password_hash: [1, 2, 3, 4],","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9771,"byte_end":9807,"line_start":274,"line_end":274,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9808,"byte_end":9815,"line_start":275,"line_end":275,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9816,"byte_end":9819,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ let mut value = [","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9820,"byte_end":9841,"line_start":277,"line_end":277,"column_start":1,"column_end":22}},{"value":"/     0xa2, 0x67, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x2a, 0x6d,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9842,"byte_end":9921,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/     0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x68, 0x61, 0x73,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":9922,"byte_end":10001,"line_start":279,"line_end":279,"column_start":1,"column_end":80}},{"value":"/     0x68, 0x84, 0x1, 0x2, 0x3, 0x4","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10002,"byte_end":10040,"line_start":280,"line_end":280,"column_start":1,"column_end":39}},{"value":"/ ];","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10041,"byte_end":10047,"line_start":281,"line_end":281,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10048,"byte_end":10051,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ // from_mut_slice will move data around the input slice, you may only use it","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10052,"byte_end":10132,"line_start":283,"line_end":283,"column_start":1,"column_end":81}},{"value":"/ // on data you may own or can modify.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10133,"byte_end":10174,"line_start":284,"line_end":284,"column_start":1,"column_end":42}},{"value":"/ use serde_cbor::de::from_mut_slice;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10175,"byte_end":10214,"line_start":285,"line_end":285,"column_start":1,"column_end":40}},{"value":"/ let user: User = from_mut_slice(&mut value[..])?;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10215,"byte_end":10268,"line_start":286,"line_end":286,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(user, User {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10269,"byte_end":10296,"line_start":287,"line_end":287,"column_start":1,"column_end":28}},{"value":"/     user_id: 42,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10297,"byte_end":10317,"line_start":288,"line_end":288,"column_start":1,"column_end":21}},{"value":"/     password_hash: [1, 2, 3, 4],","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10318,"byte_end":10354,"line_start":289,"line_end":289,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10355,"byte_end":10362,"line_start":290,"line_end":290,"column_start":1,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10363,"byte_end":10375,"line_start":291,"line_end":291,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10376,"byte_end":10383,"line_start":292,"line_end":292,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10384,"byte_end":10391,"line_start":293,"line_end":293,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10392,"byte_end":10395,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ # Limitations","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10396,"byte_end":10413,"line_start":295,"line_end":295,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10414,"byte_end":10417,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ While Serde CBOR strives to support all features of Serde and CBOR","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10418,"byte_end":10488,"line_start":297,"line_end":297,"column_start":1,"column_end":71}},{"value":"/ there are a few limitations.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10489,"byte_end":10521,"line_start":298,"line_end":298,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10522,"byte_end":10525,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ * [Tags] are ignored during deserialization and can't be emitted during","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10526,"byte_end":10601,"line_start":300,"line_end":300,"column_start":1,"column_end":76}},{"value":"/     serialization. This is because Serde has no concept of tagged","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10602,"byte_end":10671,"line_start":301,"line_end":301,"column_start":1,"column_end":70}},{"value":"/     values. See:&nbsp;[#3]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10672,"byte_end":10702,"line_start":302,"line_end":302,"column_start":1,"column_end":31}},{"value":"/ * Unknown [simple values] cause an `UnassignedCode` error.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10703,"byte_end":10765,"line_start":303,"line_end":303,"column_start":1,"column_end":63}},{"value":"/     The simple values *False* and *True* are recognized and parsed as bool.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10766,"byte_end":10845,"line_start":304,"line_end":304,"column_start":1,"column_end":80}},{"value":"/     *Null* and *Undefined* are both deserialized as *unit*.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10846,"byte_end":10909,"line_start":305,"line_end":305,"column_start":1,"column_end":64}},{"value":"/     The *unit* type is serialized as *Null*. See:&nbsp;[#86]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10910,"byte_end":10974,"line_start":306,"line_end":306,"column_start":1,"column_end":65}},{"value":"/ * [128-bit integers] can't be directly encoded in CBOR. If you need them","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":10975,"byte_end":11051,"line_start":307,"line_end":307,"column_start":1,"column_end":77}},{"value":"/     store them as a byte string. See:&nbsp;[#77]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":11052,"byte_end":11104,"line_start":308,"line_end":308,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":11105,"byte_end":11108,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ [Tags]: https://tools.ietf.org/html/rfc7049#section-2.4.4","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":11109,"byte_end":11170,"line_start":310,"line_end":310,"column_start":1,"column_end":62}},{"value":"/ [#3]: https://github.com/pyfisch/cbor/issues/3","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":11171,"byte_end":11221,"line_start":311,"line_end":311,"column_start":1,"column_end":51}},{"value":"/ [simple values]: https://tools.ietf.org/html/rfc7049#section-3.5","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":11222,"byte_end":11290,"line_start":312,"line_end":312,"column_start":1,"column_end":69}},{"value":"/ [#86]: https://github.com/pyfisch/cbor/issues/86","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":11291,"byte_end":11343,"line_start":313,"line_end":313,"column_start":1,"column_end":53}},{"value":"/ [128-bit integers]: https://doc.rust-lang.org/std/primitive.u128.html","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":11344,"byte_end":11417,"line_start":314,"line_end":314,"column_start":1,"column_end":74}},{"value":"/ [#77]: https://github.com/pyfisch/cbor/issues/77","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":11418,"byte_end":11470,"line_start":315,"line_end":315,"column_start":1,"column_end":53}},{"value":"deny(missing_docs)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":11472,"byte_end":11494,"line_start":317,"line_end":317,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::de","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":67},{"krate":0,"index":1138},{"krate":0,"index":1146},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":83},{"krate":0,"index":152},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":176},{"krate":0,"index":184},{"krate":0,"index":189},{"krate":0,"index":193},{"krate":0,"index":200},{"krate":0,"index":205},{"krate":0,"index":212},{"krate":0,"index":222},{"krate":0,"index":227},{"krate":0,"index":233},{"krate":0,"index":242},{"krate":0,"index":246},{"krate":0,"index":254},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":276},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":1203},{"krate":0,"index":1210},{"krate":0,"index":296},{"krate":0,"index":301},{"krate":0,"index":306},{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":322}],"decl_id":null,"docs":" Deserialization.\n","sig":null,"attributes":[{"value":"/ Deserialization.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":12703,"byte_end":12723,"line_start":1,"line_end":1,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":57},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13957,"byte_end":13967,"line_start":47,"line_end":47,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::de::from_slice","value":"pub fn from_slice<'a, T>(&'a [u8]) -> Result<T> where T: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Decodes a value from CBOR data in a slice.","sig":null,"attributes":[{"value":"/ Decodes a value from CBOR data in a slice.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13341,"byte_end":13387,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13388,"byte_end":13391,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13392,"byte_end":13406,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13407,"byte_end":13410,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Deserialize a `String`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13411,"byte_end":13437,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13438,"byte_end":13441,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13442,"byte_end":13449,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ # use serde_cbor::de;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13450,"byte_end":13475,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"/ let v: Vec<u8> = vec![0x66, 0x66, 0x6f, 0x6f, 0x62, 0x61, 0x72];","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13476,"byte_end":13544,"line_start":33,"line_end":33,"column_start":1,"column_end":69}},{"value":"/ let value: String = de::from_slice(&v[..]).unwrap();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13545,"byte_end":13601,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(value, \"foobar\");","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13602,"byte_end":13634,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13635,"byte_end":13642,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13643,"byte_end":13646,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Deserialize a borrowed string with zero copies.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13647,"byte_end":13698,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13699,"byte_end":13702,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13703,"byte_end":13710,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # use serde_cbor::de;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13711,"byte_end":13736,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/ let v: Vec<u8> = vec![0x66, 0x66, 0x6f, 0x6f, 0x62, 0x61, 0x72];","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13737,"byte_end":13805,"line_start":42,"line_end":42,"column_start":1,"column_end":69}},{"value":"/ let value: &str = de::from_slice(&v[..]).unwrap();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13806,"byte_end":13860,"line_start":43,"line_end":43,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(value, \"foobar\");","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13861,"byte_end":13893,"line_start":44,"line_end":44,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13894,"byte_end":13901,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":13902,"byte_end":13949,"line_start":46,"line_end":46,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":60},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":14679,"byte_end":14693,"line_start":64,"line_end":64,"column_start":8,"column_end":22},"name":"from_mut_slice","qualname":"::de::from_mut_slice","value":"pub fn from_mut_slice<'a, T>(&'a mut [u8]) -> Result<T> where\nT: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Decode a value from CBOR data in a mutable slice.","sig":null,"attributes":[{"value":"/ Decode a value from CBOR data in a mutable slice.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":14389,"byte_end":14442,"line_start":59,"line_end":59,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":14443,"byte_end":14446,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This can be used in analogy to `from_slice`. Unlike `from_slice`, this will use the slice's","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":14447,"byte_end":14542,"line_start":61,"line_end":61,"column_start":1,"column_end":96}},{"value":"/ mutability to rearrange data in it in order to resolve indefinite byte or text strings without","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":14543,"byte_end":14641,"line_start":62,"line_end":62,"column_start":1,"column_end":99}},{"value":"/ resorting to allocations.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":14642,"byte_end":14671,"line_start":63,"line_end":63,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":63},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":15535,"byte_end":15558,"line_start":84,"line_end":84,"column_start":8,"column_end":31},"name":"from_slice_with_scratch","qualname":"::de::from_slice_with_scratch","value":"pub fn from_slice_with_scratch<'a, 'b, T>(&'a [u8], &'b mut [u8]) -> Result<T>\nwhere T: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Decode a value from CBOR data using a scratch buffer.","sig":null,"attributes":[{"value":"/ Decode a value from CBOR data using a scratch buffer.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":15152,"byte_end":15209,"line_start":77,"line_end":77,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":15210,"byte_end":15213,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Users should generally prefer to use `from_slice` or `from_mut_slice` over this function,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":15214,"byte_end":15307,"line_start":79,"line_end":79,"column_start":1,"column_end":94}},{"value":"/ as decoding may fail when the scratch buffer turns out to be too small.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":15308,"byte_end":15383,"line_start":80,"line_end":80,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":15384,"byte_end":15387,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ A realistic use case for this method would be decoding in a `no_std` environment from an","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":15388,"byte_end":15480,"line_start":82,"line_end":82,"column_start":1,"column_end":93}},{"value":"/ immutable slice that is too large to copy.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":15481,"byte_end":15527,"line_start":83,"line_end":83,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":67},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":16452,"byte_end":16463,"line_start":116,"line_end":116,"column_start":8,"column_end":19},"name":"from_reader","qualname":"::de::from_reader","value":"pub fn from_reader<T, R>(R) -> Result<T> where T: de::DeserializeOwned,\nR: io::Read","parent":null,"children":[],"decl_id":null,"docs":" Decodes a value from CBOR data in a reader.","sig":null,"attributes":[{"value":"/ Decodes a value from CBOR data in a reader.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":15849,"byte_end":15896,"line_start":94,"line_end":94,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":15897,"byte_end":15900,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":15901,"byte_end":15915,"line_start":96,"line_end":96,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":15916,"byte_end":15919,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Deserialize a `String`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":15920,"byte_end":15946,"line_start":98,"line_end":98,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":15947,"byte_end":15950,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":15951,"byte_end":15958,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # use serde_cbor::de;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":15959,"byte_end":15984,"line_start":101,"line_end":101,"column_start":1,"column_end":26}},{"value":"/ let v: Vec<u8> = vec![0x66, 0x66, 0x6f, 0x6f, 0x62, 0x61, 0x72];","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":15985,"byte_end":16053,"line_start":102,"line_end":102,"column_start":1,"column_end":69}},{"value":"/ let value: String = de::from_reader(&v[..]).unwrap();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":16054,"byte_end":16111,"line_start":103,"line_end":103,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(value, \"foobar\");","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":16112,"byte_end":16144,"line_start":104,"line_end":104,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":16145,"byte_end":16152,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":16153,"byte_end":16156,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ Note that `from_reader` cannot borrow data:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":16157,"byte_end":16204,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":16205,"byte_end":16208,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":16209,"byte_end":16228,"line_start":109,"line_end":109,"column_start":1,"column_end":20}},{"value":"/ # use serde_cbor::de;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":16229,"byte_end":16254,"line_start":110,"line_end":110,"column_start":1,"column_end":26}},{"value":"/ let v: Vec<u8> = vec![0x66, 0x66, 0x6f, 0x6f, 0x62, 0x61, 0x72];","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":16255,"byte_end":16323,"line_start":111,"line_end":111,"column_start":1,"column_end":69}},{"value":"/ let value: &str = de::from_reader(&v[..]).unwrap();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":16324,"byte_end":16379,"line_start":112,"line_end":112,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(value, \"foobar\");","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":16380,"byte_end":16412,"line_start":113,"line_end":113,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":16413,"byte_end":16420,"line_start":114,"line_end":114,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":16421,"byte_end":16444,"line_start":115,"line_end":115,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1138},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":16787,"byte_end":16799,"line_start":129,"line_end":129,"column_start":12,"column_end":24},"name":"Deserializer","qualname":"::de::Deserializer","value":"Deserializer {  }","parent":null,"children":[{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1145}],"decl_id":null,"docs":" A Serde `Deserialize`r of CBOR data.\n","sig":null,"attributes":[{"value":"/ A Serde `Deserialize`r of CBOR data.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":16718,"byte_end":16758,"line_start":127,"line_end":127,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":17116,"byte_end":17127,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"from_reader","qualname":"<Deserializer<IoRead<R>>>::from_reader","value":"pub fn from_reader(R) -> Deserializer<IoRead<R>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `Deserializer` which reads from a `Read`er.\n","sig":null,"attributes":[{"value":"/ Constructs a `Deserializer` which reads from a `Read`er.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":17044,"byte_end":17104,"line_start":143,"line_end":143,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":17465,"byte_end":17475,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Deserializer<SliceRead>>::from_slice","value":"pub fn from_slice(&'a [u8]) -> Deserializer<SliceRead>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `Deserializer` which reads from a slice.","sig":null,"attributes":[{"value":"/ Constructs a `Deserializer` which reads from a slice.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":17315,"byte_end":17372,"line_start":151,"line_end":151,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":17377,"byte_end":17380,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Borrowed strings and byte slices will be provided when possible.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":17385,"byte_end":17453,"line_start":153,"line_end":153,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":17849,"byte_end":17863,"line_start":164,"line_end":164,"column_start":12,"column_end":26},"name":"from_mut_slice","qualname":"<Deserializer<MutSliceRead>>::from_mut_slice","value":"pub fn from_mut_slice(&'a mut [u8]) -> Deserializer<MutSliceRead>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `Deserializer` which reads from a mutable slice that doubles as its own\n scratch buffer.","sig":null,"attributes":[{"value":"/ Constructs a `Deserializer` which reads from a mutable slice that doubles as its own","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":17630,"byte_end":17718,"line_start":160,"line_end":160,"column_start":5,"column_end":93}},{"value":"/ scratch buffer.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":17723,"byte_end":17742,"line_start":161,"line_end":161,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":17747,"byte_end":17750,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Borrowed strings and byte slices will be provided even for indefinite strings.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":17755,"byte_end":17837,"line_start":163,"line_end":163,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":18064,"byte_end":18087,"line_start":171,"line_end":171,"column_start":12,"column_end":35},"name":"from_slice_with_scratch","qualname":"<Deserializer<SliceReadFixed>>::from_slice_with_scratch","value":"pub fn from_slice_with_scratch(&'a [u8], &'b mut [u8])\n-> Deserializer<SliceReadFixed>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":18513,"byte_end":18516,"line_start":186,"line_end":186,"column_start":12,"column_end":15},"name":"new","qualname":"<Deserializer<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `Deserializer` from one of the possible serde_cbor input sources.","sig":null,"attributes":[{"value":"/ Constructs a `Deserializer` from one of the possible serde_cbor input sources.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":18324,"byte_end":18406,"line_start":183,"line_end":183,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":18411,"byte_end":18414,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ `from_slice` and `from_reader` should normally be used instead of this method.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":18419,"byte_end":18501,"line_start":185,"line_end":185,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":18832,"byte_end":18852,"line_start":198,"line_end":198,"column_start":12,"column_end":32},"name":"disable_named_format","qualname":"<Deserializer<R>>::disable_named_format","value":"pub fn disable_named_format(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Don't accept named variants and fields.\n","sig":null,"attributes":[{"value":"/ Don't accept named variants and fields.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":18777,"byte_end":18820,"line_start":197,"line_end":197,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":18990,"byte_end":19011,"line_start":204,"line_end":204,"column_start":12,"column_end":33},"name":"disable_packed_format","qualname":"<Deserializer<R>>::disable_packed_format","value":"pub fn disable_packed_format(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Don't accept numbered variants and fields.\n","sig":null,"attributes":[{"value":"/ Don't accept numbered variants and fields.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":18932,"byte_end":18978,"line_start":203,"line_end":203,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":19180,"byte_end":19202,"line_start":210,"line_end":210,"column_start":12,"column_end":34},"name":"disable_standard_enums","qualname":"<Deserializer<R>>::disable_standard_enums","value":"pub fn disable_standard_enums(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Don't accept the new enum format used by `serde_cbor` versions >= v0.10.\n","sig":null,"attributes":[{"value":"/ Don't accept the new enum format used by `serde_cbor` versions >= v0.10.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":19092,"byte_end":19168,"line_start":209,"line_end":209,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":19378,"byte_end":19398,"line_start":216,"line_end":216,"column_start":12,"column_end":32},"name":"disable_legacy_enums","qualname":"<Deserializer<R>>::disable_legacy_enums","value":"pub fn disable_legacy_enums(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Don't accept the old enum format used by `serde_cbor` versions <= v0.9.\n","sig":null,"attributes":[{"value":"/ Don't accept the old enum format used by `serde_cbor` versions <= v0.9.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":19291,"byte_end":19366,"line_start":215,"line_end":215,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":19630,"byte_end":19633,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"end","qualname":"<Deserializer<R>>::end","value":"pub fn end(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" This method should be called after a value has been deserialized to ensure there is no\n trailing data in the input source.\n","sig":null,"attributes":[{"value":"/ This method should be called after a value has been deserialized to ensure there is no","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":19485,"byte_end":19575,"line_start":221,"line_end":221,"column_start":5,"column_end":95}},{"value":"/ trailing data in the input source.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":19580,"byte_end":19618,"line_start":222,"line_end":222,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":19969,"byte_end":19978,"line_start":232,"line_end":232,"column_start":12,"column_end":21},"name":"into_iter","qualname":"<Deserializer<R>>::into_iter","value":"pub fn into_iter<T>(Self) -> StreamDeserializer where T: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Turn a CBOR deserializer into an iterator over values of type T.\n","sig":null,"attributes":[{"value":"/ Turn a CBOR deserializer into an iterator over values of type T.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":19804,"byte_end":19872,"line_start":230,"line_end":230,"column_start":5,"column_end":73}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":19877,"byte_end":19917,"line_start":231,"line_end":231,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":41468,"byte_end":41479,"line_start":894,"line_end":894,"column_start":12,"column_end":23},"name":"byte_offset","qualname":"<Deserializer<R>>::byte_offset","value":"pub fn byte_offset(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the current offset in the reader\n","sig":null,"attributes":[{"value":"/ Return the current offset in the reader","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":41399,"byte_end":41442,"line_start":892,"line_end":892,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":41447,"byte_end":41456,"line_start":893,"line_end":893,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1203},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":49934,"byte_end":49952,"line_start":1246,"line_end":1246,"column_start":12,"column_end":30},"name":"StreamDeserializer","qualname":"::de::StreamDeserializer","value":"StreamDeserializer {  }","parent":null,"children":[{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209}],"decl_id":null,"docs":" Iterator that deserializes a stream into multiple CBOR values.","sig":null,"attributes":[{"value":"/ Iterator that deserializes a stream into multiple CBOR values.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":49210,"byte_end":49276,"line_start":1220,"line_end":1220,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":49277,"byte_end":49280,"line_start":1221,"line_end":1221,"column_start":1,"column_end":4}},{"value":"/ A stream deserializer can be created from any CBOR deserializer using the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":49281,"byte_end":49358,"line_start":1222,"line_end":1222,"column_start":1,"column_end":78}},{"value":"/ `Deserializer::into_iter` method.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":49359,"byte_end":49396,"line_start":1223,"line_end":1223,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":49397,"byte_end":49400,"line_start":1224,"line_end":1224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":49401,"byte_end":49408,"line_start":1225,"line_end":1225,"column_start":1,"column_end":8}},{"value":"/ # extern crate serde_cbor;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":49409,"byte_end":49439,"line_start":1226,"line_end":1226,"column_start":1,"column_end":31}},{"value":"/ use serde_cbor::de::Deserializer;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":49440,"byte_end":49477,"line_start":1227,"line_end":1227,"column_start":1,"column_end":38}},{"value":"/ use serde_cbor::value::Value;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":49478,"byte_end":49511,"line_start":1228,"line_end":1228,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":49512,"byte_end":49515,"line_start":1229,"line_end":1229,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":49516,"byte_end":49533,"line_start":1230,"line_end":1230,"column_start":1,"column_end":18}},{"value":"/ let data: Vec<u8> = vec![","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":49534,"byte_end":49563,"line_start":1231,"line_end":1231,"column_start":1,"column_end":30}},{"value":"/     0x01, 0x66, 0x66, 0x6f, 0x6f, 0x62, 0x61, 0x72,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":49564,"byte_end":49619,"line_start":1232,"line_end":1232,"column_start":1,"column_end":56}},{"value":"/ ];","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":49620,"byte_end":49626,"line_start":1233,"line_end":1233,"column_start":1,"column_end":7}},{"value":"/ let mut it = Deserializer::from_slice(&data[..]).into_iter::<Value>();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":49627,"byte_end":49701,"line_start":1234,"line_end":1234,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":49702,"byte_end":49717,"line_start":1235,"line_end":1235,"column_start":1,"column_end":16}},{"value":"/     Value::Integer(1),","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":49718,"byte_end":49744,"line_start":1236,"line_end":1236,"column_start":1,"column_end":27}},{"value":"/     it.next().unwrap().unwrap()","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":49745,"byte_end":49780,"line_start":1237,"line_end":1237,"column_start":1,"column_end":36}},{"value":"/ );","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":49781,"byte_end":49787,"line_start":1238,"line_end":1238,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":49788,"byte_end":49803,"line_start":1239,"line_end":1239,"column_start":1,"column_end":16}},{"value":"/     Value::Text(\"foobar\".to_string()),","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":49804,"byte_end":49846,"line_start":1240,"line_end":1240,"column_start":1,"column_end":43}},{"value":"/     it.next().unwrap().unwrap()","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":49847,"byte_end":49882,"line_start":1241,"line_end":1241,"column_start":1,"column_end":36}},{"value":"/ );","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":49883,"byte_end":49889,"line_start":1242,"line_end":1242,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":49890,"byte_end":49897,"line_start":1243,"line_end":1243,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":49898,"byte_end":49905,"line_start":1244,"line_end":1244,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":50477,"byte_end":50480,"line_start":1264,"line_end":1264,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamDeserializer>::new","value":"pub fn new(R) -> StreamDeserializer","parent":null,"children":[],"decl_id":null,"docs":" Create a new CBOR stream deserializer from one of the possible\n serde_cbor input sources.","sig":null,"attributes":[{"value":"/ Create a new CBOR stream deserializer from one of the possible","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":50163,"byte_end":50229,"line_start":1257,"line_end":1257,"column_start":5,"column_end":71}},{"value":"/ serde_cbor input sources.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":50234,"byte_end":50263,"line_start":1258,"line_end":1258,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":50268,"byte_end":50271,"line_start":1259,"line_end":1259,"column_start":5,"column_end":8}},{"value":"/ Typically it is more convenient to use one of these methods instead:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":50276,"byte_end":50348,"line_start":1260,"line_end":1260,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":50353,"byte_end":50356,"line_start":1261,"line_end":1261,"column_start":5,"column_end":8}},{"value":"/ * `Deserializer::from_slice(...).into_iter()`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":50361,"byte_end":50410,"line_start":1262,"line_end":1262,"column_start":5,"column_end":54}},{"value":"/ * `Deserializer::from_reader(...).into_iter()`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":50415,"byte_end":50465,"line_start":1263,"line_end":1263,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":50853,"byte_end":50864,"line_start":1280,"line_end":1280,"column_start":12,"column_end":23},"name":"byte_offset","qualname":"<StreamDeserializer>::byte_offset","value":"pub fn byte_offset(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the current offset in the reader\n","sig":null,"attributes":[{"value":"/ Return the current offset in the reader","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":50784,"byte_end":50827,"line_start":1278,"line_end":1278,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":50832,"byte_end":50841,"line_start":1279,"line_end":1279,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":333},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":343},{"krate":0,"index":346},{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":1215},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1227},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":357},{"krate":0,"index":370},{"krate":0,"index":372},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":1235},{"krate":0,"index":1238},{"krate":0,"index":1240},{"krate":0,"index":1275},{"krate":0,"index":385}],"decl_id":null,"docs":" When serializing or deserializing CBOR goes wrong.\n","sig":null,"attributes":[{"value":"/ When serializing or deserializing CBOR goes wrong.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":52860,"byte_end":52914,"line_start":1,"line_end":1,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":352},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":53177,"byte_end":53182,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" This type represents all possible errors that can occur when serializing or deserializing CBOR\n data.\n","sig":null,"attributes":[{"value":"/ This type represents all possible errors that can occur when serializing or deserializing CBOR","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":53057,"byte_end":53155,"line_start":11,"line_end":11,"column_start":1,"column_end":99}},{"value":"/ data.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":53156,"byte_end":53165,"line_start":12,"line_end":12,"column_start":1,"column_end":10}}]},{"kind":"Type","id":{"krate":0,"index":355},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":53271,"byte_end":53277,"line_start":16,"line_end":16,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Alias for a `Result` with the error type `serde_cbor::Error`.\n","sig":null,"attributes":[{"value":"/ Alias for a `Result` with the error type `serde_cbor::Error`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":53196,"byte_end":53261,"line_start":15,"line_end":15,"column_start":1,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1216},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":53513,"byte_end":53515,"line_start":22,"line_end":22,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::Category::Io","value":"Category::Io","parent":{"krate":0,"index":1215},"children":[],"decl_id":null,"docs":" The error was caused by a failure to read or write bytes on an IO stream.\n","sig":null,"attributes":[{"value":"/ The error was caused by a failure to read or write bytes on an IO stream.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":53431,"byte_end":53508,"line_start":21,"line_end":21,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1218},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":53598,"byte_end":53604,"line_start":24,"line_end":24,"column_start":5,"column_end":11},"name":"Syntax","qualname":"::error::Category::Syntax","value":"Category::Syntax","parent":{"krate":0,"index":1215},"children":[],"decl_id":null,"docs":" The error was caused by input that was not syntactically valid CBOR.\n","sig":null,"attributes":[{"value":"/ The error was caused by input that was not syntactically valid CBOR.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":53521,"byte_end":53593,"line_start":23,"line_end":23,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1220},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":53686,"byte_end":53690,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Data","qualname":"::error::Category::Data","value":"Category::Data","parent":{"krate":0,"index":1215},"children":[],"decl_id":null,"docs":" The error was caused by input data that was semantically incorrect.\n","sig":null,"attributes":[{"value":"/ The error was caused by input data that was semantically incorrect.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":53610,"byte_end":53681,"line_start":25,"line_end":25,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1222},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":53776,"byte_end":53779,"line_start":28,"line_end":28,"column_start":5,"column_end":8},"name":"Eof","qualname":"::error::Category::Eof","value":"Category::Eof","parent":{"krate":0,"index":1215},"children":[],"decl_id":null,"docs":" The error was caused by prematurely reaching the end of the input data.\n","sig":null,"attributes":[{"value":"/ The error was caused by prematurely reaching the end of the input data.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":53696,"byte_end":53771,"line_start":27,"line_end":27,"column_start":5,"column_end":80}}]},{"kind":"Enum","id":{"krate":0,"index":1215},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":53416,"byte_end":53424,"line_start":20,"line_end":20,"column_start":10,"column_end":18},"name":"Category","qualname":"::error::Category","value":"pub enum Category { Io, Syntax, Data, Eof, }","parent":null,"children":[{"krate":0,"index":1216},{"krate":0,"index":1218},{"krate":0,"index":1220},{"krate":0,"index":1222}],"decl_id":null,"docs":" Categorizes the cause of a `serde_cbor::Error`.\n","sig":null,"attributes":[{"value":"/ Categorizes the cause of a `serde_cbor::Error`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":53310,"byte_end":53361,"line_start":18,"line_end":18,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":53861,"byte_end":53867,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"name":"offset","qualname":"<Error>::offset","value":"pub fn offset(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The byte offset at which the error occurred.\n","sig":null,"attributes":[{"value":"/ The byte offset at which the error occurred.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":53801,"byte_end":53849,"line_start":32,"line_end":32,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":56446,"byte_end":56454,"line_start":125,"line_end":125,"column_start":12,"column_end":20},"name":"classify","qualname":"<Error>::classify","value":"pub fn classify(&Self) -> Category","parent":null,"children":[],"decl_id":null,"docs":" Categorizes the cause of this error.\n","sig":null,"attributes":[{"value":"/ Categorizes the cause of this error.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":56394,"byte_end":56434,"line_start":124,"line_end":124,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":57610,"byte_end":57615,"line_start":153,"line_end":153,"column_start":12,"column_end":17},"name":"is_io","qualname":"<Error>::is_io","value":"pub fn is_io(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this error was caused by a failure to read or write bytes on an IO stream.\n","sig":null,"attributes":[{"value":"/ Returns true if this error was caused by a failure to read or write bytes on an IO stream.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":57504,"byte_end":57598,"line_start":152,"line_end":152,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":57845,"byte_end":57854,"line_start":161,"line_end":161,"column_start":12,"column_end":21},"name":"is_syntax","qualname":"<Error>::is_syntax","value":"pub fn is_syntax(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this error was caused by input that was not syntactically valid CBOR.\n","sig":null,"attributes":[{"value":"/ Returns true if this error was caused by input that was not syntactically valid CBOR.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":57744,"byte_end":57833,"line_start":160,"line_end":160,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":58081,"byte_end":58088,"line_start":169,"line_end":169,"column_start":12,"column_end":19},"name":"is_data","qualname":"<Error>::is_data","value":"pub fn is_data(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this error was caused by data that was semantically incorrect.\n","sig":null,"attributes":[{"value":"/ Returns true if this error was caused by data that was semantically incorrect.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":57987,"byte_end":58069,"line_start":168,"line_end":168,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":58323,"byte_end":58329,"line_start":177,"line_end":177,"column_start":12,"column_end":18},"name":"is_eof","qualname":"<Error>::is_eof","value":"pub fn is_eof(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this error was caused by prematurely reaching the end of the input data.\n","sig":null,"attributes":[{"value":"/ Returns true if this error was caused by prematurely reaching the end of the input data.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":58219,"byte_end":58311,"line_start":176,"line_end":176,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":58629,"byte_end":58649,"line_start":187,"line_end":187,"column_start":12,"column_end":32},"name":"is_scratch_too_small","qualname":"<Error>::is_scratch_too_small","value":"pub fn is_scratch_too_small(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this error was caused by the scratch buffer being too small.","sig":null,"attributes":[{"value":"/ Returns true if this error was caused by the scratch buffer being too small.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":58459,"byte_end":58539,"line_start":184,"line_end":184,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":58544,"byte_end":58547,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ Note this being `true` implies that `is_io()` is also `true`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":58552,"byte_end":58617,"line_start":186,"line_end":186,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":411},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":63112,"byte_end":63116,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"name":"Read","qualname":"::read::Read","value":"Read<'de>: private::Sealed","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423}],"decl_id":null,"docs":" Trait used by the deserializer for iterating over input.","sig":null,"attributes":[{"value":"cfg(not(feature = \"unsealed_read_write\"))","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":62825,"byte_end":62869,"line_start":12,"line_end":12,"column_start":1,"column_end":45}},{"value":"/ Trait used by the deserializer for iterating over input.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":62870,"byte_end":62930,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":62931,"byte_end":62934,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed by default, enabling the `unsealed_read_write` feature removes this bound","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":62935,"byte_end":63033,"line_start":15,"line_end":15,"column_start":1,"column_end":99}},{"value":"/ to allow objects outside of this crate to implement this trait.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":63034,"byte_end":63101,"line_start":16,"line_end":16,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":64129,"byte_end":64133,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"read","qualname":"::read::Read::read","value":"pub fn read<'a>(&'a mut Self, usize) -> Result<EitherLifetime>","parent":{"krate":0,"index":411},"children":[],"decl_id":null,"docs":" Read n bytes from the input.","sig":null,"attributes":[{"value":"/ Read n bytes from the input.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":63164,"byte_end":63196,"line_start":19,"line_end":19,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":63201,"byte_end":63204,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ Implementations that can are asked to return a slice with a Long lifetime that outlives the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":63209,"byte_end":63304,"line_start":21,"line_end":21,"column_start":5,"column_end":100}},{"value":"/ decoder, but others (eg. ones that need to allocate the data into a temporary buffer) can","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":63309,"byte_end":63402,"line_start":22,"line_end":22,"column_start":5,"column_end":98}},{"value":"/ return it with a Short lifetime that just lives for the time of read's mutable borrow of","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":63407,"byte_end":63499,"line_start":23,"line_end":23,"column_start":5,"column_end":97}},{"value":"/ the reader.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":63504,"byte_end":63519,"line_start":24,"line_end":24,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":63524,"byte_end":63527,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This may, as a side effect, clear the reader's scratch buffer (as the provided","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":63532,"byte_end":63614,"line_start":26,"line_end":26,"column_start":5,"column_end":87}},{"value":"/ implementation does).","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":63619,"byte_end":63644,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":64326,"byte_end":64330,"line_start":42,"line_end":42,"column_start":8,"column_end":12},"name":"next","qualname":"::read::Read::next","value":"pub fn next(&mut Self) -> Result<Option<u8>>","parent":{"krate":0,"index":411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":64392,"byte_end":64396,"line_start":45,"line_end":45,"column_start":8,"column_end":12},"name":"peek","qualname":"::read::Read::peek","value":"pub fn peek(&mut Self) -> Result<Option<u8>>","parent":{"krate":0,"index":411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":64458,"byte_end":64470,"line_start":48,"line_end":48,"column_start":8,"column_end":20},"name":"clear_buffer","qualname":"::read::Read::clear_buffer","value":"pub fn clear_buffer(&mut Self)","parent":{"krate":0,"index":411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":64510,"byte_end":64524,"line_start":51,"line_end":51,"column_start":8,"column_end":22},"name":"read_to_buffer","qualname":"::read::Read::read_to_buffer","value":"pub fn read_to_buffer(&mut Self, usize) -> Result<()>","parent":{"krate":0,"index":411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":64588,"byte_end":64599,"line_start":54,"line_end":54,"column_start":8,"column_end":19},"name":"take_buffer","qualname":"::read::Read::take_buffer","value":"pub fn take_buffer<'a>(&'a mut Self) -> EitherLifetime","parent":{"krate":0,"index":411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":64673,"byte_end":64682,"line_start":57,"line_end":57,"column_start":8,"column_end":17},"name":"read_into","qualname":"::read::Read::read_into","value":"pub fn read_into(&mut Self, &mut [u8]) -> Result<()>","parent":{"krate":0,"index":411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":64752,"byte_end":64759,"line_start":60,"line_end":60,"column_start":8,"column_end":15},"name":"discard","qualname":"::read::Read::discard","value":"pub fn discard(&mut Self)","parent":{"krate":0,"index":411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":64799,"byte_end":64805,"line_start":63,"line_end":63,"column_start":8,"column_end":14},"name":"offset","qualname":"::read::Read::offset","value":"pub fn offset(&Self) -> u64","parent":{"krate":0,"index":411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":424},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":67189,"byte_end":67195,"line_start":119,"line_end":119,"column_start":11,"column_end":17},"name":"Offset","qualname":"::read::Offset","value":"Offset","parent":null,"children":[{"krate":0,"index":425}],"decl_id":null,"docs":" Represents a reader that can return its current position\n","sig":null,"attributes":[{"value":"/ Represents a reader that can return its current position","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":67118,"byte_end":67178,"line_start":118,"line_end":118,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":67205,"byte_end":67216,"line_start":120,"line_end":120,"column_start":8,"column_end":19},"name":"byte_offset","qualname":"::read::Offset::byte_offset","value":"pub fn byte_offset(&Self) -> usize","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":429},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":67360,"byte_end":67365,"line_start":126,"line_end":126,"column_start":5,"column_end":10},"name":"Short","qualname":"::read::EitherLifetime::Short","value":"EitherLifetime::Short(&'short [u8])","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" The short lifetime\n","sig":null,"attributes":[{"value":"/ The short lifetime","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":67333,"byte_end":67355,"line_start":125,"line_end":125,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":432},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":67411,"byte_end":67415,"line_start":128,"line_end":128,"column_start":5,"column_end":9},"name":"Long","qualname":"::read::EitherLifetime::Long","value":"EitherLifetime::Long(&'long [u8])","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" The long lifetime\n","sig":null,"attributes":[{"value":"/ The long lifetime","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":67385,"byte_end":67406,"line_start":127,"line_end":127,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":426},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":67297,"byte_end":67311,"line_start":124,"line_end":124,"column_start":10,"column_end":24},"name":"EitherLifetime","qualname":"::read::EitherLifetime","value":"pub enum EitherLifetime<'short, 'long> {\n    Short(&'short [u8]),\n    Long(&'long [u8]),\n}","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":432}],"decl_id":null,"docs":" Represents a buffer with one of two lifetimes.\n","sig":null,"attributes":[{"value":"/ Represents a buffer with one of two lifetimes.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":67237,"byte_end":67287,"line_start":123,"line_end":123,"column_start":1,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":436},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":67506,"byte_end":67512,"line_start":133,"line_end":133,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::read::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1277},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":67633,"byte_end":67639,"line_start":139,"line_end":139,"column_start":12,"column_end":18},"name":"IoRead","qualname":"::read::IoRead","value":"IoRead {  }","parent":null,"children":[{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281}],"decl_id":null,"docs":" CBOR input source that reads from a std::io input stream.\n","sig":null,"attributes":[{"value":"/ CBOR input source that reads from a std::io input stream.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":67519,"byte_end":67580,"line_start":136,"line_end":136,"column_start":1,"column_end":62}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":67581,"byte_end":67604,"line_start":137,"line_end":137,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":67897,"byte_end":67900,"line_start":154,"line_end":154,"column_start":12,"column_end":15},"name":"new","qualname":"<IoRead<R>>::new","value":"pub fn new(R) -> IoRead<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CBOR input source to read from a std::io input stream.\n","sig":null,"attributes":[{"value":"/ Creates a new CBOR input source to read from a std::io input stream.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":67813,"byte_end":67885,"line_start":153,"line_end":153,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":1292},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":71674,"byte_end":71683,"line_start":301,"line_end":301,"column_start":12,"column_end":21},"name":"SliceRead","qualname":"::read::SliceRead","value":"SliceRead {  }","parent":null,"children":[{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296}],"decl_id":null,"docs":" A CBOR input source that reads from a slice of bytes.\n","sig":null,"attributes":[{"value":"/ A CBOR input source that reads from a slice of bytes.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":71540,"byte_end":71597,"line_start":298,"line_end":298,"column_start":1,"column_end":58}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":71598,"byte_end":71645,"line_start":299,"line_end":299,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":71905,"byte_end":71908,"line_start":310,"line_end":310,"column_start":12,"column_end":15},"name":"new","qualname":"<SliceRead>::new","value":"pub fn new(&'a [u8]) -> SliceRead","parent":null,"children":[],"decl_id":null,"docs":" Creates a CBOR input source to read from a slice of bytes.\n","sig":null,"attributes":[{"value":"/ Creates a CBOR input source to read from a slice of bytes.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":71831,"byte_end":71893,"line_start":309,"line_end":309,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1300},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":74536,"byte_end":74550,"line_start":413,"line_end":413,"column_start":12,"column_end":26},"name":"SliceReadFixed","qualname":"::read::SliceReadFixed","value":"SliceReadFixed {  }","parent":null,"children":[{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306}],"decl_id":null,"docs":" A CBOR input source that reads from a slice of bytes using a fixed size scratch buffer.","sig":null,"attributes":[{"value":"/ A CBOR input source that reads from a slice of bytes using a fixed size scratch buffer.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":74243,"byte_end":74334,"line_start":408,"line_end":408,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":74335,"byte_end":74338,"line_start":409,"line_end":409,"column_start":1,"column_end":4}},{"value":"/ [`SliceRead`](struct.SliceRead.html) and [`MutSliceRead`](struct.MutSliceRead.html) are usually","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":74339,"byte_end":74438,"line_start":410,"line_end":410,"column_start":1,"column_end":100}},{"value":"/ preferred over this, as they can handle indefinite length items.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":74439,"byte_end":74507,"line_start":411,"line_end":411,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":74800,"byte_end":74803,"line_start":422,"line_end":422,"column_start":12,"column_end":15},"name":"new","qualname":"<SliceReadFixed>::new","value":"pub fn new(&'a [u8], &'b mut [u8]) -> SliceReadFixed","parent":null,"children":[],"decl_id":null,"docs":" Creates a CBOR input source to read from a slice of bytes, backed by a scratch buffer.\n","sig":null,"attributes":[{"value":"/ Creates a CBOR input source to read from a slice of bytes, backed by a scratch buffer.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":74698,"byte_end":74788,"line_start":421,"line_end":421,"column_start":5,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":1311},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":77725,"byte_end":77737,"line_start":528,"line_end":528,"column_start":12,"column_end":24},"name":"MutSliceRead","qualname":"::read::MutSliceRead","value":"MutSliceRead {  }","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316}],"decl_id":null,"docs":" A CBOR input source that reads from a slice of bytes, and can move data around internally to\n reassemble indefinite strings without the need of an allocated scratch buffer.\n","sig":null,"attributes":[{"value":"/ A CBOR input source that reads from a slice of bytes, and can move data around internally to","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":77517,"byte_end":77613,"line_start":525,"line_end":525,"column_start":1,"column_end":97}},{"value":"/ reassemble indefinite strings without the need of an allocated scratch buffer.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":77614,"byte_end":77696,"line_start":526,"line_end":526,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":78255,"byte_end":78258,"line_start":542,"line_end":542,"column_start":12,"column_end":15},"name":"new","qualname":"<MutSliceRead>::new","value":"pub fn new(&'a mut [u8]) -> MutSliceRead","parent":null,"children":[],"decl_id":null,"docs":" Creates a CBOR input source to read from a slice of bytes.\n","sig":null,"attributes":[{"value":"/ Creates a CBOR input source to read from a slice of bytes.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":78181,"byte_end":78243,"line_start":541,"line_end":541,"column_start":5,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":529},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ser","qualname":"::ser","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":569},{"krate":0,"index":571},{"krate":0,"index":1320},{"krate":0,"index":1325},{"krate":0,"index":574},{"krate":0,"index":593},{"krate":0,"index":648},{"krate":0,"index":656},{"krate":0,"index":664},{"krate":0,"index":672},{"krate":0,"index":677},{"krate":0,"index":684},{"krate":0,"index":693},{"krate":0,"index":702},{"krate":0,"index":707},{"krate":0,"index":712},{"krate":0,"index":720}],"decl_id":null,"docs":" Serialize a Rust data structure to CBOR data.\n","sig":null,"attributes":[{"value":"/ Serialize a Rust data structure to CBOR data.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":80883,"byte_end":80932,"line_start":1,"line_end":1,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":567},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":81343,"byte_end":81349,"line_start":20,"line_end":20,"column_start":8,"column_end":14},"name":"to_vec","qualname":"::ser::to_vec","value":"pub fn to_vec<T>(&T) -> Result<Vec<u8>> where T: ser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serializes a value to a vector.\n","sig":null,"attributes":[{"value":"/ Serializes a value to a vector.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":81252,"byte_end":81287,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":81288,"byte_end":81335,"line_start":19,"line_end":19,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":569},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":81597,"byte_end":81610,"line_start":31,"line_end":31,"column_start":8,"column_end":21},"name":"to_vec_packed","qualname":"::ser::to_vec_packed","value":"pub fn to_vec_packed<T>(&T) -> Result<Vec<u8>> where T: ser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serializes a value to a vector in packed format.\n","sig":null,"attributes":[{"value":"/ Serializes a value to a vector in packed format.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":81513,"byte_end":81565,"line_start":29,"line_end":29,"column_start":1,"column_end":53}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":81566,"byte_end":81589,"line_start":30,"line_end":30,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":571},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":81876,"byte_end":81885,"line_start":42,"line_end":42,"column_start":8,"column_end":17},"name":"to_writer","qualname":"::ser::to_writer","value":"pub fn to_writer<W, T>(W, &T) -> Result<()> where W: io::Write,\nT: ser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serializes a value to a writer.\n","sig":null,"attributes":[{"value":"/ Serializes a value to a writer.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":81809,"byte_end":81844,"line_start":40,"line_end":40,"column_start":1,"column_end":36}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":81845,"byte_end":81868,"line_start":41,"line_end":41,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1320},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":82130,"byte_end":82140,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"Serializer","qualname":"::ser::Serializer","value":"Serializer {  }","parent":null,"children":[{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324}],"decl_id":null,"docs":" A structure for serializing Rust values to CBOR.\n","sig":null,"attributes":[{"value":"/ A structure for serializing Rust values to CBOR.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":82049,"byte_end":82101,"line_start":50,"line_end":50,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":82402,"byte_end":82405,"line_start":66,"line_end":66,"column_start":12,"column_end":15},"name":"new","qualname":"<Serializer<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CBOR serializer.","sig":null,"attributes":[{"value":"/ Creates a new CBOR serializer.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":82253,"byte_end":82287,"line_start":62,"line_end":62,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":82292,"byte_end":82295,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ `to_vec` and `to_writer` should normally be used instead of this method.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":82300,"byte_end":82376,"line_start":64,"line_end":64,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":82381,"byte_end":82390,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":82740,"byte_end":82753,"line_start":78,"line_end":78,"column_start":12,"column_end":25},"name":"packed_format","qualname":"<Serializer<W>>::packed_format","value":"pub fn packed_format(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Choose concise/packed format for serializer.","sig":null,"attributes":[{"value":"/ Choose concise/packed format for serializer.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":82547,"byte_end":82595,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":82600,"byte_end":82603,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ In the packed format enum variant names and field names","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":82608,"byte_end":82667,"line_start":76,"line_end":76,"column_start":5,"column_end":64}},{"value":"/ are replaced with numeric indizes to conserve space.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":82672,"byte_end":82728,"line_start":77,"line_end":77,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":84026,"byte_end":84038,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"legacy_enums","qualname":"<Serializer<W>>::legacy_enums","value":"pub fn legacy_enums(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable old enum format used by `serde_cbor` versions <= v0.9.","sig":null,"attributes":[{"value":"/ Enable old enum format used by `serde_cbor` versions <= v0.9.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":82826,"byte_end":82891,"line_start":83,"line_end":83,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":82896,"byte_end":82899,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The `legacy_enums` option determines how enums are encoded.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":82904,"byte_end":82967,"line_start":85,"line_end":85,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":82972,"byte_end":82975,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ This makes no difference when encoding and decoding enums using","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":82980,"byte_end":83047,"line_start":87,"line_end":87,"column_start":5,"column_end":72}},{"value":"/ this crate, but it shows up when decoding to a `Value` or decoding","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83052,"byte_end":83122,"line_start":88,"line_end":88,"column_start":5,"column_end":75}},{"value":"/ in other languages.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83127,"byte_end":83150,"line_start":89,"line_end":89,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83155,"byte_end":83158,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83163,"byte_end":83177,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83182,"byte_end":83185,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Given the following enum","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83190,"byte_end":83218,"line_start":93,"line_end":93,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83223,"byte_end":83226,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83231,"byte_end":83242,"line_start":95,"line_end":95,"column_start":5,"column_end":16}},{"value":"/ enum Enum {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83247,"byte_end":83262,"line_start":96,"line_end":96,"column_start":5,"column_end":20}},{"value":"/     Unit,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83267,"byte_end":83280,"line_start":97,"line_end":97,"column_start":5,"column_end":18}},{"value":"/     NewType(i32),","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83285,"byte_end":83306,"line_start":98,"line_end":98,"column_start":5,"column_end":26}},{"value":"/     Tuple(String, bool),","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83311,"byte_end":83339,"line_start":99,"line_end":99,"column_start":5,"column_end":33}},{"value":"/     Struct{ x: i32, y: i32 },","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83344,"byte_end":83377,"line_start":100,"line_end":100,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83382,"byte_end":83387,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83392,"byte_end":83399,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/ we will give the `Value` with the same encoding for each case using","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83404,"byte_end":83475,"line_start":103,"line_end":103,"column_start":5,"column_end":76}},{"value":"/ JSON notation.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83480,"byte_end":83498,"line_start":104,"line_end":104,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83503,"byte_end":83506,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ## Default encodings","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83511,"byte_end":83535,"line_start":106,"line_end":106,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83540,"byte_end":83543,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ * `Enum::Unit` encodes as `\"Unit\"`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83548,"byte_end":83586,"line_start":108,"line_end":108,"column_start":5,"column_end":43}},{"value":"/ * `Enum::NewType(10)` encodes as `{\"NewType\": 10}`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83591,"byte_end":83645,"line_start":109,"line_end":109,"column_start":5,"column_end":59}},{"value":"/ * `Enum::Tuple(\"x\", true)` encodes as `{\"Tuple\": [\"x\", true]}`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83650,"byte_end":83716,"line_start":110,"line_end":110,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83721,"byte_end":83724,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ## Legacy encodings","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83729,"byte_end":83752,"line_start":112,"line_end":112,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83757,"byte_end":83760,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ * `Enum::Unit` encodes as `\"Unit\"`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83765,"byte_end":83803,"line_start":114,"line_end":114,"column_start":5,"column_end":43}},{"value":"/ * `Enum::NewType(10)` encodes as `[\"NewType\", 10]`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83808,"byte_end":83862,"line_start":115,"line_end":115,"column_start":5,"column_end":59}},{"value":"/ * `Enum::Tuple(\"x\", true)` encodes as `[\"Tuple\", \"x\", true]`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83867,"byte_end":83931,"line_start":116,"line_end":116,"column_start":5,"column_end":69}},{"value":"/ * `Enum::Struct{ x: 5, y: -5 }` encodes as `[\"Struct\", {\"x\": 5, \"y\": -5}]`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":83936,"byte_end":84014,"line_start":117,"line_end":117,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":84332,"byte_end":84345,"line_start":128,"line_end":128,"column_start":12,"column_end":25},"name":"self_describe","qualname":"<Serializer<W>>::self_describe","value":"pub fn self_describe(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes a CBOR self-describe tag to the stream.","sig":null,"attributes":[{"value":"/ Writes a CBOR self-describe tag to the stream.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":84117,"byte_end":84167,"line_start":123,"line_end":123,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":84172,"byte_end":84175,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Tagging allows a decoder to distinguish different file formats based on their content","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":84180,"byte_end":84269,"line_start":125,"line_end":125,"column_start":5,"column_end":94}},{"value":"/ without further information.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":84274,"byte_end":84306,"line_start":126,"line_end":126,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":84311,"byte_end":84320,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":84623,"byte_end":84633,"line_start":136,"line_end":136,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Serializer<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the `Writer` from the `Serializer`.\n","sig":null,"attributes":[{"value":"/ Unwrap the `Writer` from the `Serializer`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":84551,"byte_end":84597,"line_start":134,"line_end":134,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":84602,"byte_end":84611,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":672},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":96682,"byte_end":96698,"line_start":587,"line_end":587,"column_start":12,"column_end":28},"name":"StructSerializer","qualname":"::ser::StructSerializer","value":"StructSerializer {  }","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":676}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":702},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":98497,"byte_end":98517,"line_start":676,"line_end":676,"column_start":12,"column_end":32},"name":"CollectionSerializer","qualname":"::ser::CollectionSerializer","value":"CollectionSerializer {  }","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":730},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tags","qualname":"::tags","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":741},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":753},{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":781},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":788},{"krate":0,"index":794},{"krate":0,"index":798},{"krate":0,"index":804},{"krate":0,"index":810},{"krate":0,"index":817},{"krate":0,"index":821},{"krate":0,"index":845},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852}],"decl_id":null,"docs":" Support for cbor tags\n","sig":null,"attributes":[{"value":"/ Support for cbor tags","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":99787,"byte_end":99812,"line_start":1,"line_end":1,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":770},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":100313,"byte_end":100319,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Tagged","qualname":"::tags::Tagged","value":"Tagged { tag, value }","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773}],"decl_id":null,"docs":" A value that is optionally tagged with a cbor tag","sig":null,"attributes":[{"value":"/ A value that is optionally tagged with a cbor tag","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":100156,"byte_end":100209,"line_start":13,"line_end":13,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":100210,"byte_end":100213,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ this only serves as an intermediate helper for tag serialization or deserialization","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":100214,"byte_end":100301,"line_start":15,"line_end":15,"column_start":1,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":772},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":100350,"byte_end":100353,"line_start":18,"line_end":18,"column_start":9,"column_end":12},"name":"tag","qualname":"::tags::Tagged::tag","value":"std::option::Option<u64>","parent":{"krate":0,"index":770},"children":[],"decl_id":null,"docs":" cbor tag\n","sig":null,"attributes":[{"value":"/ cbor tag","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":100329,"byte_end":100341,"line_start":17,"line_end":17,"column_start":5,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":773},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":100390,"byte_end":100395,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"name":"value","qualname":"::tags::Tagged::value","value":"T","parent":{"krate":0,"index":770},"children":[],"decl_id":null,"docs":" value\n","sig":null,"attributes":[{"value":"/ value","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":100372,"byte_end":100381,"line_start":19,"line_end":19,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":100468,"byte_end":100471,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<Tagged<T>>::new","value":"pub fn new(Option<u64>, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new tagged value\n","sig":null,"attributes":[{"value":"/ Create a new tagged value","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":100427,"byte_end":100456,"line_start":24,"line_end":24,"column_start":5,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":850},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":105774,"byte_end":105790,"line_start":194,"line_end":194,"column_start":8,"column_end":24},"name":"current_cbor_tag","qualname":"::tags::current_cbor_tag","value":"pub fn current_cbor_tag() -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" function to get the current cbor tag","sig":null,"attributes":[{"value":"/ function to get the current cbor tag","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":105535,"byte_end":105575,"line_start":190,"line_end":190,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":105576,"byte_end":105579,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ The only place where it makes sense to call this function is within visit_newtype_struct of a serde visitor.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":105580,"byte_end":105692,"line_start":192,"line_end":192,"column_start":1,"column_end":113}},{"value":"/ This is a low level API. In most cases it is preferable to use Tagged","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":105693,"byte_end":105766,"line_start":193,"line_end":193,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":860},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":106895,"byte_end":106900,"line_start":19,"line_end":19,"column_start":11,"column_end":16},"name":"Write","qualname":"::write::Write","value":"Write: private::Sealed","parent":null,"children":[{"krate":0,"index":861},{"krate":0,"index":862}],"decl_id":null,"docs":" A sink for serialized CBOR.","sig":null,"attributes":[{"value":"cfg(not(feature = \"unsealed_read_write\"))","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":106510,"byte_end":106554,"line_start":10,"line_end":10,"column_start":1,"column_end":45}},{"value":"/ A sink for serialized CBOR.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":106555,"byte_end":106586,"line_start":11,"line_end":11,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":106587,"byte_end":106590,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This trait is similar to the [`Write`]() trait in the standard library,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":106591,"byte_end":106666,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ but has a smaller and more general API.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":106667,"byte_end":106710,"line_start":14,"line_end":14,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":106711,"byte_end":106714,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Any object implementing `std::io::Write`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":106715,"byte_end":106759,"line_start":16,"line_end":16,"column_start":1,"column_end":45}},{"value":"/ can be wrapped in an [`IoWrite`](../write/struct.IoWrite.html) that implements","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":106760,"byte_end":106842,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ this trait for the underlying object.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":106843,"byte_end":106884,"line_start":18,"line_end":18,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":861},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":107013,"byte_end":107018,"line_start":22,"line_end":22,"column_start":10,"column_end":15},"name":"Error","qualname":"::write::Write::Error","value":"type Error: Into<error::Error>;","parent":{"krate":0,"index":860},"children":[],"decl_id":null,"docs":" The type of error returned when a write operation fails.\n","sig":null,"attributes":[{"value":"/ The type of error returned when a write operation fails.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":106924,"byte_end":106984,"line_start":20,"line_end":20,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":107127,"byte_end":107136,"line_start":26,"line_end":26,"column_start":8,"column_end":17},"name":"write_all","qualname":"::write::Write::write_all","value":"pub fn write_all(&mut Self, &[u8]) -> Result<(), Self::Error>","parent":{"krate":0,"index":860},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this write.\n","sig":null,"attributes":[{"value":"/ Attempts to write an entire buffer into this write.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":107045,"byte_end":107100,"line_start":24,"line_end":24,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":864},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":108056,"byte_end":108062,"line_start":51,"line_end":51,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::write::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1540},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":108579,"byte_end":108586,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"IoWrite","qualname":"::write::IoWrite","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper for types that implement\n [`std::io::Write`](https://doc.rust-lang.org/std/io/trait.Write.html) to implement the local\n [`Write`](trait.Write.html) trait.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":108352,"byte_end":108375,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/ A wrapper for types that implement","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":108376,"byte_end":108414,"line_start":69,"line_end":69,"column_start":1,"column_end":39}},{"value":"/ [`std::io::Write`](https://doc.rust-lang.org/std/io/trait.Write.html) to implement the local","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":108415,"byte_end":108511,"line_start":70,"line_end":70,"column_start":1,"column_end":97}},{"value":"/ [`Write`](trait.Write.html) trait.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":108512,"byte_end":108550,"line_start":71,"line_end":71,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":108753,"byte_end":108756,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"new","qualname":"<IoWrite<W>>::new","value":"pub fn new(W) -> IoWrite<W>","parent":null,"children":[],"decl_id":null,"docs":" Wraps an `io::Write` writer to make it compatible with [`Write`](trait.Write.html)\n","sig":null,"attributes":[{"value":"/ Wraps an `io::Write` writer to make it compatible with [`Write`](trait.Write.html)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":108655,"byte_end":108741,"line_start":77,"line_end":77,"column_start":5,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":1547},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":110383,"byte_end":110393,"line_start":137,"line_end":137,"column_start":12,"column_end":22},"name":"SliceWrite","qualname":"::write::SliceWrite","value":"SliceWrite {  }","parent":null,"children":[{"krate":0,"index":1549},{"krate":0,"index":1550}],"decl_id":null,"docs":" Implements [`Write`](trait.Write.html) for mutable byte slices (`&mut [u8]`).","sig":null,"attributes":[{"value":"/ Implements [`Write`](trait.Write.html) for mutable byte slices (`&mut [u8]`).","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":110188,"byte_end":110269,"line_start":133,"line_end":133,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":110270,"byte_end":110273,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ Returns an error if the value to serialize is too large to fit in the slice.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":110274,"byte_end":110354,"line_start":135,"line_end":135,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":110545,"byte_end":110548,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"new","qualname":"<SliceWrite>::new","value":"pub fn new(&'a mut [u8]) -> SliceWrite","parent":null,"children":[],"decl_id":null,"docs":" Wraps a mutable slice so it can be used as a `Write`.\n","sig":null,"attributes":[{"value":"/ Wraps a mutable slice so it can be used as a `Write`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":110476,"byte_end":110533,"line_start":143,"line_end":143,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":110716,"byte_end":110729,"line_start":149,"line_end":149,"column_start":12,"column_end":25},"name":"bytes_written","qualname":"<SliceWrite>::bytes_written","value":"pub fn bytes_written(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes written to the underlying slice.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes written to the underlying slice.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":110640,"byte_end":110704,"line_start":148,"line_end":148,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":110823,"byte_end":110833,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SliceWrite>::into_inner","value":"pub fn into_inner(Self) -> &'a mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying slice.\n","sig":null,"attributes":[{"value":"/ Returns the underlying slice.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":110778,"byte_end":110811,"line_start":153,"line_end":153,"column_start":5,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":895},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"value","qualname":"::value","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","parent":null,"children":[{"krate":0,"index":896},{"krate":0,"index":950},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1079},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1085},{"krate":0,"index":1088},{"krate":0,"index":1091},{"krate":0,"index":1554},{"krate":0,"index":1584},{"krate":0,"index":1586},{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1099},{"krate":0,"index":1102},{"krate":0,"index":1588},{"krate":0,"index":1590},{"krate":0,"index":1592},{"krate":0,"index":1594},{"krate":0,"index":1596},{"krate":0,"index":1598},{"krate":0,"index":1600},{"krate":0,"index":1602},{"krate":0,"index":1604},{"krate":0,"index":1606},{"krate":0,"index":1608},{"krate":0,"index":1610},{"krate":0,"index":1612},{"krate":0,"index":1614},{"krate":0,"index":1616},{"krate":0,"index":1103}],"decl_id":null,"docs":" CBOR values, keys and serialization routines.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":11847,"byte_end":11870,"line_start":335,"line_end":335,"column_start":1,"column_end":24}},{"value":"/ CBOR values, keys and serialization routines.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":111460,"byte_end":111509,"line_start":1,"line_end":1,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":948},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/de.rs","byte_start":120714,"byte_end":120724,"line_start":156,"line_end":156,"column_start":8,"column_end":18},"name":"from_value","qualname":"::value::de::from_value","value":"pub fn from_value<T>(Value) -> Result<T, crate::error::Error> where\nT: de::DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" Convert a `serde_cbor::Value` into a type `T`\n","sig":null,"attributes":[{"value":"/ Convert a `serde_cbor::Value` into a type `T`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/de.rs","byte_start":120616,"byte_end":120665,"line_start":154,"line_end":154,"column_start":1,"column_end":50}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/de.rs","byte_start":120666,"byte_end":120706,"line_start":155,"line_end":155,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1073},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":132176,"byte_end":132184,"line_start":438,"line_end":438,"column_start":8,"column_end":16},"name":"to_value","qualname":"::value::ser::to_value","value":"pub fn to_value<T>(T) -> Result<Value, Error> where T: Serialize","parent":null,"children":[],"decl_id":null,"docs":" Convert a `T` into `serde_cbor::Value` which is an enum that can represent\n any valid CBOR data.","sig":null,"attributes":[{"value":"/ Convert a `T` into `serde_cbor::Value` which is an enum that can represent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":131450,"byte_end":131528,"line_start":409,"line_end":409,"column_start":1,"column_end":79}},{"value":"/ any valid CBOR data.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":131529,"byte_end":131553,"line_start":410,"line_end":410,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":131554,"byte_end":131557,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":131558,"byte_end":131569,"line_start":412,"line_end":412,"column_start":1,"column_end":12}},{"value":"/ extern crate serde;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":131570,"byte_end":131593,"line_start":413,"line_end":413,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":131594,"byte_end":131597,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"/ #[macro_use]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":131598,"byte_end":131614,"line_start":415,"line_end":415,"column_start":1,"column_end":17}},{"value":"/ extern crate serde_derive;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":131615,"byte_end":131645,"line_start":416,"line_end":416,"column_start":1,"column_end":31}},{"value":"/ extern crate serde_cbor;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":131646,"byte_end":131674,"line_start":417,"line_end":417,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":131675,"byte_end":131678,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":131679,"byte_end":131705,"line_start":419,"line_end":419,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":131706,"byte_end":131709,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":131710,"byte_end":131734,"line_start":421,"line_end":421,"column_start":1,"column_end":25}},{"value":"/ struct User {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":131735,"byte_end":131752,"line_start":422,"line_end":422,"column_start":1,"column_end":18}},{"value":"/     fingerprint: String,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":131753,"byte_end":131781,"line_start":423,"line_end":423,"column_start":1,"column_end":29}},{"value":"/     location: String,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":131782,"byte_end":131807,"line_start":424,"line_end":424,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":131808,"byte_end":131813,"line_start":425,"line_end":425,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":131814,"byte_end":131817,"line_start":426,"line_end":426,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":131818,"byte_end":131833,"line_start":427,"line_end":427,"column_start":1,"column_end":16}},{"value":"/     let u = User {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":131834,"byte_end":131856,"line_start":428,"line_end":428,"column_start":1,"column_end":23}},{"value":"/         fingerprint: \"0xF9BA143B95FF6D82\".to_owned(),","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":131857,"byte_end":131914,"line_start":429,"line_end":429,"column_start":1,"column_end":58}},{"value":"/         location: \"Menlo Park, CA\".to_owned(),","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":131915,"byte_end":131965,"line_start":430,"line_end":430,"column_start":1,"column_end":51}},{"value":"/     };","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":131966,"byte_end":131976,"line_start":431,"line_end":431,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":131977,"byte_end":131980,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/     let v = serde_cbor::value::to_value(u).unwrap();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":131981,"byte_end":132037,"line_start":433,"line_end":433,"column_start":1,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":132038,"byte_end":132043,"line_start":434,"line_end":434,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":132044,"byte_end":132051,"line_start":435,"line_end":435,"column_start":1,"column_end":8}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":132052,"byte_end":132092,"line_start":436,"line_end":436,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1555},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112169,"byte_end":112173,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"Null","qualname":"::value::Value::Null","value":"Value::Null","parent":{"krate":0,"index":1554},"children":[],"decl_id":null,"docs":" Represents the absence of a value or the value undefined.\n","sig":null,"attributes":[{"value":"/ Represents the absence of a value or the value undefined.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112103,"byte_end":112164,"line_start":24,"line_end":24,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1557},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112215,"byte_end":112219,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Bool","qualname":"::value::Value::Bool","value":"Value::Bool(bool)","parent":{"krate":0,"index":1554},"children":[],"decl_id":null,"docs":" Represents a boolean value.\n","sig":null,"attributes":[{"value":"/ Represents a boolean value.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112179,"byte_end":112210,"line_start":26,"line_end":26,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1560},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112462,"byte_end":112469,"line_start":34,"line_end":34,"column_start":5,"column_end":12},"name":"Integer","qualname":"::value::Value::Integer","value":"Value::Integer(i128)","parent":{"krate":0,"index":1554},"children":[],"decl_id":null,"docs":" Integer CBOR numbers.","sig":null,"attributes":[{"value":"/ Integer CBOR numbers.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112231,"byte_end":112256,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112261,"byte_end":112264,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ The biggest value that can be represented is 2^64 - 1.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112269,"byte_end":112327,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ While the smallest value is -2^64.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112332,"byte_end":112370,"line_start":31,"line_end":31,"column_start":5,"column_end":43}},{"value":"/ Values outside this range can't be serialized","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112375,"byte_end":112424,"line_start":32,"line_end":32,"column_start":5,"column_end":54}},{"value":"/ and will cause an error.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112429,"byte_end":112457,"line_start":33,"line_end":33,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1563},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112524,"byte_end":112529,"line_start":36,"line_end":36,"column_start":5,"column_end":10},"name":"Float","qualname":"::value::Value::Float","value":"Value::Float(f64)","parent":{"krate":0,"index":1554},"children":[],"decl_id":null,"docs":" Represents a floating point value.\n","sig":null,"attributes":[{"value":"/ Represents a floating point value.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112481,"byte_end":112519,"line_start":35,"line_end":35,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1566},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112574,"byte_end":112579,"line_start":38,"line_end":38,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::value::Value::Bytes","value":"Value::Bytes(Vec<u8>)","parent":{"krate":0,"index":1554},"children":[],"decl_id":null,"docs":" Represents a byte string.\n","sig":null,"attributes":[{"value":"/ Represents a byte string.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112540,"byte_end":112569,"line_start":37,"line_end":37,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1569},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112638,"byte_end":112642,"line_start":40,"line_end":40,"column_start":5,"column_end":9},"name":"Text","qualname":"::value::Value::Text","value":"Value::Text(String)","parent":{"krate":0,"index":1554},"children":[],"decl_id":null,"docs":" Represents an UTF-8 encoded string.\n","sig":null,"attributes":[{"value":"/ Represents an UTF-8 encoded string.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112594,"byte_end":112633,"line_start":39,"line_end":39,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1572},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112695,"byte_end":112700,"line_start":42,"line_end":42,"column_start":5,"column_end":10},"name":"Array","qualname":"::value::Value::Array","value":"Value::Array(Vec<Value>)","parent":{"krate":0,"index":1554},"children":[],"decl_id":null,"docs":" Represents an array of values.\n","sig":null,"attributes":[{"value":"/ Represents an array of values.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112656,"byte_end":112690,"line_start":41,"line_end":41,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1575},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":113244,"byte_end":113247,"line_start":53,"line_end":53,"column_start":5,"column_end":8},"name":"Map","qualname":"::value::Value::Map","value":"Value::Map(BTreeMap<Value, Value>)","parent":{"krate":0,"index":1554},"children":[],"decl_id":null,"docs":" Represents a map.","sig":null,"attributes":[{"value":"/ Represents a map.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112718,"byte_end":112739,"line_start":43,"line_end":43,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112744,"byte_end":112747,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Maps are also called tables, dictionaries, hashes, or objects (in JSON).","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112752,"byte_end":112828,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ While any value can be used as a CBOR key","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112833,"byte_end":112878,"line_start":46,"line_end":46,"column_start":5,"column_end":50}},{"value":"/ it is better to use only one type of key in a map","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112883,"byte_end":112936,"line_start":47,"line_end":47,"column_start":5,"column_end":58}},{"value":"/ to avoid ambiguity.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112941,"byte_end":112964,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"/ If floating point values are used as keys they are compared bit-by-bit for equality.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112969,"byte_end":113057,"line_start":49,"line_end":49,"column_start":5,"column_end":93}},{"value":"/ If arrays or maps are used as keys the comparisons","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":113062,"byte_end":113116,"line_start":50,"line_end":50,"column_start":5,"column_end":59}},{"value":"/ to establish canonical order may be slow and therefore insertion","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":113121,"byte_end":113189,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ and retrieval of values will be slow too.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":113194,"byte_end":113239,"line_start":52,"line_end":52,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1578},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":113311,"byte_end":113314,"line_start":55,"line_end":55,"column_start":5,"column_end":8},"name":"Tag","qualname":"::value::Value::Tag","value":"Value::Tag(u64, Box<Value>)","parent":{"krate":0,"index":1554},"children":[],"decl_id":null,"docs":" Represents a tagged value\n","sig":null,"attributes":[{"value":"/ Represents a tagged value","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":113277,"byte_end":113306,"line_start":54,"line_end":54,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1582},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":113462,"byte_end":113470,"line_start":59,"line_end":59,"column_start":5,"column_end":13},"name":"__Hidden","qualname":"::value::Value::__Hidden","value":"Value::__Hidden","parent":{"krate":0,"index":1554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1554},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":112091,"byte_end":112096,"line_start":23,"line_end":23,"column_start":10,"column_end":15},"name":"Value","qualname":"::value::Value","value":"pub enum Value {\n    Null,\n    Bool(bool),\n    Integer(i128),\n    Float(f64),\n    Bytes(Vec<u8>),\n    Text(String),\n    Array(Vec<Value>),\n    Map(BTreeMap<Value, Value>),\n    Tag(u64, Box<Value>),\n    __Hidden,\n}","parent":null,"children":[{"krate":0,"index":1555},{"krate":0,"index":1557},{"krate":0,"index":1560},{"krate":0,"index":1563},{"krate":0,"index":1566},{"krate":0,"index":1569},{"krate":0,"index":1572},{"krate":0,"index":1575},{"krate":0,"index":1578},{"krate":0,"index":1582}],"decl_id":null,"docs":" The `Value` enum, a loosely typed way of representing any valid CBOR value.","sig":null,"attributes":[{"value":"/ The `Value` enum, a loosely typed way of representing any valid CBOR value.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":111695,"byte_end":111774,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":111775,"byte_end":111778,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Maps are sorted according to the canonical ordering","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":111779,"byte_end":111834,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ described in [RFC 7049 bis].","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":111835,"byte_end":111867,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/ Therefore values are unambiguously serialized","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":111868,"byte_end":111917,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/ to a canonical form of CBOR from the same RFC.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":111918,"byte_end":111968,"line_start":19,"line_end":19,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":111969,"byte_end":111972,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [RFC 7049 bis]: https://tools.ietf.org/html/draft-ietf-cbor-7049bis-04#section-2","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":111973,"byte_end":112057,"line_start":21,"line_end":21,"column_start":1,"column_end":85}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":16991,"byte_end":17003,"line_start":139,"line_end":139,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":17281,"byte_end":17293,"line_start":150,"line_end":150,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":17593,"byte_end":17605,"line_start":159,"line_end":159,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":17995,"byte_end":18007,"line_start":169,"line_end":169,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":18278,"byte_end":18290,"line_start":179,"line_end":179,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":41356,"byte_end":41368,"line_start":888,"line_end":888,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":41733,"byte_end":41742,"line_start":908,"line_end":908,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":42214,"byte_end":42223,"line_start":932,"line_end":932,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":42454,"byte_end":42473,"line_start":945,"line_end":945,"column_start":41,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":42971,"byte_end":42990,"line_start":966,"line_end":966,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":43284,"byte_end":43293,"line_start":982,"line_end":982,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":44296,"byte_end":44305,"line_start":1023,"line_end":1023,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":44585,"byte_end":44604,"line_start":1038,"line_end":1038,"column_start":41,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":45645,"byte_end":45662,"line_start":1076,"line_end":1076,"column_start":42,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":46042,"byte_end":46059,"line_start":1092,"line_end":1092,"column_start":45,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":47027,"byte_end":47040,"line_start":1137,"line_end":1137,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":47611,"byte_end":47624,"line_start":1157,"line_end":1157,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":48955,"byte_end":48972,"line_start":1206,"line_end":1206,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":50074,"byte_end":50092,"line_start":1252,"line_end":1252,"column_start":17,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":50698,"byte_end":50716,"line_start":1273,"line_end":1273,"column_start":17,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":50951,"byte_end":50969,"line_start":1285,"line_end":1285,"column_start":30,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":51370,"byte_end":51386,"line_start":1305,"line_end":1305,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":51959,"byte_end":51975,"line_start":1325,"line_end":1325,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":53789,"byte_end":53794,"line_start":31,"line_end":31,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":58832,"byte_end":58837,"line_start":196,"line_end":196,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":59045,"byte_end":59050,"line_start":205,"line_end":205,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":59320,"byte_end":59325,"line_start":215,"line_end":215,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":59455,"byte_end":59460,"line_start":221,"line_end":221,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":59897,"byte_end":59902,"line_start":235,"line_end":235,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":60041,"byte_end":60046,"line_start":242,"line_end":242,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":60990,"byte_end":60999,"line_start":291,"line_end":291,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":67774,"byte_end":67780,"line_start":149,"line_end":149,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":68574,"byte_end":68580,"line_start":177,"line_end":177,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":68657,"byte_end":68663,"line_start":180,"line_end":180,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":71020,"byte_end":71026,"line_start":267,"line_end":267,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":71283,"byte_end":71295,"line_start":284,"line_end":284,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":71811,"byte_end":71820,"line_start":308,"line_end":308,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":72431,"byte_end":72440,"line_start":330,"line_end":330,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":72656,"byte_end":72665,"line_start":341,"line_end":341,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":72744,"byte_end":72753,"line_start":344,"line_end":344,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":74669,"byte_end":74683,"line_start":420,"line_end":420,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":75647,"byte_end":75661,"line_start":450,"line_end":450,"column_start":34,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":75700,"byte_end":75714,"line_start":452,"line_end":452,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":77413,"byte_end":77427,"line_start":518,"line_end":518,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":78158,"byte_end":78170,"line_start":540,"line_end":540,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":78818,"byte_end":78830,"line_start":563,"line_end":563,"column_start":30,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":78861,"byte_end":78873,"line_start":565,"line_end":565,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":82213,"byte_end":82223,"line_start":58,"line_end":58,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":96769,"byte_end":96785,"line_start":592,"line_end":592,"column_start":13,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":97445,"byte_end":97461,"line_start":623,"line_end":623,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":691},{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":97980,"byte_end":97996,"line_start":649,"line_end":649,"column_start":45,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":700},{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":98595,"byte_end":98615,"line_start":681,"line_end":681,"column_start":13,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":98884,"byte_end":98904,"line_start":695,"line_end":695,"column_start":35,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":99269,"byte_end":99289,"line_start":716,"line_end":716,"column_start":35,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":727},{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":100411,"byte_end":100417,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":100580,"byte_end":100586,"line_start":30,"line_end":30,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":101175,"byte_end":101191,"line_start":53,"line_end":53,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":1328},{"krate":0,"index":1330},{"krate":0,"index":1332},{"krate":0,"index":1334},{"krate":0,"index":1336},{"krate":0,"index":1338},{"krate":0,"index":1340},{"krate":0,"index":1342},{"krate":0,"index":1344},{"krate":0,"index":1346},{"krate":0,"index":1348},{"krate":0,"index":1350},{"krate":0,"index":1352},{"krate":0,"index":1354},{"krate":0,"index":1356},{"krate":0,"index":1358},{"krate":0,"index":1360},{"krate":0,"index":1362},{"krate":0,"index":1364},{"krate":0,"index":1366},{"krate":0,"index":1368},{"krate":0,"index":1370},{"krate":0,"index":1372},{"krate":0,"index":1374},{"krate":0,"index":1376},{"krate":0,"index":1378},{"krate":0,"index":1380},{"krate":0,"index":1382},{"krate":0,"index":1384},{"krate":0,"index":1386}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":101722,"byte_end":101738,"line_start":72,"line_end":72,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":1388},{"krate":0,"index":1390},{"krate":0,"index":1392},{"krate":0,"index":1394},{"krate":0,"index":1396},{"krate":0,"index":1398},{"krate":0,"index":1400},{"krate":0,"index":1402},{"krate":0,"index":1404},{"krate":0,"index":1406},{"krate":0,"index":1408},{"krate":0,"index":1410},{"krate":0,"index":1412},{"krate":0,"index":1414},{"krate":0,"index":1416},{"krate":0,"index":1418},{"krate":0,"index":1420},{"krate":0,"index":1422},{"krate":0,"index":1424},{"krate":0,"index":1426},{"krate":0,"index":1428},{"krate":0,"index":1430},{"krate":0,"index":1432},{"krate":0,"index":1434},{"krate":0,"index":1436},{"krate":0,"index":1438},{"krate":0,"index":1440},{"krate":0,"index":1442},{"krate":0,"index":1444},{"krate":0,"index":1446}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":102276,"byte_end":102293,"line_start":91,"line_end":91,"column_start":40,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":1448},{"krate":0,"index":1450},{"krate":0,"index":1452},{"krate":0,"index":1454},{"krate":0,"index":1456},{"krate":0,"index":1458},{"krate":0,"index":1460},{"krate":0,"index":1462},{"krate":0,"index":1464},{"krate":0,"index":1466},{"krate":0,"index":1468},{"krate":0,"index":1470},{"krate":0,"index":1472},{"krate":0,"index":1474},{"krate":0,"index":1476},{"krate":0,"index":1478},{"krate":0,"index":1480},{"krate":0,"index":1482},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":1488},{"krate":0,"index":1490},{"krate":0,"index":1492},{"krate":0,"index":1494},{"krate":0,"index":1496},{"krate":0,"index":1498},{"krate":0,"index":1500},{"krate":0,"index":1502},{"krate":0,"index":1504},{"krate":0,"index":1506}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":102932,"byte_end":102950,"line_start":111,"line_end":111,"column_start":49,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":1508},{"krate":0,"index":1510},{"krate":0,"index":1512},{"krate":0,"index":1514},{"krate":0,"index":1516},{"krate":0,"index":1518},{"krate":0,"index":1520},{"krate":0,"index":1522},{"krate":0,"index":1524},{"krate":0,"index":1526},{"krate":0,"index":1528},{"krate":0,"index":1530},{"krate":0,"index":1532},{"krate":0,"index":1534},{"krate":0,"index":1536},{"krate":0,"index":1538},{"krate":0,"index":826},{"krate":0,"index":828},{"krate":0,"index":830},{"krate":0,"index":832},{"krate":0,"index":834},{"krate":0,"index":836},{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":105342,"byte_end":105348,"line_start":184,"line_end":184,"column_start":75,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":108638,"byte_end":108645,"line_start":76,"line_end":76,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":108860,"byte_end":108867,"line_start":84,"line_end":84,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":109105,"byte_end":109112,"line_start":93,"line_end":93,"column_start":29,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":109202,"byte_end":109205,"line_start":96,"line_end":96,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":109500,"byte_end":109503,"line_start":109,"line_end":109,"column_start":26,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":110455,"byte_end":110465,"line_start":142,"line_end":142,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":110905,"byte_end":110915,"line_start":159,"line_end":159,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":111441,"byte_end":111451,"line_start":175,"line_end":175,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/de.rs","byte_start":116592,"byte_end":116597,"line_start":7,"line_end":7,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/de.rs","byte_start":116799,"byte_end":116811,"line_start":15,"line_end":15,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":921},{"krate":0,"index":923},{"krate":0,"index":925},{"krate":0,"index":927},{"krate":0,"index":929},{"krate":0,"index":931},{"krate":0,"index":933},{"krate":0,"index":935},{"krate":0,"index":937},{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":943},{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":121596,"byte_end":121601,"line_start":17,"line_end":17,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":122443,"byte_end":122453,"line_start":40,"line_end":40,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1005},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":128080,"byte_end":128092,"line_start":271,"line_end":271,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":128445,"byte_end":128457,"line_start":288,"line_end":288,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":128833,"byte_end":128845,"line_start":304,"line_end":304,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":129220,"byte_end":129241,"line_start":320,"line_end":320,"column_start":44,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":129701,"byte_end":129713,"line_start":341,"line_end":341,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1058},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":130472,"byte_end":130484,"line_start":370,"line_end":370,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":130938,"byte_end":130960,"line_start":387,"line_end":387,"column_start":45,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":113494,"byte_end":113499,"line_start":62,"line_end":62,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":113608,"byte_end":113613,"line_start":68,"line_end":68,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":113638,"byte_end":113643,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":113761,"byte_end":113766,"line_start":76,"line_end":76,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":115953,"byte_end":115958,"line_start":134,"line_end":134,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":11779,"byte_end":11781,"line_start":328,"line_end":328,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":11791,"byte_end":11796,"line_start":329,"line_end":329,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":333}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":11816,"byte_end":11819,"line_start":331,"line_end":331,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":529}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":11829,"byte_end":11833,"line_start":332,"line_end":332,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":730}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/lib.rs","byte_start":11879,"byte_end":11884,"line_start":336,"line_end":336,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":895}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":16991,"byte_end":17003,"line_start":139,"line_end":139,"column_start":9,"column_end":21},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":17281,"byte_end":17293,"line_start":150,"line_end":150,"column_start":10,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":17593,"byte_end":17605,"line_start":159,"line_end":159,"column_start":10,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":17995,"byte_end":18007,"line_start":169,"line_end":169,"column_start":14,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":18278,"byte_end":18290,"line_start":179,"line_end":179,"column_start":14,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":41356,"byte_end":41368,"line_start":888,"line_end":888,"column_start":9,"column_end":21},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":41733,"byte_end":41742,"line_start":908,"line_end":908,"column_start":41,"column_end":50},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":171},"to":{"krate":21,"index":1701}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":42214,"byte_end":42223,"line_start":932,"line_end":932,"column_start":32,"column_end":41},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":171},"to":{"krate":0,"index":169}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":42454,"byte_end":42473,"line_start":945,"line_end":945,"column_start":41,"column_end":60},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":189},"to":{"krate":21,"index":1701}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":42971,"byte_end":42990,"line_start":966,"line_end":966,"column_start":32,"column_end":51},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":189},"to":{"krate":0,"index":169}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":43284,"byte_end":43293,"line_start":982,"line_end":982,"column_start":41,"column_end":50},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":205},"to":{"krate":21,"index":1719}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":44296,"byte_end":44305,"line_start":1023,"line_end":1023,"column_start":32,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":205},"to":{"krate":0,"index":169}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":44585,"byte_end":44604,"line_start":1038,"line_end":1038,"column_start":41,"column_end":60},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":227},"to":{"krate":21,"index":1719}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":45645,"byte_end":45662,"line_start":1076,"line_end":1076,"column_start":42,"column_end":59},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":242},"to":{"krate":21,"index":1757}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":46042,"byte_end":46059,"line_start":1092,"line_end":1092,"column_start":45,"column_end":62},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":242},"to":{"krate":21,"index":1765}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":47027,"byte_end":47040,"line_start":1137,"line_end":1137,"column_start":38,"column_end":51},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":266},"to":{"krate":21,"index":1757}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":47611,"byte_end":47624,"line_start":1157,"line_end":1157,"column_start":41,"column_end":54},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":266},"to":{"krate":21,"index":1765}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":48955,"byte_end":48972,"line_start":1206,"line_end":1206,"column_start":43,"column_end":60},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":287},"to":{"krate":21,"index":1570}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":50074,"byte_end":50092,"line_start":1252,"line_end":1252,"column_start":17,"column_end":35},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":50698,"byte_end":50716,"line_start":1273,"line_end":1273,"column_start":17,"column_end":35},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":50951,"byte_end":50969,"line_start":1285,"line_end":1285,"column_start":30,"column_end":48},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1203},"to":{"krate":2,"index":7907}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":51370,"byte_end":51386,"line_start":1305,"line_end":1305,"column_start":38,"column_end":54},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":312},"to":{"krate":21,"index":1757}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/de.rs","byte_start":51959,"byte_end":51975,"line_start":1325,"line_end":1325,"column_start":41,"column_end":57},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":312},"to":{"krate":21,"index":1765}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":53789,"byte_end":53794,"line_start":31,"line_end":31,"column_start":6,"column_end":11},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":58832,"byte_end":58837,"line_start":196,"line_end":196,"column_start":23,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":352},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":59045,"byte_end":59050,"line_start":205,"line_end":205,"column_start":23,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":352},"to":{"krate":2,"index":9602}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":59320,"byte_end":59325,"line_start":215,"line_end":215,"column_start":21,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":352},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":59455,"byte_end":59460,"line_start":221,"line_end":221,"column_start":20,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":352},"to":{"krate":21,"index":8914}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":59897,"byte_end":59902,"line_start":235,"line_end":235,"column_start":21,"column_end":26},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":352},"to":{"krate":21,"index":9529}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":60041,"byte_end":60046,"line_start":242,"line_end":242,"column_start":26,"column_end":31},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":352},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/error.rs","byte_start":60990,"byte_end":60999,"line_start":291,"line_end":291,"column_start":23,"column_end":32},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1240},"to":{"krate":2,"index":9602}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":63132,"byte_end":63138,"line_start":17,"line_end":17,"column_start":31,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":436},"to":{"krate":0,"index":411}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":67774,"byte_end":67780,"line_start":149,"line_end":149,"column_start":9,"column_end":15},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":68574,"byte_end":68580,"line_start":177,"line_end":177,"column_start":29,"column_end":35},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1277},"to":{"krate":0,"index":436}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":68657,"byte_end":68663,"line_start":180,"line_end":180,"column_start":28,"column_end":34},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1277},"to":{"krate":0,"index":411}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":71020,"byte_end":71026,"line_start":267,"line_end":267,"column_start":20,"column_end":26},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1277},"to":{"krate":0,"index":424}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":71283,"byte_end":71295,"line_start":284,"line_end":284,"column_start":22,"column_end":34},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1285},"to":{"krate":1,"index":4631}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":71811,"byte_end":71820,"line_start":308,"line_end":308,"column_start":10,"column_end":19},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":72431,"byte_end":72440,"line_start":330,"line_end":330,"column_start":21,"column_end":30},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1292},"to":{"krate":0,"index":424}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":72656,"byte_end":72665,"line_start":341,"line_end":341,"column_start":30,"column_end":39},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1292},"to":{"krate":0,"index":436}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":72744,"byte_end":72753,"line_start":344,"line_end":344,"column_start":23,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1292},"to":{"krate":0,"index":411}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":74669,"byte_end":74683,"line_start":420,"line_end":420,"column_start":14,"column_end":28},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":75647,"byte_end":75661,"line_start":450,"line_end":450,"column_start":34,"column_end":48},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1300},"to":{"krate":0,"index":436}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":75700,"byte_end":75714,"line_start":452,"line_end":452,"column_start":27,"column_end":41},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1300},"to":{"krate":0,"index":411}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":77413,"byte_end":77427,"line_start":518,"line_end":518,"column_start":25,"column_end":39},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1300},"to":{"krate":0,"index":424}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":78158,"byte_end":78170,"line_start":540,"line_end":540,"column_start":10,"column_end":22},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":78818,"byte_end":78830,"line_start":563,"line_end":563,"column_start":30,"column_end":42},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1311},"to":{"krate":0,"index":436}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/read.rs","byte_start":78861,"byte_end":78873,"line_start":565,"line_end":565,"column_start":23,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1311},"to":{"krate":0,"index":411}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":82213,"byte_end":82223,"line_start":58,"line_end":58,"column_start":9,"column_end":19},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":96769,"byte_end":96785,"line_start":592,"line_end":592,"column_start":13,"column_end":29},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":97445,"byte_end":97461,"line_start":623,"line_end":623,"column_start":38,"column_end":54},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":672},"to":{"krate":21,"index":2188}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":97980,"byte_end":97996,"line_start":649,"line_end":649,"column_start":45,"column_end":61},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":672},"to":{"krate":21,"index":2195}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":98595,"byte_end":98615,"line_start":681,"line_end":681,"column_start":13,"column_end":33},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":98884,"byte_end":98904,"line_start":695,"line_end":695,"column_start":35,"column_end":55},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":702},"to":{"krate":21,"index":2153}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/ser.rs","byte_start":99269,"byte_end":99289,"line_start":716,"line_end":716,"column_start":35,"column_end":55},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":702},"to":{"krate":21,"index":2177}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":100411,"byte_end":100417,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":100580,"byte_end":100586,"line_start":30,"line_end":30,"column_start":34,"column_end":40},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":770},"to":{"krate":21,"index":2100}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":101175,"byte_end":101191,"line_start":53,"line_end":53,"column_start":36,"column_end":52},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":784},"to":{"krate":21,"index":1581}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":101722,"byte_end":101738,"line_start":72,"line_end":72,"column_start":36,"column_end":52},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":794},"to":{"krate":21,"index":1581}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":102276,"byte_end":102293,"line_start":91,"line_end":91,"column_start":40,"column_end":57},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":804},"to":{"krate":21,"index":1581}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":102932,"byte_end":102950,"line_start":111,"line_end":111,"column_start":49,"column_end":67},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":817},"to":{"krate":21,"index":1645}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/tags.rs","byte_start":105342,"byte_end":105348,"line_start":184,"line_end":184,"column_start":75,"column_end":81},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":770},"to":{"krate":21,"index":1559}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":106911,"byte_end":106917,"line_start":19,"line_end":19,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":864},"to":{"krate":0,"index":860}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":108638,"byte_end":108645,"line_start":76,"line_end":76,"column_start":20,"column_end":27},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":108860,"byte_end":108867,"line_start":84,"line_end":84,"column_start":30,"column_end":37},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1540},"to":{"krate":0,"index":860}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":109105,"byte_end":109112,"line_start":93,"line_end":93,"column_start":29,"column_end":36},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1540},"to":{"krate":0,"index":864}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":109202,"byte_end":109205,"line_start":96,"line_end":96,"column_start":16,"column_end":19},"kind":{"Impl":{"id":64}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":860}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":109500,"byte_end":109503,"line_start":109,"line_end":109,"column_start":26,"column_end":29},"kind":{"Impl":{"id":65}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":864}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":110455,"byte_end":110465,"line_start":142,"line_end":142,"column_start":10,"column_end":20},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":110905,"byte_end":110915,"line_start":159,"line_end":159,"column_start":20,"column_end":30},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1547},"to":{"krate":0,"index":860}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/write.rs","byte_start":111441,"byte_end":111451,"line_start":175,"line_end":175,"column_start":30,"column_end":40},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1547},"to":{"krate":0,"index":864}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/de.rs","byte_start":116592,"byte_end":116597,"line_start":7,"line_end":7,"column_start":36,"column_end":41},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1554},"to":{"krate":21,"index":1559}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/de.rs","byte_start":116799,"byte_end":116811,"line_start":15,"line_end":15,"column_start":40,"column_end":52},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":913},"to":{"krate":21,"index":1645}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":121596,"byte_end":121601,"line_start":17,"line_end":17,"column_start":27,"column_end":32},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1554},"to":{"krate":21,"index":2100}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":122443,"byte_end":122453,"line_start":40,"line_end":40,"column_start":28,"column_end":38},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":973},"to":{"krate":21,"index":2103}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":128080,"byte_end":128092,"line_start":271,"line_end":271,"column_start":35,"column_end":47},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1018},"to":{"krate":21,"index":2153}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":128445,"byte_end":128457,"line_start":288,"line_end":288,"column_start":37,"column_end":49},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1018},"to":{"krate":21,"index":2159}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":128833,"byte_end":128845,"line_start":304,"line_end":304,"column_start":43,"column_end":55},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1018},"to":{"krate":21,"index":2165}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":129220,"byte_end":129241,"line_start":320,"line_end":320,"column_start":44,"column_end":65},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1020},"to":{"krate":21,"index":2171}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":129701,"byte_end":129713,"line_start":341,"line_end":341,"column_start":35,"column_end":47},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1023},"to":{"krate":21,"index":2177}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":130472,"byte_end":130484,"line_start":370,"line_end":370,"column_start":38,"column_end":50},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1023},"to":{"krate":21,"index":2188}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/ser.rs","byte_start":130938,"byte_end":130960,"line_start":387,"line_end":387,"column_start":45,"column_end":67},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1026},"to":{"krate":21,"index":2195}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":113494,"byte_end":113499,"line_start":62,"line_end":62,"column_start":20,"column_end":25},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1554},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":113608,"byte_end":113613,"line_start":68,"line_end":68,"column_start":13,"column_end":18},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1554},"to":{"krate":2,"index":2680}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":113638,"byte_end":113643,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1554},"to":{"krate":2,"index":2722}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":113761,"byte_end":113766,"line_start":76,"line_end":76,"column_start":14,"column_end":19},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1554},"to":{"krate":2,"index":2711}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_cbor-0.11.2/src/value/mod.rs","byte_start":115953,"byte_end":115958,"line_start":134,"line_end":134,"column_start":6,"column_end":11},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1554},"to":{"krate":4294967295,"index":4294967295}}]}
{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1","program":"/home/martin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","hash32","/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=33d8e1eba9a0ee14","-C","extra-filename=-33d8e1eba9a0ee14","--out-dir","/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps","-L","dependency=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps","--extern","byteorder=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libbyteorder-44002080f2fca278.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/martin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libhash32-33d8e1eba9a0ee14.rmeta"},"prelude":{"crate_id":{"name":"hash32","disambiguator":[11898166922023924527,0]},"crate_root":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src","external_crates":[{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2825088610194081445,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[9481142260376939403,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[16420834686343379425,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","num":4,"id":{"name":"byteorder","disambiguator":[10928633988161422107,0]}}],"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":0,"byte_end":8107,"line_start":1,"line_end":336,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":24},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":2102,"byte_end":2108,"line_start":69,"line_end":69,"column_start":14,"column_end":20},"alias_span":null,"name":"FnvHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":46},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":2140,"byte_end":2146,"line_start":70,"line_end":70,"column_start":18,"column_end":24},"alias_span":null,"name":"Murmur3Hasher","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":0,"byte_end":8107,"line_start":1,"line_end":336,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":31},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":95},{"krate":0,"index":147},{"krate":0,"index":153},{"krate":0,"index":159},{"krate":0,"index":165},{"krate":0,"index":171},{"krate":0,"index":177},{"krate":0,"index":183},{"krate":0,"index":189},{"krate":0,"index":195},{"krate":0,"index":201},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":109},{"krate":0,"index":207},{"krate":0,"index":212},{"krate":0,"index":217},{"krate":0,"index":222},{"krate":0,"index":227},{"krate":0,"index":232},{"krate":0,"index":237},{"krate":0,"index":242},{"krate":0,"index":247},{"krate":0,"index":252},{"krate":0,"index":257},{"krate":0,"index":262},{"krate":0,"index":267},{"krate":0,"index":272},{"krate":0,"index":277},{"krate":0,"index":282},{"krate":0,"index":287},{"krate":0,"index":292},{"krate":0,"index":297},{"krate":0,"index":302},{"krate":0,"index":307},{"krate":0,"index":312},{"krate":0,"index":317},{"krate":0,"index":322},{"krate":0,"index":327},{"krate":0,"index":332},{"krate":0,"index":337},{"krate":0,"index":342},{"krate":0,"index":347},{"krate":0,"index":352},{"krate":0,"index":357},{"krate":0,"index":362},{"krate":0,"index":367},{"krate":0,"index":110},{"krate":0,"index":115},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":372},{"krate":0,"index":376},{"krate":0,"index":381},{"krate":0,"index":387},{"krate":0,"index":394},{"krate":0,"index":402},{"krate":0,"index":411},{"krate":0,"index":421},{"krate":0,"index":432},{"krate":0,"index":444},{"krate":0,"index":457},{"krate":0,"index":471}],"decl_id":null,"docs":" 32-bit hashing machinery","sig":null,"attributes":[{"value":"/ 32-bit hashing machinery","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":0,"byte_end":28,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":29,"byte_end":32,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Why?","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":33,"byte_end":43,"line_start":3,"line_end":3,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":44,"byte_end":47,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Because 32-bit architectures are a thing (e.g. ARM Cortex-M) and you don't want your hashing","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":48,"byte_end":144,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ function to pull in a bunch of slow 64-bit compiler intrinsics (software implementations of","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":145,"byte_end":240,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/ 64-bit operations).","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":241,"byte_end":264,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":265,"byte_end":268,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Relationship to `core::hash`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":269,"byte_end":303,"line_start":9,"line_end":9,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":304,"byte_end":307,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This crate exposes the same interfaces you'll find in [`core::hash`]: `Hash`, `Hasher`,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":308,"byte_end":399,"line_start":11,"line_end":11,"column_start":1,"column_end":92}},{"value":"/ `BuildHasher` and `BuildHasherDefault`. The main difference is that `hash32::Hasher::finish`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":400,"byte_end":496,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"/ returns a `u32` instead of `u64`, and the contract of `hash32::Hasher` forbids the implementer","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":497,"byte_end":595,"line_start":13,"line_end":13,"column_start":1,"column_end":99}},{"value":"/ from performing 64-bit (or 128-bit) operations while computing the hash.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":596,"byte_end":672,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":673,"byte_end":676,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`core::hash`]: https://doc.rust-lang.org/std/hash/index.html","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":677,"byte_end":742,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":743,"byte_end":746,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # `#[derive(Hash32)]`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":747,"byte_end":772,"line_start":18,"line_end":18,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":773,"byte_end":776,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The easiest way to implement `hash32::Hash` for a `struct` is to use the `#[derive(Hash32)]`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":777,"byte_end":874,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":875,"byte_end":878,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":879,"byte_end":886,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ #[macro_use]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":887,"byte_end":903,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/ extern crate hash32_derive;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":904,"byte_end":935,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":936,"byte_end":939,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ #[derive(Hash32)]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":940,"byte_end":961,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/ struct Ipv4Addr([u8; 4]);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":962,"byte_end":991,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":992,"byte_end":995,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # fn main() {}","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":996,"byte_end":1014,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1015,"byte_end":1022,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1023,"byte_end":1026,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Hashers","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1027,"byte_end":1040,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1041,"byte_end":1044,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This crate provides implementations of the following 32-bit hashing algorithms:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1045,"byte_end":1128,"line_start":34,"line_end":34,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1129,"byte_end":1132,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ - [Fowler-Noll-Vo](struct.FnvHasher.html)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1133,"byte_end":1178,"line_start":36,"line_end":36,"column_start":1,"column_end":46}},{"value":"/ - [MurmurHash3](struct.Murmur3Hasher.html)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1179,"byte_end":1225,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1226,"byte_end":1229,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Future","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1230,"byte_end":1242,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1243,"byte_end":1246,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ In the future we'd like to deprecate this crate in favor of making `core::hash::Hasher` generic","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1247,"byte_end":1346,"line_start":41,"line_end":41,"column_start":1,"column_end":100}},{"value":"/ over the size of the computed hash. Below is shown the planned change (but it doesn't work due","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1347,"byte_end":1445,"line_start":42,"line_end":42,"column_start":1,"column_end":99}},{"value":"/ to limitations in the `associated_type_defaults` feature):","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1446,"byte_end":1508,"line_start":43,"line_end":43,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1509,"byte_end":1512,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ``` ignore","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1513,"byte_end":1527,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/ #![feature(associated_type_defaults)]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1528,"byte_end":1569,"line_start":46,"line_end":46,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1570,"byte_end":1573,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ trait Hasher {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1574,"byte_end":1592,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/     type Hash = u64; // default type for backwards compatibility","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1593,"byte_end":1661,"line_start":49,"line_end":49,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1662,"byte_end":1665,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     fn finish(&self) -> Self::Hash; // changed","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1666,"byte_end":1716,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/     fn write(&mut self, bytes: &[u8]);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1717,"byte_end":1759,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1760,"byte_end":1765,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1766,"byte_end":1773,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1774,"byte_end":1777,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ With this change a single `#[derive(Hash)]` would enough to make a type hashable with 32-bit and","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1778,"byte_end":1878,"line_start":56,"line_end":56,"column_start":1,"column_end":101}},{"value":"/ 64-bit hashers.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1879,"byte_end":1898,"line_start":57,"line_end":57,"column_start":1,"column_end":20}},{"value":"deny(missing_docs)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1900,"byte_end":1922,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"deny(warnings)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1923,"byte_end":1941,"line_start":60,"line_end":60,"column_start":1,"column_end":19}},{"value":"no_std","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":1996,"byte_end":2006,"line_start":62,"line_end":62,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":24},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/fnv.rs","byte_start":8215,"byte_end":8221,"line_start":5,"line_end":5,"column_start":12,"column_end":18},"name":"Hasher","qualname":"::fnv::Hasher","value":"Hasher {  }","parent":null,"children":[{"krate":0,"index":25}],"decl_id":null,"docs":" 32-bit Fowler-Noll-Vo hasher\n","sig":null,"attributes":[{"value":"/ 32-bit Fowler-Noll-Vo hasher","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/fnv.rs","byte_start":8171,"byte_end":8203,"line_start":4,"line_end":4,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":46},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/murmur3.rs","byte_start":8735,"byte_end":8741,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Hasher","qualname":"::murmur3::Hasher","value":"Hasher {  }","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50}],"decl_id":null,"docs":" 32-bit MurmurHash3 hasher\n","sig":null,"attributes":[{"value":"/ 32-bit MurmurHash3 hasher","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/murmur3.rs","byte_start":8694,"byte_end":8723,"line_start":5,"line_end":5,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":72},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":2338,"byte_end":2356,"line_start":78,"line_end":78,"column_start":12,"column_end":30},"name":"BuildHasherDefault","qualname":"::BuildHasherDefault","value":"BuildHasherDefault {  }","parent":null,"children":[{"krate":0,"index":74}],"decl_id":null,"docs":" See [`core::hash::BuildHasherDefault`][0] for details","sig":null,"attributes":[{"value":"/ See [`core::hash::BuildHasherDefault`][0] for details","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":2189,"byte_end":2246,"line_start":75,"line_end":75,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":2247,"byte_end":2250,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ [0]: https://doc.rust-lang.org/core/hash/struct.BuildHasherDefault.html","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":2251,"byte_end":2326,"line_start":77,"line_end":77,"column_start":1,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":84},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":3157,"byte_end":3168,"line_start":123,"line_end":123,"column_start":11,"column_end":22},"name":"BuildHasher","qualname":"::BuildHasher","value":"BuildHasher","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86}],"decl_id":null,"docs":" See [`core::hash::BuildHasher`][0] for details","sig":null,"attributes":[{"value":"/ See [`core::hash::BuildHasher`][0] for details","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":3024,"byte_end":3074,"line_start":120,"line_end":120,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":3075,"byte_end":3078,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ [0]: https://doc.rust-lang.org/core/hash/trait.BuildHasher.html","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":3079,"byte_end":3146,"line_start":122,"line_end":122,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":85},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":3332,"byte_end":3338,"line_start":127,"line_end":127,"column_start":10,"column_end":16},"name":"Hasher","qualname":"::BuildHasher::Hasher","value":"type Hasher: Hasher;","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" See [`core::hash::BuildHasher::Hasher`][0]","sig":null,"attributes":[{"value":"/ See [`core::hash::BuildHasher::Hasher`][0]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":3175,"byte_end":3221,"line_start":124,"line_end":124,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":3226,"byte_end":3229,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [0]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html#associatedtype.Hasher","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":3234,"byte_end":3322,"line_start":126,"line_end":126,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":3513,"byte_end":3525,"line_start":132,"line_end":132,"column_start":8,"column_end":20},"name":"build_hasher","qualname":"::BuildHasher::build_hasher","value":"pub fn build_hasher(&Self) -> Self::Hasher","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" See [`core::hash::BuildHasher.build_hasher`][0]","sig":null,"attributes":[{"value":"/ See [`core::hash::BuildHasher.build_hasher`][0]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":3353,"byte_end":3404,"line_start":129,"line_end":129,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":3409,"byte_end":3412,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ [0]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html#tymethod.build_hasher","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":3417,"byte_end":3505,"line_start":131,"line_end":131,"column_start":5,"column_end":93}}]},{"kind":"Trait","id":{"krate":0,"index":87},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":3813,"byte_end":3819,"line_start":143,"line_end":143,"column_start":11,"column_end":17},"name":"Hasher","qualname":"::Hasher","value":"Hasher","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"decl_id":null,"docs":" See [`core::hash::Hasher`][0] for details","sig":null,"attributes":[{"value":"/ See [`core::hash::Hasher`][0] for details","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":3553,"byte_end":3598,"line_start":135,"line_end":135,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":3599,"byte_end":3602,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ [0]: https://doc.rust-lang.org/core/hash/trait.Hasher.html","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":3603,"byte_end":3665,"line_start":137,"line_end":137,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":3666,"byte_end":3669,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ # Contract","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":3670,"byte_end":3684,"line_start":139,"line_end":139,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":3685,"byte_end":3688,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Implementers of this trait must *not* perform any 64-bit (or 128-bit) operation while computing","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":3689,"byte_end":3788,"line_start":141,"line_end":141,"column_start":1,"column_end":100}},{"value":"/ the hash.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":3789,"byte_end":3802,"line_start":142,"line_end":142,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":3964,"byte_end":3970,"line_start":147,"line_end":147,"column_start":8,"column_end":14},"name":"finish","qualname":"::Hasher::finish","value":"pub fn finish(&Self) -> u32","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" See [`core::hash::Hasher.finish`][0]","sig":null,"attributes":[{"value":"/ See [`core::hash::Hasher.finish`][0]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":3826,"byte_end":3866,"line_start":144,"line_end":144,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":3871,"byte_end":3874,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ [0]: https://doc.rust-lang.org/std/hash/trait.Hasher.html#tymethod.finish","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":3879,"byte_end":3956,"line_start":146,"line_end":146,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":4127,"byte_end":4132,"line_start":152,"line_end":152,"column_start":8,"column_end":13},"name":"write","qualname":"::Hasher::write","value":"pub fn write(&mut Self, &[u8])","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" See [`core::hash::Hasher.write`][0]","sig":null,"attributes":[{"value":"/ See [`core::hash::Hasher.write`][0]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":3991,"byte_end":4030,"line_start":149,"line_end":149,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":4035,"byte_end":4038,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [0]: https://doc.rust-lang.org/std/hash/trait.Hasher.html#tymethod.write","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":4043,"byte_end":4119,"line_start":151,"line_end":151,"column_start":5,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":90},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":4281,"byte_end":4285,"line_start":158,"line_end":158,"column_start":11,"column_end":15},"name":"Hash","qualname":"::Hash","value":"Hash","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":93}],"decl_id":null,"docs":" See [`core::hash::Hash`][0] for details","sig":null,"attributes":[{"value":"/ See [`core::hash::Hash`][0] for details","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":4162,"byte_end":4205,"line_start":155,"line_end":155,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":4206,"byte_end":4209,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ [0]: https://doc.rust-lang.org/core/hash/trait.Hash.html","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":4210,"byte_end":4270,"line_start":157,"line_end":157,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":4345,"byte_end":4349,"line_start":160,"line_end":160,"column_start":8,"column_end":12},"name":"hash","qualname":"::Hash::hash","value":"pub fn hash<H>(&Self, &mut H) where H: Hasher","parent":{"krate":0,"index":90},"children":[],"decl_id":null,"docs":" Feeds this value into the given `Hasher`.\n","sig":null,"attributes":[{"value":"/ Feeds this value into the given `Hasher`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":4292,"byte_end":4337,"line_start":159,"line_end":159,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":4472,"byte_end":4482,"line_start":165,"line_end":165,"column_start":8,"column_end":18},"name":"hash_slice","qualname":"::Hash::hash_slice","value":"pub fn hash_slice<H>(&[Self], &mut H) where H: Hasher, Self: Sized","parent":{"krate":0,"index":90},"children":[],"decl_id":null,"docs":" Feeds a slice of this type into the given `Hasher`.\n","sig":null,"attributes":[{"value":"/ Feeds a slice of this type into the given `Hasher`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":4409,"byte_end":4464,"line_start":164,"line_end":164,"column_start":5,"column_end":60}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/fnv.rs","byte_start":8260,"byte_end":8266,"line_start":9,"line_end":9,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/fnv.rs","byte_start":8355,"byte_end":8361,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/murmur3.rs","byte_start":9007,"byte_end":9012,"line_start":29,"line_end":29,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/murmur3.rs","byte_start":9220,"byte_end":9225,"line_start":40,"line_end":40,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/murmur3.rs","byte_start":9451,"byte_end":9457,"line_start":52,"line_end":52,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/murmur3.rs","byte_start":9922,"byte_end":9928,"line_start":67,"line_end":67,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/murmur3.rs","byte_start":10172,"byte_end":10178,"line_start":79,"line_end":79,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/murmur3.rs","byte_start":13243,"byte_end":13248,"line_start":177,"line_end":177,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":2445,"byte_end":2463,"line_start":85,"line_end":85,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":2617,"byte_end":2635,"line_start":96,"line_end":96,"column_start":9,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":2872,"byte_end":2890,"line_start":109,"line_end":109,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/fnv.rs","byte_start":8260,"byte_end":8266,"line_start":9,"line_end":9,"column_start":18,"column_end":24},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":24},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/fnv.rs","byte_start":8355,"byte_end":8361,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":24},"to":{"krate":0,"index":87}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/murmur3.rs","byte_start":9007,"byte_end":9012,"line_start":29,"line_end":29,"column_start":6,"column_end":11},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/murmur3.rs","byte_start":9220,"byte_end":9225,"line_start":40,"line_end":40,"column_start":22,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":132},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/murmur3.rs","byte_start":9451,"byte_end":9457,"line_start":52,"line_end":52,"column_start":6,"column_end":12},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":46},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/murmur3.rs","byte_start":9922,"byte_end":9928,"line_start":67,"line_end":67,"column_start":18,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":46},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/murmur3.rs","byte_start":10172,"byte_end":10178,"line_start":79,"line_end":79,"column_start":19,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":46},"to":{"krate":0,"index":87}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/murmur3.rs","byte_start":13243,"byte_end":13248,"line_start":177,"line_end":177,"column_start":6,"column_end":11},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":51},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":2445,"byte_end":2463,"line_start":85,"line_end":85,"column_start":21,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":72},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":2617,"byte_end":2635,"line_start":96,"line_end":96,"column_start":9,"column_end":27},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":72},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/hash32-0.1.1/src/lib.rs","byte_start":2872,"byte_end":2890,"line_start":109,"line_end":109,"column_start":25,"column_end":43},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":72},"to":{"krate":0,"index":84}}]}
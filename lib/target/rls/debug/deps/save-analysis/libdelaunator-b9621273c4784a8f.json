{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6","program":"/home/martin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","delaunator","--edition=2018","/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=b9621273c4784a8f","-C","extra-filename=-b9621273c4784a8f","--out-dir","/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps","-L","dependency=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps","--extern","robust=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/librobust-f575d512fe887f4f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/martin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libdelaunator-b9621273c4784a8f.rmeta"},"prelude":{"crate_id":{"name":"delaunator","disambiguator":[4829067781178860404,0]},"crate_root":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src","external_crates":[{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2825088610194081445,0]}},{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[9481142260376939403,0]}},{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[16420834686343379425,0]}},{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[14788966508543342302,0]}},{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11097033969885139948,0]}},{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6800150773471260640,0]}},{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9424233180753397496,0]}},{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4493421558680613340,0]}},{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[10587786945246582611,0]}},{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6037489587312533517,0]}},{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[12999623613951624675,0]}},{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[15285592788019233460,0]}},{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[7690318462147983057,0]}},{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16937637772373355212,0]}},{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8216859446519220865,0]}},{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[6387052066414425180,0]}},{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[879344915155370202,0]}},{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[12947071141408240460,0]}},{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12545025351940724261,0]}},{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","num":20,"id":{"name":"robust","disambiguator":[18352132745156671957,0]}}],"span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":0,"byte_end":17660,"line_start":1,"line_end":635,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":0,"byte_end":17660,"line_start":1,"line_end":635,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":76},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":35},{"krate":0,"index":41},{"krate":0,"index":48},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64}],"decl_id":null,"docs":"A very fast 2D [Delaunay Triangulation](https://en.wikipedia.org/wiki/Delaunay_triangulation) library for Rust.\nA port of [Delaunator](https://github.com/mapbox/delaunator).","sig":null,"attributes":[{"value":"*\nA very fast 2D [Delaunay Triangulation](https://en.wikipedia.org/wiki/Delaunay_triangulation) library for Rust.\nA port of [Delaunator](https://github.com/mapbox/delaunator).\n\n# Example\n\n```rust\nuse delaunator::{Point, triangulate};\n\nlet points = vec![\n    Point { x: 0., y: 0. },\n    Point { x: 1., y: 0. },\n    Point { x: 1., y: 1. },\n    Point { x: 0., y: 1. },\n];\n\nlet result = triangulate(&points);\nprintln!(\"{:?}\", result.triangles); // [0, 2, 1, 0, 3, 2]\n```\n*/","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":0,"byte_end":471,"line_start":1,"line_end":20,"column_start":1,"column_end":3}},{"value":"no_std","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":473,"byte_end":483,"line_start":22,"line_end":22,"column_start":1,"column_end":11}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":484,"byte_end":525,"line_start":23,"line_end":23,"column_start":1,"column_end":42}}]},{"kind":"Const","id":{"krate":0,"index":19},"span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":823,"byte_end":830,"line_start":37,"line_end":37,"column_start":11,"column_end":18},"name":"EPSILON","qualname":"::EPSILON","value":"f64","parent":null,"children":[],"decl_id":null,"docs":" Near-duplicate points (where both `x` and `y` only differ within this value)\n will not be included in the triangulation for robustness.\n","sig":null,"attributes":[{"value":"/ Near-duplicate points (where both `x` and `y` only differ within this value)","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":670,"byte_end":750,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ will not be included in the triangulation for robustness.","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":751,"byte_end":812,"line_start":36,"line_end":36,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":65},"span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":954,"byte_end":959,"line_start":41,"line_end":41,"column_start":12,"column_end":17},"name":"Point","qualname":"::Point","value":"Point { x, y }","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67}],"decl_id":null,"docs":" Represents a 2D point in the input vector.\n","sig":null,"attributes":[{"value":"/ Represents a 2D point in the input vector.","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":859,"byte_end":905,"line_start":39,"line_end":39,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":66},"span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":970,"byte_end":971,"line_start":42,"line_end":42,"column_start":9,"column_end":10},"name":"x","qualname":"::Point::x","value":"f64","parent":{"krate":0,"index":65},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":67},"span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":986,"byte_end":987,"line_start":43,"line_end":43,"column_start":9,"column_end":10},"name":"y","qualname":"::Point::y","value":"f64","parent":{"krate":0,"index":65},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":32},"span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":3507,"byte_end":3512,"line_start":124,"line_end":124,"column_start":11,"column_end":16},"name":"EMPTY","qualname":"::EMPTY","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Represents the area outside of the triangulation.\n Halfedges on the convex hull (which don't have an adjacent halfedge)\n will have this value.\n","sig":null,"attributes":[{"value":"/ Represents the area outside of the triangulation.","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":3344,"byte_end":3397,"line_start":121,"line_end":121,"column_start":1,"column_end":54}},{"value":"/ Halfedges on the convex hull (which don't have an adjacent halfedge)","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":3398,"byte_end":3470,"line_start":122,"line_end":122,"column_start":1,"column_end":73}},{"value":"/ will have this value.","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":3471,"byte_end":3496,"line_start":123,"line_end":123,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":33},"span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":3583,"byte_end":3596,"line_start":127,"line_end":127,"column_start":8,"column_end":21},"name":"next_halfedge","qualname":"::next_halfedge","value":"pub fn next_halfedge(usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Next halfedge in a triangle.\n","sig":null,"attributes":[{"value":"/ Next halfedge in a triangle.","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":3543,"byte_end":3575,"line_start":126,"line_end":126,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":34},"span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":3732,"byte_end":3745,"line_start":136,"line_end":136,"column_start":8,"column_end":21},"name":"prev_halfedge","qualname":"::prev_halfedge","value":"pub fn prev_halfedge(usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Previous halfedge in a triangle.\n","sig":null,"attributes":[{"value":"/ Previous halfedge in a triangle.","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":3688,"byte_end":3724,"line_start":135,"line_end":135,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":76},"span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":3914,"byte_end":3927,"line_start":146,"line_end":146,"column_start":12,"column_end":25},"name":"Triangulation","qualname":"::Triangulation","value":"Triangulation { triangles, halfedges, hull }","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"decl_id":null,"docs":" Result of the Delaunay triangulation.\n","sig":null,"attributes":[{"value":"/ Result of the Delaunay triangulation.","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":3837,"byte_end":3878,"line_start":144,"line_end":144,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":77},"span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":4076,"byte_end":4085,"line_start":149,"line_end":149,"column_start":9,"column_end":18},"name":"triangles","qualname":"::Triangulation::triangles","value":"std::vec::Vec<usize>","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" A vector of point indices where each triple represents a Delaunay triangle.\n All triangles are directed counter-clockwise.\n","sig":null,"attributes":[{"value":"/ A vector of point indices where each triple represents a Delaunay triangle.","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":3934,"byte_end":4013,"line_start":147,"line_end":147,"column_start":5,"column_end":84}},{"value":"/ All triangles are directed counter-clockwise.","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":4018,"byte_end":4067,"line_start":148,"line_end":148,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":78},"span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":4457,"byte_end":4466,"line_start":156,"line_end":156,"column_start":9,"column_end":18},"name":"halfedges","qualname":"::Triangulation::halfedges","value":"std::vec::Vec<usize>","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" A vector of adjacent halfedge indices that allows traversing the triangulation graph.","sig":null,"attributes":[{"value":"/ A vector of adjacent halfedge indices that allows traversing the triangulation graph.","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":4104,"byte_end":4193,"line_start":151,"line_end":151,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":4198,"byte_end":4201,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ `i`-th half-edge in the array corresponds to vertex `triangles[i]`","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":4206,"byte_end":4276,"line_start":153,"line_end":153,"column_start":5,"column_end":75}},{"value":"/ the half-edge is coming from. `halfedges[i]` is the index of a twin half-edge","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":4281,"byte_end":4362,"line_start":154,"line_end":154,"column_start":5,"column_end":86}},{"value":"/ in an adjacent triangle (or `EMPTY` for outer half-edges on the convex hull).","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":4367,"byte_end":4448,"line_start":155,"line_end":155,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":79},"span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":4607,"byte_end":4611,"line_start":160,"line_end":160,"column_start":9,"column_end":13},"name":"hull","qualname":"::Triangulation::hull","value":"std::vec::Vec<usize>","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" A vector of indices that reference points on the convex hull of the triangulation,\n counter-clockwise.\n","sig":null,"attributes":[{"value":"/ A vector of indices that reference points on the convex hull of the triangulation,","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":4485,"byte_end":4571,"line_start":158,"line_end":158,"column_start":5,"column_end":91}},{"value":"/ counter-clockwise.","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":4576,"byte_end":4598,"line_start":159,"line_end":159,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":4995,"byte_end":4998,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"len","qualname":"<Triangulation>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of triangles in the triangulation.\n","sig":null,"attributes":[{"value":"/ The number of triangles in the triangulation.","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":4934,"byte_end":4983,"line_start":174,"line_end":174,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":5068,"byte_end":5076,"line_start":179,"line_end":179,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Triangulation>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":60},"span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":13412,"byte_end":13423,"line_start":479,"line_end":479,"column_start":8,"column_end":19},"name":"triangulate","qualname":"::triangulate","value":"pub fn triangulate(&[Point]) -> Triangulation","parent":null,"children":[],"decl_id":null,"docs":" Triangulate a set of 2D points.\n Returns the triangulation for the input points.\n For the degenerated case when all points are collinear, returns an empty triangulation where all points are in the hull.\n","sig":null,"attributes":[{"value":"/ Triangulate a set of 2D points.","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":13192,"byte_end":13227,"line_start":476,"line_end":476,"column_start":1,"column_end":36}},{"value":"/ Returns the triangulation for the input points.","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":13228,"byte_end":13279,"line_start":477,"line_end":477,"column_start":1,"column_end":52}},{"value":"/ For the degenerated case when all points are collinear, returns an empty triangulation where all points are in the hull.","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":13280,"byte_end":13404,"line_start":478,"line_end":478,"column_start":1,"column_end":125}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":1017,"byte_end":1022,"line_start":46,"line_end":46,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":1169,"byte_end":1174,"line_start":52,"line_end":52,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":1291,"byte_end":1296,"line_start":58,"line_end":58,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":4633,"byte_end":4646,"line_start":163,"line_end":163,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":8440,"byte_end":8444,"line_start":303,"line_end":303,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":1017,"byte_end":1022,"line_start":46,"line_end":46,"column_start":21,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":65},"to":{"krate":1,"index":9595}},{"span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":1169,"byte_end":1174,"line_start":52,"line_end":52,"column_start":31,"column_end":36},"kind":{"Impl":{"id":1}},"from":{"krate":20,"index":111},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":1291,"byte_end":1296,"line_start":58,"line_end":58,"column_start":6,"column_end":11},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":65},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":4633,"byte_end":4646,"line_start":163,"line_end":163,"column_start":6,"column_end":19},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":76},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/git/checkouts/delaunator-rs-9f1e8b8d7a0593f5/81e58c6/src/lib.rs","byte_start":8440,"byte_end":8444,"line_start":303,"line_end":303,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":41},"to":{"krate":4294967295,"index":4294967295}}]}
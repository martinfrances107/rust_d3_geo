{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4","program":"/home/martin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","generic_array","/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=e879fae5ddc70131","-C","extra-filename=-e879fae5ddc70131","--out-dir","/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps","-L","dependency=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps","--extern","typenum=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libtypenum-1f04878634d9326a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/martin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libgeneric_array-e879fae5ddc70131.rmeta"},"prelude":{"crate_id":{"name":"generic_array","disambiguator":[4483899168197973923,0]},"crate_root":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src","external_crates":[{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2825088610194081445,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[9481142260376939403,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[16420834686343379425,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","num":4,"id":{"name":"typenum","disambiguator":[2930080192617149959,0]}}],"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":0,"byte_end":16877,"line_start":1,"line_end":632,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":267},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":1545,"byte_end":1561,"line_start":71,"line_end":71,"column_start":15,"column_end":31},"alias_span":null,"name":"GenericArrayIter","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":0,"byte_end":16877,"line_start":1,"line_end":632,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":38},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":168},{"krate":0,"index":194},{"krate":0,"index":243},{"krate":0,"index":313},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":430},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":443},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":454},{"krate":0,"index":458},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":473},{"krate":0,"index":477},{"krate":0,"index":482},{"krate":0,"index":488},{"krate":0,"index":492},{"krate":0,"index":497},{"krate":0,"index":502},{"krate":0,"index":506},{"krate":0,"index":513},{"krate":0,"index":520},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":544},{"krate":0,"index":549},{"krate":0,"index":565},{"krate":0,"index":572},{"krate":0,"index":577},{"krate":0,"index":582},{"krate":0,"index":586},{"krate":0,"index":591}],"decl_id":null,"docs":" This crate implements a structure that can be used as a generic array type.use\n Core Rust array types `[T; N]` can't be used generically with\n respect to `N`, so for example this:","sig":null,"attributes":[{"value":"/ This crate implements a structure that can be used as a generic array type.use","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":0,"byte_end":82,"line_start":1,"line_end":1,"column_start":1,"column_end":83}},{"value":"/ Core Rust array types `[T; N]` can't be used generically with","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":83,"byte_end":148,"line_start":2,"line_end":2,"column_start":1,"column_end":66}},{"value":"/ respect to `N`, so for example this:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":149,"byte_end":189,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":190,"byte_end":193,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```{should_fail}","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":194,"byte_end":214,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/ struct Foo<T, N> {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":215,"byte_end":237,"line_start":6,"line_end":6,"column_start":1,"column_end":23}},{"value":"/     data: [T; N]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":238,"byte_end":258,"line_start":7,"line_end":7,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":259,"byte_end":264,"line_start":8,"line_end":8,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":265,"byte_end":272,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":273,"byte_end":276,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ won't work.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":277,"byte_end":292,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":293,"byte_end":296,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ **generic-array** exports a `GenericArray<T,N>` type, which lets","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":297,"byte_end":365,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/ the above be implemented as:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":366,"byte_end":398,"line_start":14,"line_end":14,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":399,"byte_end":402,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":403,"byte_end":410,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # use generic_array::{ArrayLength, GenericArray};","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":411,"byte_end":464,"line_start":17,"line_end":17,"column_start":1,"column_end":54}},{"value":"/ struct Foo<T, N: ArrayLength<T>> {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":465,"byte_end":503,"line_start":18,"line_end":18,"column_start":1,"column_end":39}},{"value":"/     data: GenericArray<T,N>","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":504,"byte_end":535,"line_start":19,"line_end":19,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":536,"byte_end":541,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":542,"byte_end":549,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":550,"byte_end":553,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The `ArrayLength<T>` trait is implemented by default for","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":554,"byte_end":614,"line_start":23,"line_end":23,"column_start":1,"column_end":61}},{"value":"/ [unsigned integer types](../typenum/uint/index.html) from","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":615,"byte_end":676,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/ [typenum](../typenum/index.html).","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":677,"byte_end":714,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":715,"byte_end":718,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ For ease of use, an `arr!` macro is provided - example below:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":719,"byte_end":784,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":785,"byte_end":788,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":789,"byte_end":796,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":797,"byte_end":815,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ # extern crate generic_array;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":816,"byte_end":849,"line_start":31,"line_end":31,"column_start":1,"column_end":34}},{"value":"/ # extern crate typenum;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":850,"byte_end":877,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/ # fn main() {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":878,"byte_end":895,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ let array = arr![u32; 1, 2, 3];","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":896,"byte_end":931,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(array[2], 3);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":932,"byte_end":960,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":961,"byte_end":968,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":969,"byte_end":976,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"deny(missing_docs)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":978,"byte_end":1000,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"no_std","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":1001,"byte_end":1011,"line_start":40,"line_end":40,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":168},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/arr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"arr","qualname":"::arr","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/arr.rs","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":182},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192}],"decl_id":null,"docs":" Implementation for `arr!` macro.\n","sig":null,"attributes":[{"value":"/ Implementation for `arr!` macro.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/arr.rs","byte_start":24252,"byte_end":24288,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":178},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/arr.rs","byte_start":24396,"byte_end":24405,"line_start":8,"line_end":8,"column_start":11,"column_end":20},"name":"AddLength","qualname":"::arr::AddLength","value":"AddLength<T, N: ArrayLength<T>>: ArrayLength<T>","parent":null,"children":[{"krate":0,"index":181}],"decl_id":null,"docs":" Helper trait for `arr!` macro\n","sig":null,"attributes":[{"value":"/ Helper trait for `arr!` macro","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/arr.rs","byte_start":24352,"byte_end":24385,"line_start":7,"line_end":7,"column_start":1,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":181},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/arr.rs","byte_start":24480,"byte_end":24486,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"Output","qualname":"::arr::AddLength::Output","value":"type Output: ArrayLength<T>;","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" Resulting length\n","sig":null,"attributes":[{"value":"/ Resulting length","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/arr.rs","byte_start":24450,"byte_end":24470,"line_start":9,"line_end":9,"column_start":5,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":187},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/arr.rs","byte_start":24746,"byte_end":24749,"line_start":23,"line_end":23,"column_start":10,"column_end":13},"name":"Inc","qualname":"::arr::Inc","value":"<U as AddLength<T, U1>>::Output","parent":null,"children":[],"decl_id":null,"docs":" Helper type for `arr!` macro\n","sig":null,"attributes":[{"value":"/ Helper type for `arr!` macro","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/arr.rs","byte_start":24704,"byte_end":24736,"line_start":22,"line_end":22,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":194},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"functional","qualname":"::functional","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":206},{"krate":0,"index":212},{"krate":0,"index":218},{"krate":0,"index":222},{"krate":0,"index":235},{"krate":0,"index":239}],"decl_id":null,"docs":" Functional programming with generic sequences","sig":null,"attributes":[{"value":"/ Functional programming with generic sequences","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":27857,"byte_end":27906,"line_start":1,"line_end":1,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":27907,"byte_end":27910,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Please see `tests/generics.rs` for examples of how to best use these in your generic functions.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":27911,"byte_end":28010,"line_start":3,"line_end":3,"column_start":1,"column_end":100}}]},{"kind":"Trait","id":{"krate":0,"index":202},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":28216,"byte_end":28237,"line_start":11,"line_end":11,"column_start":18,"column_end":39},"name":"MappedGenericSequence","qualname":"::functional::MappedGenericSequence","value":"MappedGenericSequence<T, U>: GenericSequence<T>","parent":null,"children":[{"krate":0,"index":205}],"decl_id":null,"docs":" Defines the relationship between one generic sequence and another,\n for operations such as `map` and `zip`.\n","sig":null,"attributes":[{"value":"/ Defines the relationship between one generic sequence and another,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":28084,"byte_end":28154,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ for operations such as `map` and `zip`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":28155,"byte_end":28198,"line_start":10,"line_end":10,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":205},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":28344,"byte_end":28350,"line_start":16,"line_end":16,"column_start":10,"column_end":16},"name":"Mapped","qualname":"::functional::MappedGenericSequence::Mapped","value":"type Mapped: GenericSequence<U, Length = Self::Length>;","parent":{"krate":0,"index":202},"children":[],"decl_id":null,"docs":" Mapped sequence type\n","sig":null,"attributes":[{"value":"/ Mapped sequence type","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":28310,"byte_end":28334,"line_start":15,"line_end":15,"column_start":5,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":218},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":29119,"byte_end":29133,"line_start":38,"line_end":38,"column_start":10,"column_end":24},"name":"MappedSequence","qualname":"::functional::MappedSequence","value":"<<S as MappedGenericSequence<T, U>>::Mapped as GenericSequence<U>>::Sequence","parent":null,"children":[],"decl_id":null,"docs":" Accessor type for a mapped generic sequence\n","sig":null,"attributes":[{"value":"/ Accessor type for a mapped generic sequence","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":29062,"byte_end":29109,"line_start":37,"line_end":37,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":222},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":29310,"byte_end":29328,"line_start":42,"line_end":42,"column_start":18,"column_end":36},"name":"FunctionalSequence","qualname":"::functional::FunctionalSequence","value":"FunctionalSequence<T>: GenericSequence<T>","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":232}],"decl_id":null,"docs":" Defines functional programming methods for generic sequences\n","sig":null,"attributes":[{"value":"/ Defines functional programming methods for generic sequences","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":29228,"byte_end":29292,"line_start":41,"line_end":41,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":29619,"byte_end":29622,"line_start":47,"line_end":47,"column_start":8,"column_end":11},"name":"map","qualname":"::functional::FunctionalSequence::map","value":"pub fn map<U, F>(Self, F) -> MappedSequence<Self, T, U> where\nSelf: MappedGenericSequence<T, U>, Self::Length: ArrayLength<U>,\nF: FnMut(Self::Item) -> U","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":" Maps a `GenericSequence` to another `GenericSequence`.","sig":null,"attributes":[{"value":"/ Maps a `GenericSequence` to another `GenericSequence`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":29358,"byte_end":29416,"line_start":43,"line_end":43,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":29421,"byte_end":29424,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ If the mapping function panics, any already initialized elements in the new sequence","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":29429,"byte_end":29517,"line_start":45,"line_end":45,"column_start":5,"column_end":93}},{"value":"/ will be dropped, AND any unused elements in the source sequence will also be dropped.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":29522,"byte_end":29611,"line_start":46,"line_end":46,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":30261,"byte_end":30264,"line_start":62,"line_end":62,"column_start":8,"column_end":11},"name":"zip","qualname":"::functional::FunctionalSequence::zip","value":"pub fn zip<B, Rhs, U, F>(Self, Rhs, F) -> MappedSequence<Self, T, U> where\nSelf: MappedGenericSequence<T, U>, Rhs: MappedGenericSequence<B, U, Mapped =\nMappedSequence<Self, T, U>>, Self::Length: ArrayLength<B> + ArrayLength<U>,\nRhs: GenericSequence<B, Length = Self::Length>,\nF: FnMut(Self::Item, Rhs::Item) -> U","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":" Combines two `GenericSequence` instances and iterates through both of them,\n initializing a new `GenericSequence` with the result of the zipped mapping function.","sig":null,"attributes":[{"value":"/ Combines two `GenericSequence` instances and iterates through both of them,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":29871,"byte_end":29950,"line_start":56,"line_end":56,"column_start":5,"column_end":84}},{"value":"/ initializing a new `GenericSequence` with the result of the zipped mapping function.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":29955,"byte_end":30043,"line_start":57,"line_end":57,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":30048,"byte_end":30051,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ If the mapping function panics, any already initialized elements in the new sequence","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":30056,"byte_end":30144,"line_start":59,"line_end":59,"column_start":5,"column_end":93}},{"value":"/ will be dropped, AND any unused elements in the source sequences will also be dropped.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":30149,"byte_end":30239,"line_start":60,"line_end":60,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":30244,"byte_end":30253,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":30824,"byte_end":30828,"line_start":76,"line_end":76,"column_start":8,"column_end":12},"name":"fold","qualname":"::functional::FunctionalSequence::fold","value":"pub fn fold<U, F>(Self, U, F) -> U where F: FnMut(U, Self::Item) -> U","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":" Folds (or reduces) a sequence of data into a single value.","sig":null,"attributes":[{"value":"/ Folds (or reduces) a sequence of data into a single value.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":30672,"byte_end":30734,"line_start":73,"line_end":73,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":30739,"byte_end":30742,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ If the fold function panics, any unused elements will be dropped.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":30747,"byte_end":30816,"line_start":75,"line_end":75,"column_start":5,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":243},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iter","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":273},{"krate":0,"index":278},{"krate":0,"index":284},{"krate":0,"index":288},{"krate":0,"index":292},{"krate":0,"index":296},{"krate":0,"index":305},{"krate":0,"index":309}],"decl_id":null,"docs":" `GenericArray` iterator implementation.\n","sig":null,"attributes":[{"value":"/ `GenericArray` iterator implementation.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","byte_start":31203,"byte_end":31246,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":267},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","byte_start":31412,"byte_end":31428,"line_start":8,"line_end":8,"column_start":12,"column_end":28},"name":"GenericArrayIter","qualname":"::iter::GenericArrayIter","value":"GenericArrayIter {  }","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272}],"decl_id":null,"docs":" An iterator that moves out of a `GenericArray`\n","sig":null,"attributes":[{"value":"/ An iterator that moves out of a `GenericArray`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","byte_start":31350,"byte_end":31400,"line_start":7,"line_end":7,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","byte_start":32086,"byte_end":32094,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<GenericArrayIter<T, N>>::as_slice","value":"pub fn as_slice(&Self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining items of this iterator as a slice\n","sig":null,"attributes":[{"value":"/ Returns the remaining items of this iterator as a slice","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","byte_start":32001,"byte_end":32060,"line_start":33,"line_end":33,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","byte_start":32065,"byte_end":32074,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","byte_start":32276,"byte_end":32288,"line_start":41,"line_end":41,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<GenericArrayIter<T, N>>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining items of this iterator as a mutable slice\n","sig":null,"attributes":[{"value":"/ Returns the remaining items of this iterator as a mutable slice","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","byte_start":32183,"byte_end":32250,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","byte_start":32255,"byte_end":32264,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":313},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sequence","qualname":"::sequence","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":319},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":347},{"krate":0,"index":349},{"krate":0,"index":357},{"krate":0,"index":365},{"krate":0,"index":370},{"krate":0,"index":375},{"krate":0,"index":381},{"krate":0,"index":387},{"krate":0,"index":393},{"krate":0,"index":400},{"krate":0,"index":406}],"decl_id":null,"docs":" Useful traits for manipulating sequences of data stored in `GenericArray`s\n","sig":null,"attributes":[{"value":"/ Useful traits for manipulating sequences of data stored in `GenericArray`s","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":35660,"byte_end":35738,"line_start":1,"line_end":1,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":330},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":36007,"byte_end":36022,"line_start":11,"line_end":11,"column_start":18,"column_end":33},"name":"GenericSequence","qualname":"::sequence::GenericSequence","value":"GenericSequence<T>: Sized + IntoIterator","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":341}],"decl_id":null,"docs":" Defines some sequence with an associated length and iteration capabilities.","sig":null,"attributes":[{"value":"/ Defines some sequence with an associated length and iteration capabilities.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":35838,"byte_end":35917,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":35918,"byte_end":35921,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is useful for passing N-length generic arrays as generics.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":35922,"byte_end":35989,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":332},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":36100,"byte_end":36106,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Length","qualname":"::sequence::GenericSequence::Length","value":"type Length: ArrayLength<T>;","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" `GenericArray` associated length\n","sig":null,"attributes":[{"value":"/ `GenericArray` associated length","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":36054,"byte_end":36090,"line_start":12,"line_end":12,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":333},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":36236,"byte_end":36244,"line_start":16,"line_end":16,"column_start":10,"column_end":18},"name":"Sequence","qualname":"::sequence::GenericSequence::Sequence","value":"type Sequence: GenericSequence<T, Length = Self::Length> + FromIterator<T>;","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Concrete sequence type used in conjuction with reference implementations of `GenericSequence`\n","sig":null,"attributes":[{"value":"/ Concrete sequence type used in conjuction with reference implementations of `GenericSequence`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":36129,"byte_end":36226,"line_start":15,"line_end":15,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":36525,"byte_end":36533,"line_start":22,"line_end":22,"column_start":8,"column_end":16},"name":"generate","qualname":"::sequence::GenericSequence::generate","value":"pub fn generate<F>(F) -> Self::Sequence where F: FnMut(usize) -> T","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Initializes a new sequence instance using the given function.","sig":null,"attributes":[{"value":"/ Initializes a new sequence instance using the given function.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":36312,"byte_end":36377,"line_start":18,"line_end":18,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":36382,"byte_end":36385,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ If the generator function panics while initializing the sequence,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":36390,"byte_end":36459,"line_start":20,"line_end":20,"column_start":5,"column_end":74}},{"value":"/ any already initialized elements will be dropped.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":36464,"byte_end":36517,"line_start":21,"line_end":21,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":36628,"byte_end":36640,"line_start":27,"line_end":27,"column_start":8,"column_end":20},"name":"inverted_zip","qualname":"::sequence::GenericSequence::inverted_zip","value":"pub fn inverted_zip<B, U, F>(Self, GenericArray<B, Self::Length>, F)\n-> MappedSequence<GenericArray<B, Self::Length>, B, U> where\nGenericArray<B, Self::Length>: GenericSequence<B, Length = Self::Length> +\nMappedGenericSequence<B, U>, Self: MappedGenericSequence<T, U>,\nSelf::Length: ArrayLength<B> + ArrayLength<U>, F: FnMut(B, Self::Item) -> U","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":37599,"byte_end":37612,"line_start":59,"line_end":59,"column_start":8,"column_end":21},"name":"inverted_zip2","qualname":"::sequence::GenericSequence::inverted_zip2","value":"pub fn inverted_zip2<B, Lhs, U, F>(Self, Lhs, F) -> MappedSequence<Lhs, B, U>\nwhere Lhs: GenericSequence<B, Length = Self::Length> +\nMappedGenericSequence<B, U>, Self: MappedGenericSequence<T, U>,\nSelf::Length: ArrayLength<B> + ArrayLength<U>, F: FnMut(Lhs::Item, Self::Item)\n-> U","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":347},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":38267,"byte_end":38279,"line_start":74,"line_end":74,"column_start":10,"column_end":22},"name":"SequenceItem","qualname":"::sequence::SequenceItem","value":"<T as IntoIterator>::Item","parent":null,"children":[],"decl_id":null,"docs":" Accessor for `GenericSequence` item type, which is really `IntoIterator::Item`","sig":null,"attributes":[{"value":"/ Accessor for `GenericSequence` item type, which is really `IntoIterator::Item`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":38030,"byte_end":38112,"line_start":70,"line_end":70,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":38113,"byte_end":38116,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ For deeply nested generic mapped sequence types, like shown in `tests/generics.rs`,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":38117,"byte_end":38204,"line_start":72,"line_end":72,"column_start":1,"column_end":88}},{"value":"/ this can be useful for keeping things organized.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":38205,"byte_end":38257,"line_start":73,"line_end":73,"column_start":1,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":365},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39171,"byte_end":39179,"line_start":112,"line_end":112,"column_start":18,"column_end":26},"name":"Lengthen","qualname":"::sequence::Lengthen","value":"Lengthen<T>: Sized + GenericSequence<T>","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369}],"decl_id":null,"docs":" Defines any `GenericSequence` which can be lengthened or extended by appending\n or prepending an element to it.","sig":null,"attributes":[{"value":"/ Defines any `GenericSequence` which can be lengthened or extended by appending","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":38933,"byte_end":39015,"line_start":108,"line_end":108,"column_start":1,"column_end":83}},{"value":"/ or prepending an element to it.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39016,"byte_end":39051,"line_start":109,"line_end":109,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39052,"byte_end":39055,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Any lengthened sequence can be shortened back to the original using `pop_front` or `pop_back`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39056,"byte_end":39153,"line_start":111,"line_end":111,"column_start":1,"column_end":98}}]},{"kind":"Type","id":{"krate":0,"index":367},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39286,"byte_end":39292,"line_start":114,"line_end":114,"column_start":10,"column_end":16},"name":"Longer","qualname":"::sequence::Lengthen::Longer","value":"type Longer: Shorten<T, Shorter = Self>;","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" `GenericSequence` that has one more element than `Self`\n","sig":null,"attributes":[{"value":"/ `GenericSequence` that has one more element than `Self`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39217,"byte_end":39276,"line_start":113,"line_end":113,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39598,"byte_end":39604,"line_start":127,"line_end":127,"column_start":8,"column_end":14},"name":"append","qualname":"::sequence::Lengthen::append","value":"pub fn append(Self, T) -> Self::Longer","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Returns a new array with the given element appended to the end of it.","sig":null,"attributes":[{"value":"/ Returns a new array with the given element appended to the end of it.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39327,"byte_end":39400,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39405,"byte_end":39408,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39413,"byte_end":39425,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39430,"byte_end":39433,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39438,"byte_end":39451,"line_start":120,"line_end":120,"column_start":5,"column_end":18}},{"value":"/ let a = arr![i32; 1, 2, 3];","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39456,"byte_end":39487,"line_start":121,"line_end":121,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39492,"byte_end":39495,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let b = a.append(4);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39500,"byte_end":39524,"line_start":123,"line_end":123,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39529,"byte_end":39532,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b, arr![i32; 1, 2, 3, 4]);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39537,"byte_end":39578,"line_start":125,"line_end":125,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39583,"byte_end":39590,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39917,"byte_end":39924,"line_start":140,"line_end":140,"column_start":8,"column_end":15},"name":"prepend","qualname":"::sequence::Lengthen::prepend","value":"pub fn prepend(Self, T) -> Self::Longer","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Returns a new array with the given element prepended to the front of it.","sig":null,"attributes":[{"value":"/ Returns a new array with the given element prepended to the front of it.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39642,"byte_end":39718,"line_start":129,"line_end":129,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39723,"byte_end":39726,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39731,"byte_end":39743,"line_start":131,"line_end":131,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39748,"byte_end":39751,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39756,"byte_end":39769,"line_start":133,"line_end":133,"column_start":5,"column_end":18}},{"value":"/ let a = arr![i32; 1, 2, 3];","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39774,"byte_end":39805,"line_start":134,"line_end":134,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39810,"byte_end":39813,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ let b = a.prepend(4);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39818,"byte_end":39843,"line_start":136,"line_end":136,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39848,"byte_end":39851,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b, arr![i32; 4, 1, 2, 3]);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39856,"byte_end":39897,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39902,"byte_end":39909,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":370},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40192,"byte_end":40199,"line_start":147,"line_end":147,"column_start":18,"column_end":25},"name":"Shorten","qualname":"::sequence::Shorten","value":"Shorten<T>: Sized + GenericSequence<T>","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374}],"decl_id":null,"docs":" Defines a `GenericSequence` which can be shortened by removing the first or last element from it.","sig":null,"attributes":[{"value":"/ Defines a `GenericSequence` which can be shortened by removing the first or last element from it.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39961,"byte_end":40062,"line_start":143,"line_end":143,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40063,"byte_end":40066,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ Additionally, any shortened sequence can be lengthened by","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40067,"byte_end":40128,"line_start":145,"line_end":145,"column_start":1,"column_end":62}},{"value":"/ appending or prepending an element to it.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40129,"byte_end":40174,"line_start":146,"line_end":146,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":372},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40306,"byte_end":40313,"line_start":149,"line_end":149,"column_start":10,"column_end":17},"name":"Shorter","qualname":"::sequence::Shorten::Shorter","value":"type Shorter: Lengthen<T, Longer = Self>;","parent":{"krate":0,"index":370},"children":[],"decl_id":null,"docs":" `GenericSequence` that has one less element than `Self`\n","sig":null,"attributes":[{"value":"/ `GenericSequence` that has one less element than `Self`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40237,"byte_end":40296,"line_start":148,"line_end":148,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40661,"byte_end":40669,"line_start":163,"line_end":163,"column_start":8,"column_end":16},"name":"pop_back","qualname":"::sequence::Shorten::pop_back","value":"pub fn pop_back(Self) -> (Self::Shorter, T)","parent":{"krate":0,"index":370},"children":[],"decl_id":null,"docs":" Returns a new array without the last element, and the last element.","sig":null,"attributes":[{"value":"/ Returns a new array without the last element, and the last element.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40348,"byte_end":40419,"line_start":151,"line_end":151,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40424,"byte_end":40427,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40432,"byte_end":40444,"line_start":153,"line_end":153,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40449,"byte_end":40452,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40457,"byte_end":40470,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ let a = arr![i32; 1, 2, 3, 4];","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40475,"byte_end":40509,"line_start":156,"line_end":156,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40514,"byte_end":40517,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ let (init, last) = a.pop_back();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40522,"byte_end":40558,"line_start":158,"line_end":158,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40563,"byte_end":40566,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(init, arr![i32; 1, 2, 3]);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40571,"byte_end":40612,"line_start":160,"line_end":160,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(last, 4);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40617,"byte_end":40641,"line_start":161,"line_end":161,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40646,"byte_end":40653,"line_start":162,"line_end":162,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":41012,"byte_end":41021,"line_start":176,"line_end":176,"column_start":8,"column_end":17},"name":"pop_front","qualname":"::sequence::Shorten::pop_front","value":"pub fn pop_front(Self) -> (T, Self::Shorter)","parent":{"krate":0,"index":370},"children":[],"decl_id":null,"docs":" Returns a new array without the first element, and the first element.\n Example:","sig":null,"attributes":[{"value":"/ Returns a new array without the first element, and the first element.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40704,"byte_end":40777,"line_start":165,"line_end":165,"column_start":5,"column_end":78}},{"value":"/ Example:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40782,"byte_end":40794,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40799,"byte_end":40802,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40807,"byte_end":40820,"line_start":168,"line_end":168,"column_start":5,"column_end":18}},{"value":"/ let a = arr![i32; 1, 2, 3, 4];","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40825,"byte_end":40859,"line_start":169,"line_end":169,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40864,"byte_end":40867,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let (head, tail) = a.pop_front();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40872,"byte_end":40909,"line_start":171,"line_end":171,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40914,"byte_end":40917,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(head, 1);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40922,"byte_end":40946,"line_start":173,"line_end":173,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(tail, arr![i32; 2, 3, 4]);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40951,"byte_end":40992,"line_start":174,"line_end":174,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40997,"byte_end":41004,"line_start":175,"line_end":175,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":387},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":42905,"byte_end":42910,"line_start":248,"line_end":248,"column_start":18,"column_end":23},"name":"Split","qualname":"::sequence::Split","value":"Split<T, K>: GenericSequence<T>","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392}],"decl_id":null,"docs":" Defines a `GenericSequence` that can be split into two parts at a given pivot index.\n","sig":null,"attributes":[{"value":"/ Defines a `GenericSequence` that can be split into two parts at a given pivot index.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":42799,"byte_end":42887,"line_start":247,"line_end":247,"column_start":1,"column_end":89}}]},{"kind":"Type","id":{"krate":0,"index":390},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":43025,"byte_end":43030,"line_start":253,"line_end":253,"column_start":10,"column_end":15},"name":"First","qualname":"::sequence::Split::First","value":"type First: GenericSequence<T>;","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" First part of the resulting split array\n","sig":null,"attributes":[{"value":"/ First part of the resulting split array","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":42972,"byte_end":43015,"line_start":252,"line_end":252,"column_start":5,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":391},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":43110,"byte_end":43116,"line_start":255,"line_end":255,"column_start":10,"column_end":16},"name":"Second","qualname":"::sequence::Split::Second","value":"type Second: GenericSequence<T>;","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Second part of the resulting split array\n","sig":null,"attributes":[{"value":"/ Second part of the resulting split array","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":43056,"byte_end":43100,"line_start":254,"line_end":254,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":43233,"byte_end":43238,"line_start":258,"line_end":258,"column_start":8,"column_end":13},"name":"split","qualname":"::sequence::Split::split","value":"pub fn split(Self) -> (Self::First, Self::Second)","parent":{"krate":0,"index":387},"children":[],"decl_id":null,"docs":" Splits an array at the given index, returning the separate parts of the array.\n","sig":null,"attributes":[{"value":"/ Splits an array at the given index, returning the separate parts of the array.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":43143,"byte_end":43225,"line_start":257,"line_end":257,"column_start":5,"column_end":87}}]},{"kind":"Trait","id":{"krate":0,"index":400},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":43961,"byte_end":43967,"line_start":285,"line_end":285,"column_start":18,"column_end":24},"name":"Concat","qualname":"::sequence::Concat","value":"Concat<T, M>: GenericSequence<T>","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405}],"decl_id":null,"docs":" Defines `GenericSequence`s which can be joined together, forming a larger array.\n","sig":null,"attributes":[{"value":"/ Defines `GenericSequence`s which can be joined together, forming a larger array.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":43859,"byte_end":43943,"line_start":284,"line_end":284,"column_start":1,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":403},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":44082,"byte_end":44086,"line_start":290,"line_end":290,"column_start":10,"column_end":14},"name":"Rest","qualname":"::sequence::Concat::Rest","value":"type Rest: GenericSequence<T, Length = M>;","parent":{"krate":0,"index":400},"children":[],"decl_id":null,"docs":" Sequence to be concatenated with `self`\n","sig":null,"attributes":[{"value":"/ Sequence to be concatenated with `self`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":44029,"byte_end":44072,"line_start":289,"line_end":289,"column_start":5,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":404},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":44186,"byte_end":44192,"line_start":293,"line_end":293,"column_start":10,"column_end":16},"name":"Output","qualname":"::sequence::Concat::Output","value":"type Output: GenericSequence<T>;","parent":{"krate":0,"index":400},"children":[],"decl_id":null,"docs":" Resulting sequence formed by the concatenation.\n","sig":null,"attributes":[{"value":"/ Resulting sequence formed by the concatenation.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":44125,"byte_end":44176,"line_start":292,"line_end":292,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":44267,"byte_end":44273,"line_start":296,"line_end":296,"column_start":8,"column_end":14},"name":"concat","qualname":"::sequence::Concat::concat","value":"pub fn concat(Self, Self::Rest) -> Self::Output","parent":{"krate":0,"index":400},"children":[],"decl_id":null,"docs":" Concatenate, or join, two sequences.\n","sig":null,"attributes":[{"value":"/ Concatenate, or join, two sequences.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":44219,"byte_end":44259,"line_start":295,"line_end":295,"column_start":5,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":418},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":1683,"byte_end":1694,"line_start":75,"line_end":75,"column_start":18,"column_end":29},"name":"ArrayLength","qualname":"::ArrayLength","value":"ArrayLength<T>: Unsigned","parent":null,"children":[{"krate":0,"index":420}],"decl_id":null,"docs":" Trait making `GenericArray` work, marking types to be used as length of an array\n","sig":null,"attributes":[{"value":"/ Trait making `GenericArray` work, marking types to be used as length of an array","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":1581,"byte_end":1665,"line_start":74,"line_end":74,"column_start":1,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":420},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":1786,"byte_end":1795,"line_start":77,"line_end":77,"column_start":10,"column_end":19},"name":"ArrayType","qualname":"::ArrayLength::ArrayType","value":"type ArrayType;","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" Associated type representing the array type for the number\n","sig":null,"attributes":[{"value":"/ Associated type representing the array type for the number","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":1714,"byte_end":1776,"line_start":76,"line_end":76,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":424},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":2010,"byte_end":2030,"line_start":89,"line_end":89,"column_start":12,"column_end":32},"name":"GenericArrayImplEven","qualname":"::GenericArrayImplEven","value":"GenericArrayImplEven {  }","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429}],"decl_id":null,"docs":" Internal type used to generate a struct of appropriate size\n","sig":null,"attributes":[{"value":"/ Internal type used to generate a struct of appropriate size","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":1889,"byte_end":1952,"line_start":85,"line_end":85,"column_start":1,"column_end":64}},{"value":"allow(dead_code)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":1953,"byte_end":1972,"line_start":86,"line_end":86,"column_start":1,"column_end":20}},{"value":"repr(C)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":1973,"byte_end":1983,"line_start":87,"line_end":87,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":437},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":2573,"byte_end":2592,"line_start":111,"line_end":111,"column_start":12,"column_end":31},"name":"GenericArrayImplOdd","qualname":"::GenericArrayImplOdd","value":"GenericArrayImplOdd {  }","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442}],"decl_id":null,"docs":" Internal type used to generate a struct of appropriate size\n","sig":null,"attributes":[{"value":"/ Internal type used to generate a struct of appropriate size","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":2452,"byte_end":2515,"line_start":107,"line_end":107,"column_start":1,"column_end":64}},{"value":"allow(dead_code)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":2516,"byte_end":2535,"line_start":108,"line_end":108,"column_start":1,"column_end":20}},{"value":"repr(C)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":2536,"byte_end":2546,"line_start":109,"line_end":109,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":458},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":3406,"byte_end":3418,"line_start":141,"line_end":141,"column_start":12,"column_end":24},"name":"GenericArray","qualname":"::GenericArray","value":"GenericArray {  }","parent":null,"children":[{"krate":0,"index":461}],"decl_id":null,"docs":" Struct representing a generic array - `GenericArray<T, N>` works like [T; N]\n","sig":null,"attributes":[{"value":"/ Struct representing a generic array - `GenericArray<T, N>` works like [T; N]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":3294,"byte_end":3374,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"allow(dead_code)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":3375,"byte_end":3394,"line_start":140,"line_end":140,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":477},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":4364,"byte_end":4376,"line_start":176,"line_end":176,"column_start":12,"column_end":24},"name":"ArrayBuilder","qualname":"::ArrayBuilder","value":"ArrayBuilder {  }","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481}],"decl_id":null,"docs":" Creates an array one element at a time using a mutable iterator\n you can write to with `ptr::write`.","sig":null,"attributes":[{"value":"/ Creates an array one element at a time using a mutable iterator","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":4094,"byte_end":4161,"line_start":170,"line_end":170,"column_start":1,"column_end":68}},{"value":"/ you can write to with `ptr::write`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":4162,"byte_end":4201,"line_start":171,"line_end":171,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":4202,"byte_end":4205,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ Incremenent the position while iterating to mark off created elements,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":4206,"byte_end":4280,"line_start":173,"line_end":173,"column_start":1,"column_end":75}},{"value":"/ which will be dropped if `into_inner` is not called.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":4281,"byte_end":4337,"line_start":174,"line_end":174,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":4569,"byte_end":4572,"line_start":184,"line_end":184,"column_start":19,"column_end":22},"name":"new","qualname":"<ArrayBuilder<T, N>>::new","value":"pub unsafe fn new() -> ArrayBuilder<T, N>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":4541,"byte_end":4550,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":4997,"byte_end":5010,"line_start":197,"line_end":197,"column_start":19,"column_end":32},"name":"iter_position","qualname":"<ArrayBuilder<T, N>>::iter_position","value":"pub unsafe fn iter_position(&mut Self) -> (slice::IterMut<, T>, &mut usize)","parent":null,"children":[],"decl_id":null,"docs":" Creates a mutable iterator for writing to the array using `ptr::write`.","sig":null,"attributes":[{"value":"/ Creates a mutable iterator for writing to the array using `ptr::write`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":4728,"byte_end":4803,"line_start":191,"line_end":191,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":4808,"byte_end":4811,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ Increment the position value given as a mutable reference as you iterate","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":4816,"byte_end":4892,"line_start":193,"line_end":193,"column_start":5,"column_end":81}},{"value":"/ to mark how many elements have been created.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":4897,"byte_end":4945,"line_start":194,"line_end":194,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":4969,"byte_end":4978,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":5270,"byte_end":5280,"line_start":205,"line_end":205,"column_start":19,"column_end":29},"name":"into_inner","qualname":"<ArrayBuilder<T, N>>::into_inner","value":"pub unsafe fn into_inner(Self) -> GenericArray<T, N>","parent":null,"children":[],"decl_id":null,"docs":" When done writing (assuming all elements have been written to),\n get the inner array.\n","sig":null,"attributes":[{"value":"/ When done writing (assuming all elements have been written to),","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":5122,"byte_end":5189,"line_start":201,"line_end":201,"column_start":5,"column_end":72}},{"value":"/ get the inner array.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":5194,"byte_end":5218,"line_start":202,"line_end":202,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":5242,"byte_end":5251,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":492},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":5839,"byte_end":5852,"line_start":229,"line_end":229,"column_start":12,"column_end":25},"name":"ArrayConsumer","qualname":"::ArrayConsumer","value":"ArrayConsumer {  }","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":496}],"decl_id":null,"docs":" Consumes an array.","sig":null,"attributes":[{"value":"/ Consumes an array.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":5668,"byte_end":5690,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":5691,"byte_end":5694,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ Increment the position while iterating and any leftover elements","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":5695,"byte_end":5763,"line_start":226,"line_end":226,"column_start":1,"column_end":69}},{"value":"/ will be dropped if position does not go to N","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":5764,"byte_end":5812,"line_start":227,"line_end":227,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":6046,"byte_end":6049,"line_start":237,"line_end":237,"column_start":19,"column_end":22},"name":"new","qualname":"<ArrayConsumer<T, N>>::new","value":"pub unsafe fn new(GenericArray<T, N>) -> ArrayConsumer<T, N>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":6018,"byte_end":6027,"line_start":236,"line_end":236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":6467,"byte_end":6480,"line_start":250,"line_end":250,"column_start":19,"column_end":32},"name":"iter_position","qualname":"<ArrayConsumer<T, N>>::iter_position","value":"pub unsafe fn iter_position(&mut Self) -> (slice::Iter<, T>, &mut usize)","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator and mutable reference to the internal position\n to keep track of consumed elements.","sig":null,"attributes":[{"value":"/ Creates an iterator and mutable reference to the internal position","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":6217,"byte_end":6287,"line_start":244,"line_end":244,"column_start":5,"column_end":75}},{"value":"/ to keep track of consumed elements.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":6292,"byte_end":6331,"line_start":245,"line_end":245,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":6336,"byte_end":6339,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Increment the position as you iterate to mark off consumed elements","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":6344,"byte_end":6415,"line_start":247,"line_end":247,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":6439,"byte_end":6448,"line_start":249,"line_end":249,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":12800,"byte_end":12808,"line_start":489,"line_end":489,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<GenericArray<T, N>>::as_slice","value":"pub fn as_slice(&Self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice containing the entire array.\n","sig":null,"attributes":[{"value":"/ Extracts a slice containing the entire array.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":12725,"byte_end":12774,"line_start":487,"line_end":487,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":12779,"byte_end":12788,"line_start":488,"line_end":488,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":12941,"byte_end":12953,"line_start":495,"line_end":495,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<GenericArray<T, N>>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a mutable slice containing the entire array.\n","sig":null,"attributes":[{"value":"/ Extracts a mutable slice containing the entire array.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":12858,"byte_end":12915,"line_start":493,"line_end":493,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":12920,"byte_end":12929,"line_start":494,"line_end":494,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":13188,"byte_end":13198,"line_start":503,"line_end":503,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<GenericArray<T, N>>::from_slice","value":"pub fn from_slice(&[T]) -> &GenericArray<T, N>","parent":null,"children":[],"decl_id":null,"docs":" Converts slice to a generic array reference with inferred length;","sig":null,"attributes":[{"value":"/ Converts slice to a generic array reference with inferred length;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":13015,"byte_end":13084,"line_start":499,"line_end":499,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":13089,"byte_end":13092,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Length of the slice must be equal to the length of the array.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":13097,"byte_end":13162,"line_start":501,"line_end":501,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":13167,"byte_end":13176,"line_start":502,"line_end":502,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":13436,"byte_end":13450,"line_start":511,"line_end":511,"column_start":12,"column_end":26},"name":"from_mut_slice","qualname":"<GenericArray<T, N>>::from_mut_slice","value":"pub fn from_mut_slice(&mut [T]) -> &mut GenericArray<T, N>","parent":null,"children":[],"decl_id":null,"docs":" Converts mutable slice to a mutable generic array reference","sig":null,"attributes":[{"value":"/ Converts mutable slice to a mutable generic array reference","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":13269,"byte_end":13332,"line_start":507,"line_end":507,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":13337,"byte_end":13340,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ Length of the slice must be equal to the length of the array.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":13345,"byte_end":13410,"line_start":509,"line_end":509,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":13415,"byte_end":13424,"line_start":510,"line_end":510,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":14614,"byte_end":14630,"line_start":548,"line_end":548,"column_start":12,"column_end":28},"name":"clone_from_slice","qualname":"<GenericArray<T, N>>::clone_from_slice","value":"pub fn clone_from_slice(&[T]) -> GenericArray<T, N>","parent":null,"children":[],"decl_id":null,"docs":" Construct a `GenericArray` from a slice by cloning its content","sig":null,"attributes":[{"value":"/ Construct a `GenericArray` from a slice by cloning its content","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":14445,"byte_end":14511,"line_start":544,"line_end":544,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":14516,"byte_end":14519,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ Length of the slice must be equal to the length of the array","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":14524,"byte_end":14588,"line_start":546,"line_end":546,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":14593,"byte_end":14602,"line_start":547,"line_end":547,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":15059,"byte_end":15074,"line_start":561,"line_end":561,"column_start":12,"column_end":27},"name":"from_exact_iter","qualname":"<GenericArray<T, N>>::from_exact_iter","value":"pub fn from_exact_iter<I>(I) -> Option<Self> where I: IntoIterator<Item = T>,\n<I as IntoIterator>::IntoIter: ExactSizeIterator","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `GenericArray` instance from an iterator with a known exact size.","sig":null,"attributes":[{"value":"/ Creates a new `GenericArray` instance from an iterator with a known exact size.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":14859,"byte_end":14942,"line_start":558,"line_end":558,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":14947,"byte_end":14950,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the size is not equal to the number of elements in the `GenericArray`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":14955,"byte_end":15047,"line_start":560,"line_end":560,"column_start":5,"column_end":97}}]},{"kind":"Function","id":{"krate":0,"index":591},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":15952,"byte_end":15961,"line_start":594,"line_end":594,"column_start":15,"column_end":24},"name":"transmute","qualname":"::transmute","value":"pub unsafe fn transmute<A, B>(A) -> B","parent":null,"children":[],"decl_id":null,"docs":" A reimplementation of the `transmute` function, avoiding problems\n when the compiler can't prove equal sizes.\n","sig":null,"attributes":[{"value":"/ A reimplementation of the `transmute` function, avoiding problems","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":15796,"byte_end":15865,"line_start":590,"line_end":590,"column_start":1,"column_end":70}},{"value":"/ when the compiler can't prove equal sizes.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":15866,"byte_end":15912,"line_start":591,"line_end":591,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":15913,"byte_end":15922,"line_start":592,"line_end":592,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/hex.rs","byte_start":17608,"byte_end":17620,"line_start":28,"line_end":28,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/hex.rs","byte_start":19090,"byte_end":19102,"line_start":66,"line_end":66,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/impls.rs","byte_start":20764,"byte_end":20776,"line_start":9,"line_end":9,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/impls.rs","byte_start":20933,"byte_end":20945,"line_start":19,"line_end":19,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/impls.rs","byte_start":21093,"byte_end":21105,"line_start":28,"line_end":28,"column_start":27,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/impls.rs","byte_start":21206,"byte_end":21218,"line_start":35,"line_end":35,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/impls.rs","byte_start":21353,"byte_end":21365,"line_start":43,"line_end":43,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/impls.rs","byte_start":21444,"byte_end":21456,"line_start":49,"line_end":49,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/impls.rs","byte_start":21670,"byte_end":21682,"line_start":58,"line_end":58,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/impls.rs","byte_start":21869,"byte_end":21881,"line_start":67,"line_end":67,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/impls.rs","byte_start":22042,"byte_end":22054,"line_start":76,"line_end":76,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/impls.rs","byte_start":22202,"byte_end":22214,"line_start":86,"line_end":86,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/impls.rs","byte_start":22374,"byte_end":22386,"line_start":96,"line_end":96,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/impls.rs","byte_start":22530,"byte_end":22542,"line_start":106,"line_end":106,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/impls.rs","byte_start":22698,"byte_end":22710,"line_start":116,"line_end":116,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/arr.rs","byte_start":24544,"byte_end":24546,"line_start":13,"line_end":13,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","byte_start":31943,"byte_end":31959,"line_start":29,"line_end":29,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","byte_start":32419,"byte_end":32431,"line_start":46,"line_end":46,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","byte_start":32806,"byte_end":32822,"line_start":63,"line_end":63,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","byte_start":33049,"byte_end":33065,"line_start":74,"line_end":74,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","byte_start":33388,"byte_end":33404,"line_start":90,"line_end":90,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","byte_start":34032,"byte_end":34048,"line_start":115,"line_end":115,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","byte_start":35121,"byte_end":35137,"line_start":166,"line_end":166,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","byte_start":35463,"byte_end":35479,"line_start":181,"line_end":181,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":41104,"byte_end":41116,"line_start":179,"line_end":179,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":41964,"byte_end":41976,"line_start":213,"line_end":213,"column_start":50,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":43317,"byte_end":43329,"line_start":261,"line_end":261,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":44356,"byte_end":44368,"line_start":299,"line_end":299,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":1834,"byte_end":1839,"line_start":80,"line_end":80,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":2138,"byte_end":2158,"line_start":95,"line_end":95,"column_start":36,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":2421,"byte_end":2441,"line_start":105,"line_end":105,"column_start":33,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":2684,"byte_end":2703,"line_start":117,"line_end":117,"column_start":36,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":2967,"byte_end":2986,"line_start":127,"line_end":127,"column_start":33,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":3050,"byte_end":3054,"line_start":129,"line_end":129,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":3199,"byte_end":3203,"line_start":134,"line_end":134,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":3519,"byte_end":3531,"line_start":145,"line_end":145,"column_start":50,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":3590,"byte_end":3602,"line_start":146,"line_end":146,"column_start":50,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":3634,"byte_end":3646,"line_start":148,"line_end":148,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":3882,"byte_end":3894,"line_start":160,"line_end":160,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":4497,"byte_end":4509,"line_start":181,"line_end":181,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":5469,"byte_end":5481,"line_start":214,"line_end":214,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":5973,"byte_end":5986,"line_start":234,"line_end":234,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":6619,"byte_end":6632,"line_start":255,"line_end":255,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":7408,"byte_end":7420,"line_start":289,"line_end":289,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":8365,"byte_end":8377,"line_start":328,"line_end":328,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":533},{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":10991,"byte_end":11003,"line_start":417,"line_end":417,"column_start":54,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":11199,"byte_end":11211,"line_start":425,"line_end":425,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":556},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":12671,"byte_end":12683,"line_start":483,"line_end":483,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":14391,"byte_end":14403,"line_start":540,"line_end":540,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":14805,"byte_end":14817,"line_start":554,"line_end":554,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":1454,"byte_end":1457,"line_start":65,"line_end":65,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":168}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":1467,"byte_end":1477,"line_start":66,"line_end":66,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":194}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":1487,"byte_end":1491,"line_start":67,"line_end":67,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":243}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":1501,"byte_end":1509,"line_start":68,"line_end":68,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":313}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/hex.rs","byte_start":17608,"byte_end":17620,"line_start":28,"line_end":28,"column_start":44,"column_end":56},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":458},"to":{"krate":1,"index":9608}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/hex.rs","byte_start":19090,"byte_end":19102,"line_start":66,"line_end":66,"column_start":44,"column_end":56},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":458},"to":{"krate":1,"index":9610}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/impls.rs","byte_start":20764,"byte_end":20776,"line_start":9,"line_end":9,"column_start":33,"column_end":45},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":458},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/impls.rs","byte_start":20933,"byte_end":20945,"line_start":19,"line_end":19,"column_start":29,"column_end":41},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":458},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/impls.rs","byte_start":21093,"byte_end":21105,"line_start":28,"line_end":28,"column_start":27,"column_end":39},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":458},"to":{"krate":1,"index":3034}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/impls.rs","byte_start":21206,"byte_end":21218,"line_start":35,"line_end":35,"column_start":37,"column_end":49},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":458},"to":{"krate":1,"index":2675}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/impls.rs","byte_start":21353,"byte_end":21365,"line_start":43,"line_end":43,"column_start":23,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":458},"to":{"krate":1,"index":2680}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/impls.rs","byte_start":21444,"byte_end":21456,"line_start":49,"line_end":49,"column_start":39,"column_end":51},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":458},"to":{"krate":1,"index":2722}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/impls.rs","byte_start":21670,"byte_end":21682,"line_start":58,"line_end":58,"column_start":25,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":458},"to":{"krate":1,"index":2711}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/impls.rs","byte_start":21869,"byte_end":21881,"line_start":67,"line_end":67,"column_start":29,"column_end":41},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":458},"to":{"krate":1,"index":9595}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/impls.rs","byte_start":22042,"byte_end":22054,"line_start":76,"line_end":76,"column_start":28,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":458},"to":{"krate":1,"index":2623}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/impls.rs","byte_start":22202,"byte_end":22214,"line_start":86,"line_end":86,"column_start":31,"column_end":43},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":458},"to":{"krate":1,"index":2626}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/impls.rs","byte_start":22374,"byte_end":22386,"line_start":96,"line_end":96,"column_start":27,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":458},"to":{"krate":1,"index":2921}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/impls.rs","byte_start":22530,"byte_end":22542,"line_start":106,"line_end":106,"column_start":27,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":458},"to":{"krate":1,"index":2924}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/impls.rs","byte_start":22698,"byte_end":22710,"line_start":116,"line_end":116,"column_start":27,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":458},"to":{"krate":1,"index":9802}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/arr.rs","byte_start":24429,"byte_end":24440,"line_start":8,"line_end":8,"column_start":44,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":418},"to":{"krate":0,"index":178}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/arr.rs","byte_start":24544,"byte_end":24546,"line_start":13,"line_end":13,"column_start":38,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":184},"to":{"krate":0,"index":178}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":28245,"byte_end":28260,"line_start":11,"line_end":11,"column_start":47,"column_end":62},"kind":"SuperTrait","from":{"krate":0,"index":330},"to":{"krate":0,"index":202}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/functional.rs","byte_start":29333,"byte_end":29348,"line_start":42,"line_end":42,"column_start":41,"column_end":56},"kind":"SuperTrait","from":{"krate":0,"index":330},"to":{"krate":0,"index":222}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","byte_start":31943,"byte_end":31959,"line_start":29,"line_end":29,"column_start":12,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","byte_start":32419,"byte_end":32431,"line_start":46,"line_end":46,"column_start":29,"column_end":41},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":458},"to":{"krate":1,"index":7715}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","byte_start":32806,"byte_end":32822,"line_start":63,"line_end":63,"column_start":39,"column_end":55},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":267},"to":{"krate":1,"index":9595}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","byte_start":33049,"byte_end":33065,"line_start":74,"line_end":74,"column_start":21,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":267},"to":{"krate":1,"index":3266}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","byte_start":33388,"byte_end":33404,"line_start":90,"line_end":90,"column_start":29,"column_end":45},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":267},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","byte_start":34032,"byte_end":34048,"line_start":115,"line_end":115,"column_start":25,"column_end":41},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":267},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","byte_start":35121,"byte_end":35137,"line_start":166,"line_end":166,"column_start":36,"column_end":52},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":267},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/iter.rs","byte_start":35463,"byte_end":35479,"line_start":181,"line_end":181,"column_start":34,"column_end":50},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":267},"to":{"krate":1,"index":7784}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":36027,"byte_end":36032,"line_start":11,"line_end":11,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":330}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":36035,"byte_end":36047,"line_start":11,"line_end":11,"column_start":46,"column_end":58},"kind":"SuperTrait","from":{"krate":1,"index":7715},"to":{"krate":0,"index":330}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39184,"byte_end":39189,"line_start":112,"line_end":112,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":365}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":39192,"byte_end":39207,"line_start":112,"line_end":112,"column_start":39,"column_end":54},"kind":"SuperTrait","from":{"krate":0,"index":330},"to":{"krate":0,"index":365}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40204,"byte_end":40209,"line_start":147,"line_end":147,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":370}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":40212,"byte_end":40227,"line_start":147,"line_end":147,"column_start":38,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":330},"to":{"krate":0,"index":370}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":41104,"byte_end":41116,"line_start":179,"line_end":179,"column_start":51,"column_end":63},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":458},"to":{"krate":0,"index":365}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":41964,"byte_end":41976,"line_start":213,"line_end":213,"column_start":50,"column_end":62},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":458},"to":{"krate":0,"index":370}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":42918,"byte_end":42933,"line_start":248,"line_end":248,"column_start":31,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":330},"to":{"krate":0,"index":387}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":43317,"byte_end":43329,"line_start":261,"line_end":261,"column_start":38,"column_end":50},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":458},"to":{"krate":0,"index":387}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":43975,"byte_end":43990,"line_start":285,"line_end":285,"column_start":32,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":330},"to":{"krate":0,"index":400}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/sequence.rs","byte_start":44356,"byte_end":44368,"line_start":299,"line_end":299,"column_start":39,"column_end":51},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":458},"to":{"krate":0,"index":400}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":1699,"byte_end":1707,"line_start":75,"line_end":75,"column_start":34,"column_end":42},"kind":"SuperTrait","from":{"krate":4,"index":719},"to":{"krate":0,"index":418}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":1834,"byte_end":1839,"line_start":80,"line_end":80,"column_start":35,"column_end":40},"kind":{"Impl":{"id":28}},"from":{"krate":4,"index":6780},"to":{"krate":0,"index":418}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":2138,"byte_end":2158,"line_start":95,"line_end":95,"column_start":36,"column_end":56},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":424},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":2421,"byte_end":2441,"line_start":105,"line_end":105,"column_start":33,"column_end":53},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":424},"to":{"krate":1,"index":3034}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":2684,"byte_end":2703,"line_start":117,"line_end":117,"column_start":36,"column_end":55},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":437},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":2967,"byte_end":2986,"line_start":127,"line_end":127,"column_start":33,"column_end":52},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":437},"to":{"krate":1,"index":3034}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":3050,"byte_end":3054,"line_start":129,"line_end":129,"column_start":54,"column_end":58},"kind":{"Impl":{"id":33}},"from":{"krate":4,"index":6732},"to":{"krate":0,"index":418}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":3199,"byte_end":3203,"line_start":134,"line_end":134,"column_start":54,"column_end":58},"kind":{"Impl":{"id":34}},"from":{"krate":4,"index":6732},"to":{"krate":0,"index":418}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":3519,"byte_end":3531,"line_start":145,"line_end":145,"column_start":50,"column_end":62},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":458},"to":{"krate":1,"index":3024}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":3590,"byte_end":3602,"line_start":146,"line_end":146,"column_start":50,"column_end":62},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":458},"to":{"krate":1,"index":3036}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":3634,"byte_end":3646,"line_start":148,"line_end":148,"column_start":22,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":458},"to":{"krate":1,"index":3242}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":3882,"byte_end":3894,"line_start":160,"line_end":160,"column_start":25,"column_end":37},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":458},"to":{"krate":1,"index":3255}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":4497,"byte_end":4509,"line_start":181,"line_end":181,"column_start":28,"column_end":40},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":5469,"byte_end":5481,"line_start":214,"line_end":214,"column_start":37,"column_end":49},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":477},"to":{"krate":1,"index":3266}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":5973,"byte_end":5986,"line_start":234,"line_end":234,"column_start":28,"column_end":41},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":6619,"byte_end":6632,"line_start":255,"line_end":255,"column_start":37,"column_end":50},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":492},"to":{"krate":1,"index":3266}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":7408,"byte_end":7420,"line_start":289,"line_end":289,"column_start":32,"column_end":44},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":458},"to":{"krate":1,"index":7711}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":8365,"byte_end":8377,"line_start":328,"line_end":328,"column_start":42,"column_end":54},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":458},"to":{"krate":0,"index":330}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":10991,"byte_end":11003,"line_start":417,"line_end":417,"column_start":54,"column_end":66},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":458},"to":{"krate":0,"index":202}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":11199,"byte_end":11211,"line_start":425,"line_end":425,"column_start":45,"column_end":57},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":458},"to":{"krate":0,"index":222}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":12671,"byte_end":12683,"line_start":483,"line_end":483,"column_start":12,"column_end":24},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":14391,"byte_end":14403,"line_start":540,"line_end":540,"column_start":19,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.4/src/lib.rs","byte_start":14805,"byte_end":14817,"line_start":554,"line_end":554,"column_start":12,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":458},"to":{"krate":4294967295,"index":4294967295}}]}
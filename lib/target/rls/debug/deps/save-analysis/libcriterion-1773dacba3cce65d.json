{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5","program":"/home/martin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","criterion","--edition=2018","/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"cargo_bench_support\"","--cfg","feature=\"default\"","-C","metadata=1773dacba3cce65d","-C","extra-filename=-1773dacba3cce65d","--out-dir","/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps","-L","dependency=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps","--extern","atty=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libatty-0663c0e6baf93dad.rmeta","--extern","cast=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libcast-3f02259161c937e7.rmeta","--extern","clap=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libclap-a60a3639d5bca087.rmeta","--extern","criterion_plot=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libcriterion_plot-bfd761d6539084cb.rmeta","--extern","csv=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libcsv-a8adc4fb7e1d7d02.rmeta","--extern","itertools=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libitertools-512e5511b23b2ae6.rmeta","--extern","lazy_static=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/liblazy_static-ce32fc202686907d.rmeta","--extern","num_traits=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libnum_traits-0123c3a8ba9a4e3c.rmeta","--extern","oorandom=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/liboorandom-aea1f8f04a249a3d.rmeta","--extern","plotters=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libplotters-763645a07fee7148.rmeta","--extern","rayon=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/librayon-0a6914b14873ae32.rmeta","--extern","regex=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libregex-b66c3fcb09d3c02b.rmeta","--extern","serde=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libserde-c947d780458f0fbc.rmeta","--extern","serde_cbor=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libserde_cbor-38ce80f92d46c1cb.rmeta","--extern","serde_derive=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libserde_derive-a13bb07946408539.so","--extern","serde_json=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libserde_json-f41d5f73b0160316.rmeta","--extern","tinytemplate=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libtinytemplate-a91fe5922c4f8736.rmeta","--extern","walkdir=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libwalkdir-6e9572e34b233cfa.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/martin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libcriterion-1773dacba3cce65d.rmeta"},"prelude":{"crate_id":{"name":"criterion","disambiguator":[4346593183905767593,0]},"crate_root":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src","external_crates":[{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14788966508543342302,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2825088610194081445,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9481142260376939403,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16420834686343379425,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11097033969885139948,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6800150773471260640,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9424233180753397496,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4493421558680613340,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[10587786945246582611,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6037489587312533517,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[12999623613951624675,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[15285592788019233460,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[7690318462147983057,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16937637772373355212,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8216859446519220865,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[6387052066414425180,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[879344915155370202,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[12947071141408240460,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12545025351940724261,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":20,"id":{"name":"lazy_static","disambiguator":[18045484163755490912,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":21,"id":{"name":"serde_derive","disambiguator":[438368160624229773,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":22,"id":{"name":"clap","disambiguator":[18386046157504747312,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":23,"id":{"name":"bitflags","disambiguator":[10950286490669358244,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":24,"id":{"name":"textwrap","disambiguator":[17064806450729467323,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":25,"id":{"name":"unicode_width","disambiguator":[1607569022824218121,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":26,"id":{"name":"regex","disambiguator":[4589225596356183036,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":27,"id":{"name":"regex_syntax","disambiguator":[15099060134944127979,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":28,"id":{"name":"aho_corasick","disambiguator":[10197335938200351082,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":29,"id":{"name":"memchr","disambiguator":[1148382120240393898,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/csv_report.rs","num":30,"id":{"name":"csv","disambiguator":[7908308369217213226,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":31,"id":{"name":"serde","disambiguator":[6983298613914056521,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/csv_report.rs","num":32,"id":{"name":"bstr","disambiguator":[12262820947345411304,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/csv_report.rs","num":33,"id":{"name":"regex_automata","disambiguator":[13604218936308557644,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/csv_report.rs","num":34,"id":{"name":"csv_core","disambiguator":[11494791239656073217,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/csv_report.rs","num":35,"id":{"name":"itoa","disambiguator":[8139755905014119654,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/csv_report.rs","num":36,"id":{"name":"ryu","disambiguator":[9495708289465993403,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/error.rs","num":37,"id":{"name":"serde_json","disambiguator":[12025074748356400911,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/error.rs","num":38,"id":{"name":"itoa","disambiguator":[270418426861410454,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/fs.rs","num":39,"id":{"name":"walkdir","disambiguator":[1873964381601458554,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/fs.rs","num":40,"id":{"name":"same_file","disambiguator":[3073529550405916644,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/html/mod.rs","num":41,"id":{"name":"criterion_plot","disambiguator":[5063776728110748178,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/percentiles.rs","num":42,"id":{"name":"cast","disambiguator":[18256268496041663964,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/plot/gnuplot_backend/summary.rs","num":43,"id":{"name":"itertools","disambiguator":[5083600546365673793,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/html/mod.rs","num":44,"id":{"name":"either","disambiguator":[10174564351280660459,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/html/mod.rs","num":45,"id":{"name":"tinytemplate","disambiguator":[5673581798863183595,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/plot/plotters_backend/mod.rs","num":46,"id":{"name":"plotters","disambiguator":[12641763432815825783,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/plot/plotters_backend/mod.rs","num":47,"id":{"name":"plotters_backend","disambiguator":[4564357930394894921,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/float.rs","num":48,"id":{"name":"num_traits","disambiguator":[14098284124660598696,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/plot/plotters_backend/mod.rs","num":49,"id":{"name":"plotters_svg","disambiguator":[9114792443927188754,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/bivariate/mod.rs","num":50,"id":{"name":"rayon","disambiguator":[12098838121840115147,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/bivariate/mod.rs","num":51,"id":{"name":"rayon_core","disambiguator":[10388243457493669298,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/bivariate/mod.rs","num":52,"id":{"name":"crossbeam_channel","disambiguator":[14723630113849012677,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/bivariate/mod.rs","num":53,"id":{"name":"cfg_if","disambiguator":[3771446270907224645,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/bivariate/mod.rs","num":54,"id":{"name":"crossbeam_utils","disambiguator":[4654943673208440681,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/bivariate/mod.rs","num":55,"id":{"name":"crossbeam_deque","disambiguator":[12065098225646516364,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/bivariate/mod.rs","num":56,"id":{"name":"crossbeam_epoch","disambiguator":[17301721565035502399,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/bivariate/mod.rs","num":57,"id":{"name":"scopeguard","disambiguator":[3320008020467133727,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/bivariate/mod.rs","num":58,"id":{"name":"memoffset","disambiguator":[9231318132155413823,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/bivariate/mod.rs","num":59,"id":{"name":"num_cpus","disambiguator":[2498837368396224993,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/bivariate/mod.rs","num":60,"id":{"name":"libc","disambiguator":[15500845381154614134,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/rand_util.rs","num":61,"id":{"name":"oorandom","disambiguator":[13548551830700916057,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/connection.rs","num":62,"id":{"name":"serde_cbor","disambiguator":[12143075314408894001,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/connection.rs","num":63,"id":{"name":"half","disambiguator":[14148917345091484181,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","num":64,"id":{"name":"atty","disambiguator":[1486687746867409379,0]}}],"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":0,"byte_end":62219,"line_start":1,"line_end":1618,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":445},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":2709,"byte_end":2716,"line_start":104,"line_end":104,"column_start":25,"column_end":32},"alias_span":null,"name":"Bencher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":257},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":2766,"byte_end":2775,"line_start":106,"line_end":106,"column_start":28,"column_end":37},"alias_span":null,"name":"Benchmark","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":262},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":2777,"byte_end":2796,"line_start":106,"line_end":106,"column_start":39,"column_end":58},"alias_span":null,"name":"BenchmarkDefinition","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":250},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":2798,"byte_end":2820,"line_start":106,"line_end":106,"column_start":60,"column_end":82},"alias_span":null,"name":"ParameterizedBenchmark","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":354},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":2856,"byte_end":2870,"line_start":107,"line_end":107,"column_start":34,"column_end":48},"alias_span":null,"name":"BenchmarkGroup","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2895},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":2872,"byte_end":2883,"line_start":107,"line_end":107,"column_start":50,"column_end":61},"alias_span":null,"name":"BenchmarkId","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":0,"byte_end":62219,"line_start":1,"line_end":1618,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":16},{"krate":0,"index":167},{"krate":0,"index":300},{"krate":0,"index":414},{"krate":0,"index":422},{"krate":0,"index":489},{"krate":0,"index":553},{"krate":0,"index":597},{"krate":0,"index":626},{"krate":0,"index":666},{"krate":0,"index":673},{"krate":0,"index":739},{"krate":0,"index":890},{"krate":0,"index":906},{"krate":0,"index":909},{"krate":0,"index":961},{"krate":0,"index":1738},{"krate":0,"index":1750},{"krate":0,"index":1947},{"krate":0,"index":2015},{"krate":0,"index":2593},{"krate":0,"index":2596},{"krate":0,"index":2599},{"krate":0,"index":2600},{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":2605},{"krate":0,"index":2608},{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2614},{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2621},{"krate":0,"index":2624},{"krate":0,"index":2627},{"krate":0,"index":2628},{"krate":0,"index":2631},{"krate":0,"index":2634},{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2641},{"krate":0,"index":2644},{"krate":0,"index":2647},{"krate":0,"index":2650},{"krate":0,"index":2653},{"krate":0,"index":2656},{"krate":0,"index":2657},{"krate":0,"index":2659},{"krate":0,"index":2662},{"krate":0,"index":2663},{"krate":0,"index":2666},{"krate":0,"index":2667},{"krate":0,"index":2669},{"krate":0,"index":2670},{"krate":0,"index":2673},{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2679},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2683},{"krate":0,"index":2686},{"krate":0,"index":2687},{"krate":0,"index":2688},{"krate":0,"index":2690},{"krate":0,"index":2693},{"krate":0,"index":2696},{"krate":0,"index":2699},{"krate":0,"index":2702},{"krate":0,"index":2705},{"krate":0,"index":2708},{"krate":0,"index":2709},{"krate":0,"index":2712},{"krate":0,"index":2715},{"krate":0,"index":2718},{"krate":0,"index":2719},{"krate":0,"index":2722},{"krate":0,"index":4008},{"krate":0,"index":4010},{"krate":0,"index":4011},{"krate":0,"index":4016},{"krate":0,"index":4019},{"krate":0,"index":4021},{"krate":0,"index":4022},{"krate":0,"index":4027},{"krate":0,"index":4030},{"krate":0,"index":4032},{"krate":0,"index":4033},{"krate":0,"index":4038},{"krate":0,"index":4041},{"krate":0,"index":4043},{"krate":0,"index":4044},{"krate":0,"index":4049},{"krate":0,"index":4052},{"krate":0,"index":4054},{"krate":0,"index":4055},{"krate":0,"index":4060},{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2728},{"krate":0,"index":2733},{"krate":0,"index":4063},{"krate":0,"index":4078},{"krate":0,"index":4080},{"krate":0,"index":4081},{"krate":0,"index":4083},{"krate":0,"index":4084},{"krate":0,"index":4087},{"krate":0,"index":4088},{"krate":0,"index":4091},{"krate":0,"index":2738},{"krate":0,"index":4093},{"krate":0,"index":4098},{"krate":0,"index":4100},{"krate":0,"index":4102},{"krate":0,"index":4103},{"krate":0,"index":4108},{"krate":0,"index":4110},{"krate":0,"index":4112},{"krate":0,"index":2740},{"krate":0,"index":4113},{"krate":0,"index":4123},{"krate":0,"index":4125},{"krate":0,"index":2742},{"krate":0,"index":2744},{"krate":0,"index":2759},{"krate":0,"index":2761},{"krate":0,"index":2764},{"krate":0,"index":2810},{"krate":0,"index":2825},{"krate":0,"index":2827},{"krate":0,"index":2828},{"krate":0,"index":4170},{"krate":0,"index":4177},{"krate":0,"index":4179},{"krate":0,"index":4181},{"krate":0,"index":4187},{"krate":0,"index":4226},{"krate":0,"index":4227},{"krate":0,"index":4230},{"krate":0,"index":4235},{"krate":0,"index":4237},{"krate":0,"index":4239},{"krate":0,"index":4240},{"krate":0,"index":4242},{"krate":0,"index":4244},{"krate":0,"index":2830},{"krate":0,"index":2832},{"krate":0,"index":4246},{"krate":0,"index":4253},{"krate":0,"index":4255},{"krate":0,"index":4257},{"krate":0,"index":2834},{"krate":0,"index":4258},{"krate":0,"index":4263},{"krate":0,"index":4265},{"krate":0,"index":4267},{"krate":0,"index":4268},{"krate":0,"index":4274},{"krate":0,"index":2836},{"krate":0,"index":4313},{"krate":0,"index":4317},{"krate":0,"index":4319},{"krate":0,"index":4325},{"krate":0,"index":2842},{"krate":0,"index":2843},{"krate":0,"index":2844}],"decl_id":null,"docs":" A statistics-driven micro-benchmarking library written in Rust.","sig":null,"attributes":[{"value":"/ A statistics-driven micro-benchmarking library written in Rust.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":0,"byte_end":67,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":68,"byte_end":71,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate is a microbenchmarking library which aims to provide strong","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":72,"byte_end":146,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ statistical confidence in detecting and estimating the size of performance","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":147,"byte_end":225,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ improvements and regressions, while also being easy to use.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":226,"byte_end":289,"line_start":5,"line_end":5,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":290,"byte_end":293,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":294,"byte_end":301,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ [the user guide](https://bheisler.github.io/criterion.rs/book/index.html)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":302,"byte_end":379,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ for examples as well as details on the measurement and analysis process,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":380,"byte_end":456,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ and the output.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":457,"byte_end":476,"line_start":10,"line_end":10,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":477,"byte_end":480,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ## Features:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":481,"byte_end":497,"line_start":12,"line_end":12,"column_start":1,"column_end":17}},{"value":"/ * Collects detailed statistics, providing strong confidence that changes","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":498,"byte_end":574,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/   to performance are real, not measurement noise.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":575,"byte_end":628,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/ * Produces detailed charts, providing thorough understanding of your code's","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":629,"byte_end":708,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   performance behavior.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":709,"byte_end":736,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"warn(missing_docs)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":738,"byte_end":760,"line_start":18,"line_end":18,"column_start":1,"column_end":23}},{"value":"warn(bare_trait_objects)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":761,"byte_end":789,"line_start":19,"line_end":19,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":250},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":82439,"byte_end":82461,"line_start":84,"line_end":84,"column_start":12,"column_end":34},"name":"ParameterizedBenchmark","qualname":"::benchmark::ParameterizedBenchmark","value":"ParameterizedBenchmark {  }","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256}],"decl_id":null,"docs":" Structure representing a benchmark (or group of benchmarks)\n which take one parameter.\n","sig":null,"attributes":[{"value":"/ Structure representing a benchmark (or group of benchmarks)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":82242,"byte_end":82305,"line_start":80,"line_end":80,"column_start":1,"column_end":64}},{"value":"/ which take one parameter.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":82306,"byte_end":82335,"line_start":81,"line_end":81,"column_start":1,"column_end":30}},{"value":"deprecated(since = \"0.3.4\", note = \"Please use BenchmarkGroups instead.\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":82351,"byte_end":82427,"line_start":83,"line_end":83,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":257},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":82852,"byte_end":82861,"line_start":95,"line_end":95,"column_start":12,"column_end":21},"name":"Benchmark","qualname":"::benchmark::Benchmark","value":"Benchmark {  }","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261}],"decl_id":null,"docs":" Structure representing a benchmark (or group of benchmarks)\n which takes no parameters.\n","sig":null,"attributes":[{"value":"/ Structure representing a benchmark (or group of benchmarks)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":82654,"byte_end":82717,"line_start":91,"line_end":91,"column_start":1,"column_end":64}},{"value":"/ which takes no parameters.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":82718,"byte_end":82748,"line_start":92,"line_end":92,"column_start":1,"column_end":31}},{"value":"deprecated(since = \"0.3.4\", note = \"Please use BenchmarkGroups instead.\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":82764,"byte_end":82840,"line_start":94,"line_end":94,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":262},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":83147,"byte_end":83166,"line_start":104,"line_end":104,"column_start":11,"column_end":30},"name":"BenchmarkDefinition","qualname":"::benchmark::BenchmarkDefinition","value":"BenchmarkDefinition<M: Measurement = WallTime>: Sized","parent":null,"children":[{"krate":0,"index":264}],"decl_id":null,"docs":" Common trait for `Benchmark` and `ParameterizedBenchmark`. Not intended to be\n used outside of Criterion.rs.\n","sig":null,"attributes":[{"value":"/ Common trait for `Benchmark` and `ParameterizedBenchmark`. Not intended to be","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":83006,"byte_end":83087,"line_start":101,"line_end":101,"column_start":1,"column_end":82}},{"value":"/ used outside of Criterion.rs.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":83088,"byte_end":83121,"line_start":102,"line_end":102,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":83229,"byte_end":83232,"line_start":106,"line_end":106,"column_start":8,"column_end":11},"name":"run","qualname":"::benchmark::BenchmarkDefinition::run","value":"pub fn run(Self, &str, &mut Criterion<M>)","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":90021,"byte_end":90024,"line_start":281,"line_end":281,"column_start":12,"column_end":15},"name":"new","qualname":"<Benchmark<M>>::new","value":"pub fn new<S, F>(S, F) -> Benchmark<M> where S: Into<String>,\nF: FnMut(&mut Bencher<, M>) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new benchmark group and adds the given function to it.","sig":null,"attributes":[{"value":"/ Create a new benchmark group and adds the given function to it.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":89427,"byte_end":89494,"line_start":260,"line_end":260,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":89499,"byte_end":89502,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":89507,"byte_end":89520,"line_start":262,"line_end":262,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":89525,"byte_end":89528,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":89533,"byte_end":89544,"line_start":264,"line_end":264,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate criterion;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":89549,"byte_end":89591,"line_start":265,"line_end":265,"column_start":5,"column_end":47}},{"value":"/ # use criterion::*;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":89596,"byte_end":89619,"line_start":266,"line_end":266,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":89624,"byte_end":89627,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":89632,"byte_end":89665,"line_start":268,"line_end":268,"column_start":5,"column_end":38}},{"value":"/     // One-time setup goes here","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":89670,"byte_end":89705,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/     c.bench(","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":89710,"byte_end":89726,"line_start":270,"line_end":270,"column_start":5,"column_end":21}},{"value":"/         \"my_group\",","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":89731,"byte_end":89754,"line_start":271,"line_end":271,"column_start":5,"column_end":28}},{"value":"/         Benchmark::new(\"my_function\", |b| b.iter(|| {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":89759,"byte_end":89816,"line_start":272,"line_end":272,"column_start":5,"column_end":62}},{"value":"/             // Code to benchmark goes here","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":89821,"byte_end":89867,"line_start":273,"line_end":273,"column_start":5,"column_end":51}},{"value":"/         })),","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":89872,"byte_end":89888,"line_start":274,"line_end":274,"column_start":5,"column_end":21}},{"value":"/     );","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":89893,"byte_end":89903,"line_start":275,"line_end":275,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":89908,"byte_end":89913,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":89918,"byte_end":89921,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":89926,"byte_end":89963,"line_start":278,"line_end":278,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":89968,"byte_end":89997,"line_start":279,"line_end":279,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":90002,"byte_end":90009,"line_start":280,"line_end":280,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":90390,"byte_end":90403,"line_start":295,"line_end":295,"column_start":12,"column_end":25},"name":"with_function","qualname":"<Benchmark<M>>::with_function","value":"pub fn with_function<S, F>(Self, S, F) -> Benchmark<M> where S: Into<String>,\nF: FnMut(&mut Bencher<, M>) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Add a function to the benchmark group.\n","sig":null,"attributes":[{"value":"/ Add a function to the benchmark group.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":90336,"byte_end":90378,"line_start":294,"line_end":294,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":90854,"byte_end":90864,"line_start":310,"line_end":310,"column_start":12,"column_end":22},"name":"throughput","qualname":"<Benchmark<M>>::throughput","value":"pub fn throughput(Self, Throughput) -> Benchmark<M>","parent":null,"children":[],"decl_id":null,"docs":" Set the input size for this benchmark group. Used for reporting the\n throughput.\n","sig":null,"attributes":[{"value":"/ Set the input size for this benchmark group. Used for reporting the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":90751,"byte_end":90822,"line_start":308,"line_end":308,"column_start":5,"column_end":76}},{"value":"/ throughput.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":90827,"byte_end":90842,"line_start":309,"line_end":309,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":94588,"byte_end":94591,"line_start":435,"line_end":435,"column_start":12,"column_end":15},"name":"new","qualname":"<ParameterizedBenchmark<T, M>>::new","value":"pub fn new<S, F, I>(S, F, I) -> ParameterizedBenchmark<T, M> where\nS: Into<String>, F: FnMut(&mut Bencher<, M>, &T) -> () + 'static,\nI: IntoIterator<Item = T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new parameterized benchmark group and adds the given function\n to it.\n The function under test must follow the setup - bench - teardown pattern:","sig":null,"attributes":[{"value":"/ Create a new parameterized benchmark group and adds the given function","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":93700,"byte_end":93774,"line_start":406,"line_end":406,"column_start":5,"column_end":79}},{"value":"/ to it.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":93779,"byte_end":93789,"line_start":407,"line_end":407,"column_start":5,"column_end":15}},{"value":"/ The function under test must follow the setup - bench - teardown pattern:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":93794,"byte_end":93871,"line_start":408,"line_end":408,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":93876,"byte_end":93879,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":93884,"byte_end":93897,"line_start":410,"line_end":410,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":93902,"byte_end":93905,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":93910,"byte_end":93921,"line_start":412,"line_end":412,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate criterion;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":93926,"byte_end":93968,"line_start":413,"line_end":413,"column_start":5,"column_end":47}},{"value":"/ # use criterion::*;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":93973,"byte_end":93996,"line_start":414,"line_end":414,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":94001,"byte_end":94004,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":94009,"byte_end":94042,"line_start":416,"line_end":416,"column_start":5,"column_end":38}},{"value":"/     let parameters = vec![1u64, 2u64, 3u64];","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":94047,"byte_end":94095,"line_start":417,"line_end":417,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":94100,"byte_end":94103,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/     // One-time setup goes here","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":94108,"byte_end":94143,"line_start":419,"line_end":419,"column_start":5,"column_end":40}},{"value":"/     c.bench(","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":94148,"byte_end":94164,"line_start":420,"line_end":420,"column_start":5,"column_end":21}},{"value":"/         \"my_group\",","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":94169,"byte_end":94192,"line_start":421,"line_end":421,"column_start":5,"column_end":28}},{"value":"/         ParameterizedBenchmark::new(","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":94197,"byte_end":94237,"line_start":422,"line_end":422,"column_start":5,"column_end":45}},{"value":"/             \"my_function\",","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":94242,"byte_end":94272,"line_start":423,"line_end":423,"column_start":5,"column_end":35}},{"value":"/             |b, param| b.iter(|| {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":94277,"byte_end":94315,"line_start":424,"line_end":424,"column_start":5,"column_end":43}},{"value":"/                 // Code to benchmark using param goes here","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":94320,"byte_end":94382,"line_start":425,"line_end":425,"column_start":5,"column_end":67}},{"value":"/             }),","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":94387,"byte_end":94406,"line_start":426,"line_end":426,"column_start":5,"column_end":24}},{"value":"/             parameters","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":94411,"byte_end":94437,"line_start":427,"line_end":427,"column_start":5,"column_end":31}},{"value":"/         )","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":94442,"byte_end":94455,"line_start":428,"line_end":428,"column_start":5,"column_end":18}},{"value":"/     );","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":94460,"byte_end":94470,"line_start":429,"line_end":429,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":94475,"byte_end":94480,"line_start":430,"line_end":430,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":94485,"byte_end":94488,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":94493,"byte_end":94530,"line_start":432,"line_end":432,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":94535,"byte_end":94564,"line_start":433,"line_end":433,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":94569,"byte_end":94576,"line_start":434,"line_end":434,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":95097,"byte_end":95110,"line_start":451,"line_end":451,"column_start":12,"column_end":25},"name":"with_function","qualname":"<ParameterizedBenchmark<T, M>>::with_function","value":"pub fn with_function<S, F>(Self, S, F) -> ParameterizedBenchmark<T, M> where\nS: Into<String>, F: FnMut(&mut Bencher<, M>, &T) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Add a function to the benchmark group.\n","sig":null,"attributes":[{"value":"/ Add a function to the benchmark group.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":95043,"byte_end":95085,"line_start":450,"line_end":450,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":95544,"byte_end":95554,"line_start":465,"line_end":465,"column_start":12,"column_end":22},"name":"throughput","qualname":"<ParameterizedBenchmark<T, M>>::throughput","value":"pub fn throughput<F>(Self, F) -> ParameterizedBenchmark<T, M> where F: Fn(&T)\n-> Throughput + 'static","parent":null,"children":[],"decl_id":null,"docs":" Use the given function to calculate the input size for a given input.\n","sig":null,"attributes":[{"value":"/ Use the given function to calculate the input size for a given input.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":95459,"byte_end":95532,"line_start":464,"line_end":464,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":354},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":103361,"byte_end":103375,"line_start":78,"line_end":78,"column_start":12,"column_end":26},"name":"BenchmarkGroup","qualname":"::benchmark_group::BenchmarkGroup","value":"BenchmarkGroup {  }","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362}],"decl_id":null,"docs":" Structure used to group together a set of related benchmarks, along with custom configuration\n settings for groups of benchmarks. All benchmarks performed using a benchmark group will be\n grouped together in the final report.","sig":null,"attributes":[{"value":"/ Structure used to group together a set of related benchmarks, along with custom configuration","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":100638,"byte_end":100735,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ settings for groups of benchmarks. All benchmarks performed using a benchmark group will be","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":100736,"byte_end":100831,"line_start":13,"line_end":13,"column_start":1,"column_end":96}},{"value":"/ grouped together in the final report.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":100832,"byte_end":100873,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":100874,"byte_end":100877,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":100878,"byte_end":100893,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":100894,"byte_end":100897,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":100898,"byte_end":100911,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":100912,"byte_end":100952,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/ use self::criterion::*;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":100953,"byte_end":100980,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":100981,"byte_end":101009,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":101010,"byte_end":101013,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ fn bench_simple(c: &mut Criterion) {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":101014,"byte_end":101054,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/     let mut group = c.benchmark_group(\"My Group\");","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":101055,"byte_end":101109,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":101110,"byte_end":101113,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     // Now we can perform benchmarks with this group","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":101114,"byte_end":101170,"line_start":26,"line_end":26,"column_start":1,"column_end":57}},{"value":"/     group.bench_function(\"Bench 1\", |b| b.iter(|| 1 ));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":101171,"byte_end":101230,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/     group.bench_function(\"Bench 2\", |b| b.iter(|| 2 ));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":101231,"byte_end":101290,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/    ","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":101291,"byte_end":101298,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/     // It's recommended to call group.finish() explicitly at the end, but if you don't it will","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":101299,"byte_end":101397,"line_start":30,"line_end":30,"column_start":1,"column_end":99}},{"value":"/     // be called automatically when the group is dropped.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":101398,"byte_end":101459,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/     group.finish();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":101460,"byte_end":101483,"line_start":32,"line_end":32,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":101484,"byte_end":101489,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":101490,"byte_end":101493,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn bench_nested(c: &mut Criterion) {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":101494,"byte_end":101534,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/     let mut group = c.benchmark_group(\"My Second Group\");","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":101535,"byte_end":101596,"line_start":36,"line_end":36,"column_start":1,"column_end":62}},{"value":"/     // We can override the configuration on a per-group level","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":101597,"byte_end":101662,"line_start":37,"line_end":37,"column_start":1,"column_end":66}},{"value":"/     group.measurement_time(Duration::from_secs(1));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":101663,"byte_end":101718,"line_start":38,"line_end":38,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":101719,"byte_end":101722,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/     // We can also use loops to define multiple benchmarks, even over multiple dimensions.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":101723,"byte_end":101817,"line_start":40,"line_end":40,"column_start":1,"column_end":95}},{"value":"/     for x in 0..3 {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":101818,"byte_end":101841,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/         for y in 0..3 {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":101842,"byte_end":101869,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/             let point = (x, y);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":101870,"byte_end":101905,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/             let parameter_string = format!(\"{} * {}\", x, y);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":101906,"byte_end":101970,"line_start":44,"line_end":44,"column_start":1,"column_end":65}},{"value":"/             group.bench_with_input(BenchmarkId::new(\"Multiply\", parameter_string), &point,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":101971,"byte_end":102065,"line_start":45,"line_end":45,"column_start":1,"column_end":95}},{"value":"/                 |b, (p_x, p_y)| b.iter(|| p_x * p_y));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":102066,"byte_end":102124,"line_start":46,"line_end":46,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":102125,"byte_end":102138,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":102139,"byte_end":102148,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/    ","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":102149,"byte_end":102156,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/     group.finish();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":102157,"byte_end":102180,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":102181,"byte_end":102186,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":102187,"byte_end":102190,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ fn bench_throughput(c: &mut Criterion) {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":102191,"byte_end":102235,"line_start":53,"line_end":53,"column_start":1,"column_end":45}},{"value":"/     let mut group = c.benchmark_group(\"Summation\");","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":102236,"byte_end":102291,"line_start":54,"line_end":54,"column_start":1,"column_end":56}},{"value":"/     ","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":102292,"byte_end":102300,"line_start":55,"line_end":55,"column_start":1,"column_end":9}},{"value":"/     for size in [1024, 2048, 4096].iter() {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":102301,"byte_end":102348,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/         // Generate input of an appropriate size...","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":102349,"byte_end":102404,"line_start":57,"line_end":57,"column_start":1,"column_end":56}},{"value":"/         let input = vec![1u64, *size];","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":102405,"byte_end":102447,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":102448,"byte_end":102451,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/         // We can use the throughput function to tell Criterion.rs how large the input is","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":102452,"byte_end":102545,"line_start":60,"line_end":60,"column_start":1,"column_end":94}},{"value":"/         // so it can calculate the overall throughput of the function. If we wanted, we could","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":102546,"byte_end":102643,"line_start":61,"line_end":61,"column_start":1,"column_end":98}},{"value":"/         // even change the benchmark configuration for different inputs (eg. to reduce the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":102644,"byte_end":102738,"line_start":62,"line_end":62,"column_start":1,"column_end":95}},{"value":"/         // number of samples for extremely large and slow inputs) or even different functions.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":102739,"byte_end":102837,"line_start":63,"line_end":63,"column_start":1,"column_end":99}},{"value":"/         group.throughput(Throughput::Elements(*size as u64));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":102838,"byte_end":102903,"line_start":64,"line_end":64,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":102904,"byte_end":102907,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/         group.bench_with_input(BenchmarkId::new(\"sum\", *size), &input,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":102908,"byte_end":102982,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/             |b, i| b.iter(|| i.iter().sum::<u64>()));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":102983,"byte_end":103040,"line_start":67,"line_end":67,"column_start":1,"column_end":58}},{"value":"/         group.bench_with_input(BenchmarkId::new(\"fold\", *size), &input,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":103041,"byte_end":103116,"line_start":68,"line_end":68,"column_start":1,"column_end":76}},{"value":"/             |b, i| b.iter(|| i.iter().fold(0u64, |a, b| a + b)));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":103117,"byte_end":103186,"line_start":69,"line_end":69,"column_start":1,"column_end":70}},{"value":"/     }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":103187,"byte_end":103196,"line_start":70,"line_end":70,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":103197,"byte_end":103200,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     group.finish();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":103201,"byte_end":103224,"line_start":72,"line_end":72,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":103225,"byte_end":103230,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":103231,"byte_end":103234,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ criterion_group!(benches, bench_simple, bench_nested, bench_throughput);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":103235,"byte_end":103311,"line_start":75,"line_end":75,"column_start":1,"column_end":77}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":103312,"byte_end":103341,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":103342,"byte_end":103349,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":103958,"byte_end":103969,"line_start":97,"line_end":97,"column_start":12,"column_end":23},"name":"sample_size","qualname":"<BenchmarkGroup>::sample_size","value":"pub fn sample_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the size of the sample for this benchmark","sig":null,"attributes":[{"value":"/ Changes the size of the sample for this benchmark","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":103656,"byte_end":103709,"line_start":87,"line_end":87,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":103714,"byte_end":103717,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ A bigger sample should yield more accurate results if paired with a sufficiently large","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":103722,"byte_end":103812,"line_start":89,"line_end":89,"column_start":5,"column_end":95}},{"value":"/ measurement time.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":103817,"byte_end":103838,"line_start":90,"line_end":90,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":103843,"byte_end":103846,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Sample size must be at least 10.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":103851,"byte_end":103887,"line_start":92,"line_end":92,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":103892,"byte_end":103895,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":103900,"byte_end":103912,"line_start":94,"line_end":94,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":103917,"byte_end":103920,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Panics if n < 10.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":103925,"byte_end":103946,"line_start":96,"line_end":96,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":104245,"byte_end":104257,"line_start":109,"line_end":109,"column_start":12,"column_end":24},"name":"warm_up_time","qualname":"<BenchmarkGroup>::warm_up_time","value":"pub fn warm_up_time(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the warm up time for this benchmark","sig":null,"attributes":[{"value":"/ Changes the warm up time for this benchmark","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":104108,"byte_end":104155,"line_start":104,"line_end":104,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":104160,"byte_end":104163,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":104168,"byte_end":104180,"line_start":106,"line_end":106,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":104185,"byte_end":104188,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Panics if the input duration is zero","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":104193,"byte_end":104233,"line_start":108,"line_end":108,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":105047,"byte_end":105063,"line_start":127,"line_end":127,"column_start":12,"column_end":28},"name":"measurement_time","qualname":"<BenchmarkGroup>::measurement_time","value":"pub fn measurement_time(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the target measurement time for this benchmark group.","sig":null,"attributes":[{"value":"/ Changes the target measurement time for this benchmark group.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":104415,"byte_end":104480,"line_start":116,"line_end":116,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":104485,"byte_end":104488,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ Criterion will attempt to spent approximately this amount of time measuring each","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":104493,"byte_end":104577,"line_start":118,"line_end":118,"column_start":5,"column_end":89}},{"value":"/ benchmark on a best-effort basis. If it is not possible to perform the measurement in","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":104582,"byte_end":104671,"line_start":119,"line_end":119,"column_start":5,"column_end":94}},{"value":"/ the requested time (eg. because each iteration of the benchmark is long) then Criterion","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":104676,"byte_end":104767,"line_start":120,"line_end":120,"column_start":5,"column_end":96}},{"value":"/ will spend as long as is needed to collect the desired number of samples. With a longer","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":104772,"byte_end":104863,"line_start":121,"line_end":121,"column_start":5,"column_end":96}},{"value":"/ time, the measurement will become more resilient to interference from other programs.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":104868,"byte_end":104957,"line_start":122,"line_end":122,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":104962,"byte_end":104965,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":104970,"byte_end":104982,"line_start":124,"line_end":124,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":104987,"byte_end":104990,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Panics if the input duration is zero","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":104995,"byte_end":105035,"line_start":126,"line_end":126,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":105701,"byte_end":105711,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"nresamples","qualname":"<BenchmarkGroup>::nresamples","value":"pub fn nresamples(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the number of resamples for this benchmark group","sig":null,"attributes":[{"value":"/ Changes the number of resamples for this benchmark group","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":105225,"byte_end":105285,"line_start":134,"line_end":134,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":105290,"byte_end":105293,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Number of resamples to use for the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":105298,"byte_end":105336,"line_start":136,"line_end":136,"column_start":5,"column_end":43}},{"value":"/ [bootstrap](http://en.wikipedia.org/wiki/Bootstrapping_(statistics)#Case_resampling)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":105341,"byte_end":105429,"line_start":137,"line_end":137,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":105434,"byte_end":105437,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ A larger number of resamples reduces the random sampling errors which are inherent to the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":105442,"byte_end":105535,"line_start":139,"line_end":139,"column_start":5,"column_end":98}},{"value":"/ bootstrap method, but also increases the analysis time.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":105540,"byte_end":105599,"line_start":140,"line_end":140,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":105604,"byte_end":105607,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":105612,"byte_end":105624,"line_start":142,"line_end":142,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":105629,"byte_end":105632,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Panics if the number of resamples is set to zero","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":105637,"byte_end":105689,"line_start":144,"line_end":144,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":106701,"byte_end":106716,"line_start":167,"line_end":167,"column_start":12,"column_end":27},"name":"noise_threshold","qualname":"<BenchmarkGroup>::noise_threshold","value":"pub fn noise_threshold(&mut Self, f64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the noise threshold for benchmarks in this group. The noise threshold\n is used to filter out small changes in performance from one run to the next, even if they\n are statistically significant. Sometimes benchmarking the same code twice will result in\n small but statistically significant differences solely because of noise. This provides a way\n to filter out some of these false positives at the cost of making it harder to detect small\n changes to the true performance of the benchmark.","sig":null,"attributes":[{"value":"/ Changes the noise threshold for benchmarks in this group. The noise threshold","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":105971,"byte_end":106052,"line_start":155,"line_end":155,"column_start":5,"column_end":86}},{"value":"/ is used to filter out small changes in performance from one run to the next, even if they","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":106057,"byte_end":106150,"line_start":156,"line_end":156,"column_start":5,"column_end":98}},{"value":"/ are statistically significant. Sometimes benchmarking the same code twice will result in","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":106155,"byte_end":106247,"line_start":157,"line_end":157,"column_start":5,"column_end":97}},{"value":"/ small but statistically significant differences solely because of noise. This provides a way","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":106252,"byte_end":106348,"line_start":158,"line_end":158,"column_start":5,"column_end":101}},{"value":"/ to filter out some of these false positives at the cost of making it harder to detect small","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":106353,"byte_end":106448,"line_start":159,"line_end":159,"column_start":5,"column_end":100}},{"value":"/ changes to the true performance of the benchmark.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":106453,"byte_end":106506,"line_start":160,"line_end":160,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":106511,"byte_end":106514,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ The default is 0.01, meaning that changes smaller than 1% will be ignored.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":106519,"byte_end":106597,"line_start":162,"line_end":162,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":106602,"byte_end":106605,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":106610,"byte_end":106622,"line_start":164,"line_end":164,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":106627,"byte_end":106630,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Panics if the threshold is set to a negative value","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":106635,"byte_end":106689,"line_start":166,"line_end":166,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":107372,"byte_end":107388,"line_start":182,"line_end":182,"column_start":12,"column_end":28},"name":"confidence_level","qualname":"<BenchmarkGroup>::confidence_level","value":"pub fn confidence_level(&mut Self, f64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the confidence level for benchmarks in this group. The confidence\n level is the desired probability that the true runtime lies within the estimated\n [confidence interval](https://en.wikipedia.org/wiki/Confidence_interval). The default is\n 0.95, meaning that the confidence interval should capture the true value 95% of the time.","sig":null,"attributes":[{"value":"/ Changes the confidence level for benchmarks in this group. The confidence","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":106882,"byte_end":106959,"line_start":174,"line_end":174,"column_start":5,"column_end":82}},{"value":"/ level is the desired probability that the true runtime lies within the estimated","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":106964,"byte_end":107048,"line_start":175,"line_end":175,"column_start":5,"column_end":89}},{"value":"/ [confidence interval](https://en.wikipedia.org/wiki/Confidence_interval). The default is","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":107053,"byte_end":107145,"line_start":176,"line_end":176,"column_start":5,"column_end":97}},{"value":"/ 0.95, meaning that the confidence interval should capture the true value 95% of the time.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":107150,"byte_end":107243,"line_start":177,"line_end":177,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":107248,"byte_end":107251,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":107256,"byte_end":107268,"line_start":179,"line_end":179,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":107273,"byte_end":107276,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Panics if the confidence level is set to a value outside the `(0, 1)` range","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":107281,"byte_end":107360,"line_start":181,"line_end":181,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":108957,"byte_end":108975,"line_start":212,"line_end":212,"column_start":12,"column_end":30},"name":"significance_level","qualname":"<BenchmarkGroup>::significance_level","value":"pub fn significance_level(&mut Self, f64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the [significance level](https://en.wikipedia.org/wiki/Statistical_significance)\n for benchmarks in this group. This is used to perform a\n [hypothesis test](https://en.wikipedia.org/wiki/Statistical_hypothesis_testing) to see if\n the measurements from this run are different from the measured performance of the last run.\n The significance level is the desired probability that two measurements of identical code\n will be considered 'different' due to noise in the measurements. The default value is 0.05,\n meaning that approximately 5% of identical benchmarks will register as different due to\n noise.","sig":null,"attributes":[{"value":"/ Changes the [significance level](https://en.wikipedia.org/wiki/Statistical_significance)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":107673,"byte_end":107765,"line_start":192,"line_end":192,"column_start":5,"column_end":97}},{"value":"/ for benchmarks in this group. This is used to perform a","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":107770,"byte_end":107829,"line_start":193,"line_end":193,"column_start":5,"column_end":64}},{"value":"/ [hypothesis test](https://en.wikipedia.org/wiki/Statistical_hypothesis_testing) to see if","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":107834,"byte_end":107927,"line_start":194,"line_end":194,"column_start":5,"column_end":98}},{"value":"/ the measurements from this run are different from the measured performance of the last run.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":107932,"byte_end":108027,"line_start":195,"line_end":195,"column_start":5,"column_end":100}},{"value":"/ The significance level is the desired probability that two measurements of identical code","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":108032,"byte_end":108125,"line_start":196,"line_end":196,"column_start":5,"column_end":98}},{"value":"/ will be considered 'different' due to noise in the measurements. The default value is 0.05,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":108130,"byte_end":108225,"line_start":197,"line_end":197,"column_start":5,"column_end":100}},{"value":"/ meaning that approximately 5% of identical benchmarks will register as different due to","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":108230,"byte_end":108321,"line_start":198,"line_end":198,"column_start":5,"column_end":96}},{"value":"/ noise.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":108326,"byte_end":108336,"line_start":199,"line_end":199,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":108341,"byte_end":108344,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ This presents a trade-off. By setting the significance level closer to 0.0, you can increase","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":108349,"byte_end":108445,"line_start":201,"line_end":201,"column_start":5,"column_end":101}},{"value":"/ the statistical robustness against noise, but it also weakens Criterion.rs' ability to","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":108450,"byte_end":108540,"line_start":202,"line_end":202,"column_start":5,"column_end":95}},{"value":"/ detect small but real changes in the performance. By setting the significance level","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":108545,"byte_end":108632,"line_start":203,"line_end":203,"column_start":5,"column_end":92}},{"value":"/ closer to 1.0, Criterion.rs will be more able to detect small true changes, but will also","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":108637,"byte_end":108730,"line_start":204,"line_end":204,"column_start":5,"column_end":98}},{"value":"/ report more spurious differences.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":108735,"byte_end":108772,"line_start":205,"line_end":205,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":108777,"byte_end":108780,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ See also the noise threshold setting.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":108785,"byte_end":108826,"line_start":207,"line_end":207,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":108831,"byte_end":108834,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":108839,"byte_end":108851,"line_start":209,"line_end":209,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":108856,"byte_end":108859,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ Panics if the significance level is set to a value outside the `(0, 1)` range","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":108864,"byte_end":108945,"line_start":211,"line_end":211,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":109206,"byte_end":109217,"line_start":220,"line_end":220,"column_start":12,"column_end":23},"name":"plot_config","qualname":"<BenchmarkGroup>::plot_config","value":"pub fn plot_config(&mut Self, PlotConfiguration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the plot configuration for this benchmark group.\n","sig":null,"attributes":[{"value":"/ Changes the plot configuration for this benchmark group.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":109134,"byte_end":109194,"line_start":219,"line_end":219,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":109456,"byte_end":109466,"line_start":227,"line_end":227,"column_start":12,"column_end":22},"name":"throughput","qualname":"<BenchmarkGroup>::throughput","value":"pub fn throughput(&mut Self, Throughput) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the input size for this benchmark group. Used for reporting the\n throughput.\n","sig":null,"attributes":[{"value":"/ Set the input size for this benchmark group. Used for reporting the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":109353,"byte_end":109424,"line_start":225,"line_end":225,"column_start":5,"column_end":76}},{"value":"/ throughput.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":109429,"byte_end":109444,"line_start":226,"line_end":226,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":109648,"byte_end":109661,"line_start":233,"line_end":233,"column_start":12,"column_end":25},"name":"sampling_mode","qualname":"<BenchmarkGroup>::sampling_mode","value":"pub fn sampling_mode(&mut Self, SamplingMode) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the sampling mode for this benchmark group.\n","sig":null,"attributes":[{"value":"/ Set the sampling mode for this benchmark group.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":109585,"byte_end":109636,"line_start":232,"line_end":232,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":110225,"byte_end":110239,"line_start":250,"line_end":250,"column_start":12,"column_end":26},"name":"bench_function","qualname":"<BenchmarkGroup>::bench_function","value":"pub fn bench_function<ID: IntoBenchmarkId, F>(&mut Self, ID, F) -> &mut Self\nwhere F: FnMut(&mut Bencher<, M>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Benchmark the given parameterless function inside this benchmark group.\n","sig":null,"attributes":[{"value":"/ Benchmark the given parameterless function inside this benchmark group.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":110138,"byte_end":110213,"line_start":249,"line_end":249,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":110538,"byte_end":110554,"line_start":259,"line_end":259,"column_start":12,"column_end":28},"name":"bench_with_input","qualname":"<BenchmarkGroup>::bench_with_input","value":"pub fn bench_with_input<ID: IntoBenchmarkId, F, I>(&mut Self, ID, &I, F)\n-> &mut Self where F: FnMut(&mut Bencher<, M>, &I) -> (), I: ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Benchmark the given parameterized function inside this benchmark group.\n","sig":null,"attributes":[{"value":"/ Benchmark the given parameterized function inside this benchmark group.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":110451,"byte_end":110526,"line_start":258,"line_end":258,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":114070,"byte_end":114076,"line_start":364,"line_end":364,"column_start":12,"column_end":18},"name":"finish","qualname":"<BenchmarkGroup>::finish","value":"pub fn finish(Self)","parent":null,"children":[],"decl_id":null,"docs":" Consume the benchmark group and generate the summary reports for the group.","sig":null,"attributes":[{"value":"/ Consume the benchmark group and generate the summary reports for the group.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":113849,"byte_end":113928,"line_start":360,"line_end":360,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":113933,"byte_end":113936,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ It is recommended to call this explicitly, but if you forget it will be called when the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":113941,"byte_end":114032,"line_start":362,"line_end":362,"column_start":5,"column_end":96}},{"value":"/ group is dropped.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":114037,"byte_end":114058,"line_start":363,"line_end":363,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":2895},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":115446,"byte_end":115457,"line_start":403,"line_end":403,"column_start":12,"column_end":23},"name":"BenchmarkId","qualname":"::benchmark_group::BenchmarkId","value":"BenchmarkId {  }","parent":null,"children":[{"krate":0,"index":2896},{"krate":0,"index":2897}],"decl_id":null,"docs":" Simple structure representing an ID for a benchmark. The ID must be unique within a benchmark\n group.\n","sig":null,"attributes":[{"value":"/ Simple structure representing an ID for a benchmark. The ID must be unique within a benchmark","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":115288,"byte_end":115385,"line_start":400,"line_end":400,"column_start":1,"column_end":98}},{"value":"/ group.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":115386,"byte_end":115396,"line_start":401,"line_end":401,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":117007,"byte_end":117010,"line_start":437,"line_end":437,"column_start":12,"column_end":15},"name":"new","qualname":"<BenchmarkId>::new","value":"pub fn new<S: Into<String>, P: ::std::fmt::Display>(S, P) -> BenchmarkId","parent":null,"children":[],"decl_id":null,"docs":" Construct a new benchmark ID from a string function name and a parameter value.","sig":null,"attributes":[{"value":"/ Construct a new benchmark ID from a string function name and a parameter value.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":115573,"byte_end":115656,"line_start":408,"line_end":408,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":115661,"byte_end":115664,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Note that the parameter value need not be the same as the parameter passed to your","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":115669,"byte_end":115755,"line_start":410,"line_end":410,"column_start":5,"column_end":91}},{"value":"/ actual benchmark. For instance, you might have a benchmark that takes a 1MB string as","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":115760,"byte_end":115849,"line_start":411,"line_end":411,"column_start":5,"column_end":94}},{"value":"/ input. It would be impractical to embed the whole string in the benchmark ID, so instead","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":115854,"byte_end":115946,"line_start":412,"line_end":412,"column_start":5,"column_end":97}},{"value":"/ your parameter value might be a descriptive string like \"1MB Alphanumeric\".","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":115951,"byte_end":116030,"line_start":413,"line_end":413,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":116035,"byte_end":116038,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":116043,"byte_end":116057,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":116062,"byte_end":116069,"line_start":416,"line_end":416,"column_start":5,"column_end":12}},{"value":"/ # use criterion::{BenchmarkId, Criterion};","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":116074,"byte_end":116120,"line_start":417,"line_end":417,"column_start":5,"column_end":51}},{"value":"/ // A basic benchmark ID is typically constructed from a constant string and a simple","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":116125,"byte_end":116213,"line_start":418,"line_end":418,"column_start":5,"column_end":93}},{"value":"/ // parameter","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":116218,"byte_end":116234,"line_start":419,"line_end":419,"column_start":5,"column_end":21}},{"value":"/ let basic_id = BenchmarkId::new(\"my_id\", 5);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":116239,"byte_end":116287,"line_start":420,"line_end":420,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":116292,"byte_end":116295,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ // The function name can be a string","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":116300,"byte_end":116340,"line_start":422,"line_end":422,"column_start":5,"column_end":45}},{"value":"/ let function_name = \"test_string\".to_string();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":116345,"byte_end":116395,"line_start":423,"line_end":423,"column_start":5,"column_end":55}},{"value":"/ let string_id = BenchmarkId::new(function_name, 12);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":116400,"byte_end":116456,"line_start":424,"line_end":424,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":116461,"byte_end":116464,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ // Benchmark IDs are passed to benchmark groups:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":116469,"byte_end":116521,"line_start":426,"line_end":426,"column_start":5,"column_end":57}},{"value":"/ let mut criterion = Criterion::default();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":116526,"byte_end":116571,"line_start":427,"line_end":427,"column_start":5,"column_end":50}},{"value":"/ let mut group = criterion.benchmark_group(\"My Group\");","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":116576,"byte_end":116634,"line_start":428,"line_end":428,"column_start":5,"column_end":63}},{"value":"/ // Generate a very large input","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":116639,"byte_end":116673,"line_start":429,"line_end":429,"column_start":5,"column_end":39}},{"value":"/ let input : String = ::std::iter::repeat(\"X\").take(1024 * 1024).collect();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":116678,"byte_end":116756,"line_start":430,"line_end":430,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":116761,"byte_end":116764,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ // Note that we don't have to use the input as the parameter in the ID","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":116769,"byte_end":116843,"line_start":432,"line_end":432,"column_start":5,"column_end":79}},{"value":"/ group.bench_with_input(BenchmarkId::new(\"Test long string\", \"1MB X's\"), &input, |b, i| {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":116848,"byte_end":116940,"line_start":433,"line_end":433,"column_start":5,"column_end":97}},{"value":"/     b.iter(|| i.len())","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":116945,"byte_end":116971,"line_start":434,"line_end":434,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":116976,"byte_end":116983,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":116988,"byte_end":116995,"line_start":436,"line_end":436,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":117439,"byte_end":117453,"line_start":449,"line_end":449,"column_start":12,"column_end":26},"name":"from_parameter","qualname":"<BenchmarkId>::from_parameter","value":"pub fn from_parameter<P: ::std::fmt::Display>(P) -> BenchmarkId","parent":null,"children":[],"decl_id":null,"docs":" Construct a new benchmark ID from just a parameter value. Use this when benchmarking a\n single function with a variety of different inputs.\n","sig":null,"attributes":[{"value":"/ Construct a new benchmark ID from just a parameter value. Use this when benchmarking a","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":117277,"byte_end":117367,"line_start":447,"line_end":447,"column_start":5,"column_end":95}},{"value":"/ single function with a variety of different inputs.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":117372,"byte_end":117427,"line_start":448,"line_end":448,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":403},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":118039,"byte_end":118045,"line_start":472,"line_end":472,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::benchmark_group::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":407},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":118233,"byte_end":118248,"line_start":478,"line_end":478,"column_start":11,"column_end":26},"name":"IntoBenchmarkId","qualname":"::benchmark_group::IntoBenchmarkId","value":"IntoBenchmarkId: private::Sealed","parent":null,"children":[{"krate":0,"index":408}],"decl_id":null,"docs":" Sealed trait which allows users to automatically convert strings to benchmark IDs.\n","sig":null,"attributes":[{"value":"/ Sealed trait which allows users to automatically convert strings to benchmark IDs.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":118136,"byte_end":118222,"line_start":477,"line_end":477,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":118275,"byte_end":118292,"line_start":479,"line_end":479,"column_start":8,"column_end":25},"name":"into_benchmark_id","qualname":"::benchmark_group::IntoBenchmarkId::into_benchmark_id","value":"pub fn into_benchmark_id(Self) -> BenchmarkId","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":414},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/async_executor.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"async_executor","qualname":"::async_executor","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/async_executor.rs","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":418}],"decl_id":null,"docs":" This module defines a trait that can be used to plug in different Futures executors into\n Criterion.rs' async benchmarking support.","sig":null,"attributes":[{"value":"/ This module defines a trait that can be used to plug in different Futures executors into","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/async_executor.rs","byte_start":118783,"byte_end":118875,"line_start":1,"line_end":1,"column_start":1,"column_end":93}},{"value":"/ Criterion.rs' async benchmarking support.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/async_executor.rs","byte_start":118876,"byte_end":118921,"line_start":2,"line_end":2,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/async_executor.rs","byte_start":118922,"byte_end":118925,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Implementations are provided for:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/async_executor.rs","byte_start":118926,"byte_end":118963,"line_start":4,"line_end":4,"column_start":1,"column_end":38}},{"value":"/ * Tokio (implemented directly for tokio::Runtime)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/async_executor.rs","byte_start":118964,"byte_end":119017,"line_start":5,"line_end":5,"column_start":1,"column_end":54}},{"value":"/ * Async-std","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/async_executor.rs","byte_start":119018,"byte_end":119033,"line_start":6,"line_end":6,"column_start":1,"column_end":16}},{"value":"/ * Smol","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/async_executor.rs","byte_start":119034,"byte_end":119044,"line_start":7,"line_end":7,"column_start":1,"column_end":11}},{"value":"/ * The Futures crate","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/async_executor.rs","byte_start":119045,"byte_end":119068,"line_start":8,"line_end":8,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/async_executor.rs","byte_start":119069,"byte_end":119072,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Please note that async benchmarks will have a small amount of measurement overhead relative","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/async_executor.rs","byte_start":119073,"byte_end":119168,"line_start":10,"line_end":10,"column_start":1,"column_end":96}},{"value":"/ to synchronous benchmarks. It is recommended to use synchronous benchmarks where possible, to","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/async_executor.rs","byte_start":119169,"byte_end":119266,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ improve measurement accuracy.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/async_executor.rs","byte_start":119267,"byte_end":119300,"line_start":12,"line_end":12,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":418},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/async_executor.rs","byte_start":119610,"byte_end":119623,"line_start":20,"line_end":20,"column_start":11,"column_end":24},"name":"AsyncExecutor","qualname":"::async_executor::AsyncExecutor","value":"AsyncExecutor","parent":null,"children":[{"krate":0,"index":419}],"decl_id":null,"docs":" Plugin trait used to allow benchmarking on multiple different async runtimes.","sig":null,"attributes":[{"value":"/ Plugin trait used to allow benchmarking on multiple different async runtimes.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/async_executor.rs","byte_start":119328,"byte_end":119409,"line_start":16,"line_end":16,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/async_executor.rs","byte_start":119410,"byte_end":119413,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Smol, Tokio and Async-std are supported out of the box, as is the current-thread runner from the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/async_executor.rs","byte_start":119414,"byte_end":119514,"line_start":18,"line_end":18,"column_start":1,"column_end":101}},{"value":"/ Futures crate; it is recommended to use whichever runtime you use in production.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/async_executor.rs","byte_start":119515,"byte_end":119599,"line_start":19,"line_end":19,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/async_executor.rs","byte_start":119735,"byte_end":119743,"line_start":22,"line_end":22,"column_start":8,"column_end":16},"name":"block_on","qualname":"::async_executor::AsyncExecutor::block_on","value":"pub fn block_on<T, impl Future<Output = T>: Future<Output =\nT>>(&Self, impl Future<Output = T>) -> T","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" Spawn the given future onto this runtime and block until it's complete, returning the result.\n","sig":null,"attributes":[{"value":"/ Spawn the given future onto this runtime and block until it's complete, returning the result.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/async_executor.rs","byte_start":119630,"byte_end":119727,"line_start":21,"line_end":21,"column_start":5,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":445},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":122880,"byte_end":122887,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Bencher","qualname":"::bencher::Bencher","value":"Bencher {  }","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452}],"decl_id":null,"docs":" Timer struct used to iterate a benchmarked function and measure the runtime.","sig":null,"attributes":[{"value":"/ Timer struct used to iterate a benchmarked function and measure the runtime.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":121754,"byte_end":121834,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":121835,"byte_end":121838,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This struct provides different timing loops as methods. Each timing loop provides a different","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":121839,"byte_end":121936,"line_start":21,"line_end":21,"column_start":1,"column_end":98}},{"value":"/ way to time a routine and each has advantages and disadvantages.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":121937,"byte_end":122005,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":122006,"byte_end":122009,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ * If you want to do the iteration and measurement yourself (eg. passing the iteration count","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":122010,"byte_end":122105,"line_start":24,"line_end":24,"column_start":1,"column_end":96}},{"value":"/   to a separate process), use `iter_custom`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":122106,"byte_end":122154,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/ * If your routine requires no per-iteration setup and returns a value with an expensive `drop`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":122155,"byte_end":122253,"line_start":26,"line_end":26,"column_start":1,"column_end":99}},{"value":"/   method, use `iter_with_large_drop`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":122254,"byte_end":122295,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/ * If your routine requires some per-iteration setup that shouldn't be timed, use `iter_batched`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":122296,"byte_end":122395,"line_start":28,"line_end":28,"column_start":1,"column_end":100}},{"value":"/   or `iter_batched_ref`. See [`BatchSize`](enum.BatchSize.html) for a discussion of batch sizes.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":122396,"byte_end":122496,"line_start":29,"line_end":29,"column_start":1,"column_end":101}},{"value":"/   If the setup value implements `Drop` and you don't want to include the `drop` time in the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":122497,"byte_end":122592,"line_start":30,"line_end":30,"column_start":1,"column_end":96}},{"value":"/   measurement, use `iter_batched_ref`, otherwise use `iter_batched`. These methods are also","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":122593,"byte_end":122688,"line_start":31,"line_end":31,"column_start":1,"column_end":96}},{"value":"/   suitable for benchmarking routines which return a value with an expensive `drop` method,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":122689,"byte_end":122783,"line_start":32,"line_end":32,"column_start":1,"column_end":95}},{"value":"/   but are more complex than `iter_with_large_drop`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":122784,"byte_end":122839,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/ * Otherwise, use `iter`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":122840,"byte_end":122868,"line_start":34,"line_end":34,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":124482,"byte_end":124486,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"iter","qualname":"<Bencher>::iter","value":"pub fn iter<O, R>(&mut Self, R) where R: FnMut() -> O","parent":null,"children":[],"decl_id":null,"docs":" Times a `routine` by executing it many times and timing the total elapsed time.","sig":null,"attributes":[{"value":"/ Times a `routine` by executing it many times and timing the total elapsed time.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":123389,"byte_end":123472,"line_start":43,"line_end":43,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":123477,"byte_end":123480,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Prefer this timing loop when `routine` returns a value that doesn't have a destructor.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":123485,"byte_end":123575,"line_start":45,"line_end":45,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":123580,"byte_end":123583,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # Timing model","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":123588,"byte_end":123606,"line_start":47,"line_end":47,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":123611,"byte_end":123614,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Note that the `Bencher` also times the time required to destroy the output of `routine()`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":123619,"byte_end":123713,"line_start":49,"line_end":49,"column_start":5,"column_end":99}},{"value":"/ Therefore prefer this timing loop when the runtime of `mem::drop(O)` is negligible compared","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":123718,"byte_end":123813,"line_start":50,"line_end":50,"column_start":5,"column_end":100}},{"value":"/ to the runtime of the `routine`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":123818,"byte_end":123854,"line_start":51,"line_end":51,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":123859,"byte_end":123862,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":123867,"byte_end":123878,"line_start":53,"line_end":53,"column_start":5,"column_end":16}},{"value":"/ elapsed = Instant::now + iters * (routine + mem::drop(O) + Range::next)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":123883,"byte_end":123958,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":123963,"byte_end":123970,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":123975,"byte_end":123978,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":123983,"byte_end":123996,"line_start":57,"line_end":57,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":124001,"byte_end":124004,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":124009,"byte_end":124020,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":124025,"byte_end":124065,"line_start":60,"line_end":60,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":124070,"byte_end":124073,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ use criterion::*;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":124078,"byte_end":124099,"line_start":62,"line_end":62,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":124104,"byte_end":124107,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ // The function to benchmark","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":124112,"byte_end":124144,"line_start":64,"line_end":64,"column_start":5,"column_end":37}},{"value":"/ fn foo() {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":124149,"byte_end":124163,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/     // ...","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":124168,"byte_end":124182,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":124187,"byte_end":124192,"line_start":67,"line_end":67,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":124197,"byte_end":124200,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":124205,"byte_end":124238,"line_start":69,"line_end":69,"column_start":5,"column_end":38}},{"value":"/     c.bench_function(\"iter\", move |b| {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":124243,"byte_end":124286,"line_start":70,"line_end":70,"column_start":5,"column_end":48}},{"value":"/         b.iter(|| foo())","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":124291,"byte_end":124319,"line_start":71,"line_end":71,"column_start":5,"column_end":33}},{"value":"/     });","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":124324,"byte_end":124335,"line_start":72,"line_end":72,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":124340,"byte_end":124345,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":124350,"byte_end":124353,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":124358,"byte_end":124395,"line_start":75,"line_end":75,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":124400,"byte_end":124429,"line_start":76,"line_end":76,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":124434,"byte_end":124441,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":124446,"byte_end":124449,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"inline(never)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":124454,"byte_end":124470,"line_start":79,"line_end":79,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":126077,"byte_end":126088,"line_start":131,"line_end":131,"column_start":12,"column_end":23},"name":"iter_custom","qualname":"<Bencher>::iter_custom","value":"pub fn iter_custom<R>(&mut Self, R) where R: FnMut(u64) -> M::Value","parent":null,"children":[],"decl_id":null,"docs":" Times a `routine` by executing it many times and relying on `routine` to measure its own execution time.","sig":null,"attributes":[{"value":"/ Times a `routine` by executing it many times and relying on `routine` to measure its own execution time.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":124866,"byte_end":124974,"line_start":94,"line_end":94,"column_start":5,"column_end":113}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":124979,"byte_end":124982,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Prefer this timing loop in cases where `routine` has to do its own measurements to","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":124987,"byte_end":125073,"line_start":96,"line_end":96,"column_start":5,"column_end":91}},{"value":"/ get accurate timing information (for example in multi-threaded scenarios where you spawn","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125078,"byte_end":125170,"line_start":97,"line_end":97,"column_start":5,"column_end":97}},{"value":"/ and coordinate with multiple threads).","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125175,"byte_end":125217,"line_start":98,"line_end":98,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125222,"byte_end":125225,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Timing model","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125230,"byte_end":125248,"line_start":100,"line_end":100,"column_start":5,"column_end":23}},{"value":"/ Custom, the timing model is whatever is returned as the Duration from `routine`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125253,"byte_end":125337,"line_start":101,"line_end":101,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125342,"byte_end":125345,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125350,"byte_end":125363,"line_start":103,"line_end":103,"column_start":5,"column_end":18}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125368,"byte_end":125379,"line_start":104,"line_end":104,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125384,"byte_end":125424,"line_start":105,"line_end":105,"column_start":5,"column_end":45}},{"value":"/ use criterion::*;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125429,"byte_end":125450,"line_start":106,"line_end":106,"column_start":5,"column_end":26}},{"value":"/ use criterion::black_box;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125455,"byte_end":125484,"line_start":107,"line_end":107,"column_start":5,"column_end":34}},{"value":"/ use std::time::Instant;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125489,"byte_end":125516,"line_start":108,"line_end":108,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125521,"byte_end":125524,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ fn foo() {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125529,"byte_end":125543,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/     // ...","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125548,"byte_end":125562,"line_start":111,"line_end":111,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125567,"byte_end":125572,"line_start":112,"line_end":112,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125577,"byte_end":125580,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125585,"byte_end":125618,"line_start":114,"line_end":114,"column_start":5,"column_end":38}},{"value":"/     c.bench_function(\"iter\", move |b| {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125623,"byte_end":125666,"line_start":115,"line_end":115,"column_start":5,"column_end":48}},{"value":"/         b.iter_custom(|iters| {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125671,"byte_end":125706,"line_start":116,"line_end":116,"column_start":5,"column_end":40}},{"value":"/             let start = Instant::now();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125711,"byte_end":125754,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/             for _i in 0..iters {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125759,"byte_end":125795,"line_start":118,"line_end":118,"column_start":5,"column_end":41}},{"value":"/                 black_box(foo());","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125800,"byte_end":125837,"line_start":119,"line_end":119,"column_start":5,"column_end":42}},{"value":"/             }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125842,"byte_end":125859,"line_start":120,"line_end":120,"column_start":5,"column_end":22}},{"value":"/             start.elapsed()","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125864,"byte_end":125895,"line_start":121,"line_end":121,"column_start":5,"column_end":36}},{"value":"/         })","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125900,"byte_end":125914,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/     });","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125919,"byte_end":125930,"line_start":123,"line_end":123,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125935,"byte_end":125940,"line_start":124,"line_end":124,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125945,"byte_end":125948,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125953,"byte_end":125990,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":125995,"byte_end":126024,"line_start":127,"line_end":127,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":126029,"byte_end":126036,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":126041,"byte_end":126044,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"inline(never)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":126049,"byte_end":126065,"line_start":130,"line_end":130,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":126370,"byte_end":126385,"line_start":142,"line_end":142,"column_start":12,"column_end":27},"name":"iter_with_setup","qualname":"<Bencher>::iter_with_setup","value":"pub fn iter_with_setup<I, O, S, R>(&mut Self, S, R) where S: FnMut() -> I,\nR: FnMut(I) -> O","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127662,"byte_end":127682,"line_start":185,"line_end":185,"column_start":12,"column_end":32},"name":"iter_with_large_drop","qualname":"<Bencher>::iter_with_large_drop","value":"pub fn iter_with_large_drop<O, R>(&mut Self, R) where R: FnMut() -> O","parent":null,"children":[],"decl_id":null,"docs":" Times a `routine` by collecting its output on each iteration. This avoids timing the\n destructor of the value returned by `routine`.","sig":null,"attributes":[{"value":"/ Times a `routine` by collecting its output on each iteration. This avoids timing the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":126577,"byte_end":126665,"line_start":150,"line_end":150,"column_start":5,"column_end":93}},{"value":"/ destructor of the value returned by `routine`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":126670,"byte_end":126720,"line_start":151,"line_end":151,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":126725,"byte_end":126728,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ WARNING: This requires `O(iters * mem::size_of::<O>())` of memory, and `iters` is not under the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":126733,"byte_end":126832,"line_start":153,"line_end":153,"column_start":5,"column_end":104}},{"value":"/ control of the caller. If this causes out-of-memory errors, use `iter_batched` instead.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":126837,"byte_end":126928,"line_start":154,"line_end":154,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":126933,"byte_end":126936,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Timing model","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":126941,"byte_end":126959,"line_start":156,"line_end":156,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":126964,"byte_end":126967,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ``` text","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":126972,"byte_end":126984,"line_start":158,"line_end":158,"column_start":5,"column_end":17}},{"value":"/ elapsed = Instant::now + iters * (routine) + Iterator::collect::<Vec<_>>","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":126989,"byte_end":127065,"line_start":159,"line_end":159,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127070,"byte_end":127077,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127082,"byte_end":127085,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127090,"byte_end":127103,"line_start":162,"line_end":162,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127108,"byte_end":127111,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127116,"byte_end":127127,"line_start":164,"line_end":164,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127132,"byte_end":127172,"line_start":165,"line_end":165,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127177,"byte_end":127180,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ use criterion::*;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127185,"byte_end":127206,"line_start":167,"line_end":167,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127211,"byte_end":127214,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ fn create_vector() -> Vec<u64> {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127219,"byte_end":127255,"line_start":169,"line_end":169,"column_start":5,"column_end":41}},{"value":"/     # vec![]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127260,"byte_end":127276,"line_start":170,"line_end":170,"column_start":5,"column_end":21}},{"value":"/     // ...","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127281,"byte_end":127295,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127300,"byte_end":127305,"line_start":172,"line_end":172,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127310,"byte_end":127313,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127318,"byte_end":127351,"line_start":174,"line_end":174,"column_start":5,"column_end":38}},{"value":"/     c.bench_function(\"with_drop\", move |b| {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127356,"byte_end":127404,"line_start":175,"line_end":175,"column_start":5,"column_end":53}},{"value":"/         // This will avoid timing the Vec::drop.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127409,"byte_end":127461,"line_start":176,"line_end":176,"column_start":5,"column_end":57}},{"value":"/         b.iter_with_large_drop(|| create_vector())","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127466,"byte_end":127520,"line_start":177,"line_end":177,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127525,"byte_end":127536,"line_start":178,"line_end":178,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127541,"byte_end":127546,"line_start":179,"line_end":179,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127551,"byte_end":127554,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127559,"byte_end":127596,"line_start":181,"line_end":181,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127601,"byte_end":127630,"line_start":182,"line_end":182,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127635,"byte_end":127642,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127647,"byte_end":127650,"line_start":184,"line_end":184,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":127866,"byte_end":127887,"line_start":193,"line_end":193,"column_start":12,"column_end":33},"name":"iter_with_large_setup","qualname":"<Bencher>::iter_with_large_setup","value":"pub fn iter_with_large_setup<I, O, S, R>(&mut Self, S, R) where S: FnMut() ->\nI, R: FnMut(I) -> O","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":129487,"byte_end":129499,"line_start":245,"line_end":245,"column_start":12,"column_end":24},"name":"iter_batched","qualname":"<Bencher>::iter_batched","value":"pub fn iter_batched<I, O, S, R>(&mut Self, S, R, BatchSize) where S: FnMut()\n-> I, R: FnMut(I) -> O","parent":null,"children":[],"decl_id":null,"docs":" Times a `routine` that requires some input by generating a batch of input, then timing the\n iteration of the benchmark over the input. See [`BatchSize`](enum.BatchSize.html) for\n details on choosing the batch size. Use this when the routine must consume its input.","sig":null,"attributes":[{"value":"/ Times a `routine` that requires some input by generating a batch of input, then timing the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128080,"byte_end":128174,"line_start":201,"line_end":201,"column_start":5,"column_end":99}},{"value":"/ iteration of the benchmark over the input. See [`BatchSize`](enum.BatchSize.html) for","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128179,"byte_end":128268,"line_start":202,"line_end":202,"column_start":5,"column_end":94}},{"value":"/ details on choosing the batch size. Use this when the routine must consume its input.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128273,"byte_end":128362,"line_start":203,"line_end":203,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128367,"byte_end":128370,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ For example, use this loop to benchmark sorting algorithms, because they require unsorted","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128375,"byte_end":128468,"line_start":205,"line_end":205,"column_start":5,"column_end":98}},{"value":"/ data on each iteration.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128473,"byte_end":128500,"line_start":206,"line_end":206,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128505,"byte_end":128508,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Timing model","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128513,"byte_end":128531,"line_start":208,"line_end":208,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128536,"byte_end":128539,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128544,"byte_end":128555,"line_start":210,"line_end":210,"column_start":5,"column_end":16}},{"value":"/ elapsed = (Instant::now * num_batches) + (iters * (routine + O::drop)) + Vec::extend","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128560,"byte_end":128648,"line_start":211,"line_end":211,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128653,"byte_end":128660,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128665,"byte_end":128668,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128673,"byte_end":128686,"line_start":214,"line_end":214,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128691,"byte_end":128694,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128699,"byte_end":128710,"line_start":216,"line_end":216,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128715,"byte_end":128755,"line_start":217,"line_end":217,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128760,"byte_end":128763,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ use criterion::*;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128768,"byte_end":128789,"line_start":219,"line_end":219,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128794,"byte_end":128797,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ fn create_scrambled_data() -> Vec<u64> {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128802,"byte_end":128846,"line_start":221,"line_end":221,"column_start":5,"column_end":49}},{"value":"/     # vec![]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128851,"byte_end":128867,"line_start":222,"line_end":222,"column_start":5,"column_end":21}},{"value":"/     // ...","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128872,"byte_end":128886,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128891,"byte_end":128896,"line_start":224,"line_end":224,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128901,"byte_end":128904,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ // The sorting algorithm to test","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128909,"byte_end":128945,"line_start":226,"line_end":226,"column_start":5,"column_end":41}},{"value":"/ fn sort(data: &mut [u64]) {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128950,"byte_end":128981,"line_start":227,"line_end":227,"column_start":5,"column_end":36}},{"value":"/     // ...","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":128986,"byte_end":129000,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":129005,"byte_end":129010,"line_start":229,"line_end":229,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":129015,"byte_end":129018,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":129023,"byte_end":129056,"line_start":231,"line_end":231,"column_start":5,"column_end":38}},{"value":"/     let data = create_scrambled_data();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":129061,"byte_end":129104,"line_start":232,"line_end":232,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":129109,"byte_end":129112,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/     c.bench_function(\"with_setup\", move |b| {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":129117,"byte_end":129166,"line_start":234,"line_end":234,"column_start":5,"column_end":54}},{"value":"/         // This will avoid timing the to_vec call.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":129171,"byte_end":129225,"line_start":235,"line_end":235,"column_start":5,"column_end":59}},{"value":"/         b.iter_batched(|| data.clone(), |mut data| sort(&mut data), BatchSize::SmallInput)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":129230,"byte_end":129324,"line_start":236,"line_end":236,"column_start":5,"column_end":99}},{"value":"/     });","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":129329,"byte_end":129340,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":129345,"byte_end":129350,"line_start":238,"line_end":238,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":129355,"byte_end":129358,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":129363,"byte_end":129400,"line_start":240,"line_end":240,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":129405,"byte_end":129434,"line_start":241,"line_end":241,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":129439,"byte_end":129446,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":129451,"byte_end":129454,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"inline(never)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":129459,"byte_end":129475,"line_start":244,"line_end":244,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":132499,"byte_end":132515,"line_start":335,"line_end":335,"column_start":12,"column_end":28},"name":"iter_batched_ref","qualname":"<Bencher>::iter_batched_ref","value":"pub fn iter_batched_ref<I, O, S, R>(&mut Self, S, R, BatchSize) where\nS: FnMut() -> I, R: FnMut(&mut I) -> O","parent":null,"children":[],"decl_id":null,"docs":" Times a `routine` that requires some input by generating a batch of input, then timing the\n iteration of the benchmark over the input. See [`BatchSize`](enum.BatchSize.html) for\n details on choosing the batch size. Use this when the routine should accept the input by\n mutable reference.","sig":null,"attributes":[{"value":"/ Times a `routine` that requires some input by generating a batch of input, then timing the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131074,"byte_end":131168,"line_start":290,"line_end":290,"column_start":5,"column_end":99}},{"value":"/ iteration of the benchmark over the input. See [`BatchSize`](enum.BatchSize.html) for","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131173,"byte_end":131262,"line_start":291,"line_end":291,"column_start":5,"column_end":94}},{"value":"/ details on choosing the batch size. Use this when the routine should accept the input by","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131267,"byte_end":131359,"line_start":292,"line_end":292,"column_start":5,"column_end":97}},{"value":"/ mutable reference.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131364,"byte_end":131386,"line_start":293,"line_end":293,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131391,"byte_end":131394,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ For example, use this loop to benchmark sorting algorithms, because they require unsorted","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131399,"byte_end":131492,"line_start":295,"line_end":295,"column_start":5,"column_end":98}},{"value":"/ data on each iteration.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131497,"byte_end":131524,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131529,"byte_end":131532,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Timing model","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131537,"byte_end":131555,"line_start":298,"line_end":298,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131560,"byte_end":131563,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131568,"byte_end":131579,"line_start":300,"line_end":300,"column_start":5,"column_end":16}},{"value":"/ elapsed = (Instant::now * num_batches) + (iters * routine) + Vec::extend","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131584,"byte_end":131660,"line_start":301,"line_end":301,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131665,"byte_end":131672,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131677,"byte_end":131680,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131685,"byte_end":131698,"line_start":304,"line_end":304,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131703,"byte_end":131706,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131711,"byte_end":131722,"line_start":306,"line_end":306,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131727,"byte_end":131767,"line_start":307,"line_end":307,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131772,"byte_end":131775,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ use criterion::*;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131780,"byte_end":131801,"line_start":309,"line_end":309,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131806,"byte_end":131809,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ fn create_scrambled_data() -> Vec<u64> {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131814,"byte_end":131858,"line_start":311,"line_end":311,"column_start":5,"column_end":49}},{"value":"/     # vec![]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131863,"byte_end":131879,"line_start":312,"line_end":312,"column_start":5,"column_end":21}},{"value":"/     // ...","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131884,"byte_end":131898,"line_start":313,"line_end":313,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131903,"byte_end":131908,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131913,"byte_end":131916,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ // The sorting algorithm to test","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131921,"byte_end":131957,"line_start":316,"line_end":316,"column_start":5,"column_end":41}},{"value":"/ fn sort(data: &mut [u64]) {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131962,"byte_end":131993,"line_start":317,"line_end":317,"column_start":5,"column_end":36}},{"value":"/     // ...","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":131998,"byte_end":132012,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":132017,"byte_end":132022,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":132027,"byte_end":132030,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":132035,"byte_end":132068,"line_start":321,"line_end":321,"column_start":5,"column_end":38}},{"value":"/     let data = create_scrambled_data();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":132073,"byte_end":132116,"line_start":322,"line_end":322,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":132121,"byte_end":132124,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/     c.bench_function(\"with_setup\", move |b| {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":132129,"byte_end":132178,"line_start":324,"line_end":324,"column_start":5,"column_end":54}},{"value":"/         // This will avoid timing the to_vec call.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":132183,"byte_end":132237,"line_start":325,"line_end":325,"column_start":5,"column_end":59}},{"value":"/         b.iter_batched(|| data.clone(), |mut data| sort(&mut data), BatchSize::SmallInput)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":132242,"byte_end":132336,"line_start":326,"line_end":326,"column_start":5,"column_end":99}},{"value":"/     });","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":132341,"byte_end":132352,"line_start":327,"line_end":327,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":132357,"byte_end":132362,"line_start":328,"line_end":328,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":132367,"byte_end":132370,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":132375,"byte_end":132412,"line_start":330,"line_end":330,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":132417,"byte_end":132446,"line_start":331,"line_end":331,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":132451,"byte_end":132458,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":132463,"byte_end":132466,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"inline(never)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":132471,"byte_end":132487,"line_start":334,"line_end":334,"column_start":5,"column_end":21}}]},{"kind":"Mod","id":{"krate":0,"index":909},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"measurement","qualname":"::measurement","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","parent":null,"children":[{"krate":0,"index":910},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":923},{"krate":0,"index":926},{"krate":0,"index":932},{"krate":0,"index":941},{"krate":0,"index":943},{"krate":0,"index":946},{"krate":0,"index":950},{"krate":0,"index":952}],"decl_id":null,"docs":" This module defines a set of traits that can be used to plug different measurements (eg.\n Unix's Processor Time, CPU or GPU performance counters, etc.) into Criterion.rs. It also\n includes the [WallTime](struct.WallTime.html) struct which defines the default wall-clock time\n measurement.\n","sig":null,"attributes":[{"value":"/ This module defines a set of traits that can be used to plug different measurements (eg.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":208361,"byte_end":208453,"line_start":1,"line_end":1,"column_start":1,"column_end":93}},{"value":"/ Unix's Processor Time, CPU or GPU performance counters, etc.) into Criterion.rs. It also","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":208454,"byte_end":208546,"line_start":2,"line_end":2,"column_start":1,"column_end":93}},{"value":"/ includes the [WallTime](struct.WallTime.html) struct which defines the default wall-clock time","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":208547,"byte_end":208645,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"/ measurement.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":208646,"byte_end":208662,"line_start":4,"line_end":4,"column_start":1,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":926},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":209587,"byte_end":209601,"line_start":21,"line_end":21,"column_start":11,"column_end":25},"name":"ValueFormatter","qualname":"::measurement::ValueFormatter","value":"ValueFormatter","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931}],"decl_id":null,"docs":" Trait providing functions to format measured values to string so that they can be displayed on\n the command line or in the reports. The functions of this trait take measured values in f64\n form; implementors can assume that the values are of the same scale as those produced by the\n associated [MeasuredValue](trait.MeasuredValue.html) (eg. if your measurement produces values in\n nanoseconds, the values passed to the formatter will be in nanoseconds).","sig":null,"attributes":[{"value":"/ Trait providing functions to format measured values to string so that they can be displayed on","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":208774,"byte_end":208872,"line_start":11,"line_end":11,"column_start":1,"column_end":99}},{"value":"/ the command line or in the reports. The functions of this trait take measured values in f64","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":208873,"byte_end":208968,"line_start":12,"line_end":12,"column_start":1,"column_end":96}},{"value":"/ form; implementors can assume that the values are of the same scale as those produced by the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":208969,"byte_end":209065,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ associated [MeasuredValue](trait.MeasuredValue.html) (eg. if your measurement produces values in","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":209066,"byte_end":209166,"line_start":14,"line_end":14,"column_start":1,"column_end":101}},{"value":"/ nanoseconds, the values passed to the formatter will be in nanoseconds).","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":209167,"byte_end":209243,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":209244,"byte_end":209247,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Implementors are encouraged to format the values in a way that is intuitive for humans and","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":209248,"byte_end":209342,"line_start":17,"line_end":17,"column_start":1,"column_end":95}},{"value":"/ uses the SI prefix system. For example, the format used by [WallTime](struct.WallTime.html)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":209343,"byte_end":209438,"line_start":18,"line_end":18,"column_start":1,"column_end":96}},{"value":"/ can display the value in units ranging from picoseconds to seconds depending on the magnitude","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":209439,"byte_end":209536,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ of the elapsed time in nanoseconds.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":209537,"byte_end":209576,"line_start":20,"line_end":20,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":209687,"byte_end":209699,"line_start":23,"line_end":23,"column_start":8,"column_end":20},"name":"format_value","qualname":"::measurement::ValueFormatter::format_value","value":"pub fn format_value(&Self, f64) -> String","parent":{"krate":0,"index":926},"children":[],"decl_id":null,"docs":" Format the value (with appropriate unit) and return it as a string.\n","sig":null,"attributes":[{"value":"/ Format the value (with appropriate unit) and return it as a string.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":209608,"byte_end":209679,"line_start":22,"line_end":22,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":210079,"byte_end":210096,"line_start":31,"line_end":31,"column_start":8,"column_end":25},"name":"format_throughput","qualname":"::measurement::ValueFormatter::format_throughput","value":"pub fn format_throughput(&Self, &Throughput, f64) -> String","parent":{"krate":0,"index":926},"children":[],"decl_id":null,"docs":" Format the value as a throughput measurement. The value represents the measurement value;\n the implementor will have to calculate bytes per second, iterations per cycle, etc.\n","sig":null,"attributes":[{"value":"/ Format the value as a throughput measurement. The value represents the measurement value;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":209886,"byte_end":209979,"line_start":29,"line_end":29,"column_start":5,"column_end":98}},{"value":"/ the implementor will have to calculate bytes per second, iterations per cycle, etc.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":209984,"byte_end":210071,"line_start":30,"line_end":30,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":210799,"byte_end":210811,"line_start":43,"line_end":43,"column_start":8,"column_end":20},"name":"scale_values","qualname":"::measurement::ValueFormatter::scale_values","value":"pub fn scale_values(&Self, f64, &mut [f64]) -> &'static str","parent":{"krate":0,"index":926},"children":[],"decl_id":null,"docs":" Scale the given values to some appropriate unit and return the unit string.","sig":null,"attributes":[{"value":"/ Scale the given values to some appropriate unit and return the unit string.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":210325,"byte_end":210404,"line_start":37,"line_end":37,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":210409,"byte_end":210412,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ The given typical value should be used to choose the unit. This function may be called","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":210417,"byte_end":210507,"line_start":39,"line_end":39,"column_start":5,"column_end":95}},{"value":"/ multiple times with different datasets; the typical value will remain the same to ensure","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":210512,"byte_end":210604,"line_start":40,"line_end":40,"column_start":5,"column_end":97}},{"value":"/ that the units remain consistent within a graph. The typical value will not be NaN.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":210609,"byte_end":210696,"line_start":41,"line_end":41,"column_start":5,"column_end":92}},{"value":"/ Values will not contain NaN as input, and the transformed values must not contain NaN.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":210701,"byte_end":210791,"line_start":42,"line_end":42,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":211447,"byte_end":211464,"line_start":52,"line_end":52,"column_start":8,"column_end":25},"name":"scale_throughputs","qualname":"::measurement::ValueFormatter::scale_throughputs","value":"pub fn scale_throughputs(&Self, f64, &Throughput, &mut [f64]) -> &'static str","parent":{"krate":0,"index":926},"children":[],"decl_id":null,"docs":" Convert the given measured values into throughput numbers based on the given throughput\n value, scale them to some appropriate unit, and return the unit string.","sig":null,"attributes":[{"value":"/ Convert the given measured values into throughput numbers based on the given throughput","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":210881,"byte_end":210972,"line_start":45,"line_end":45,"column_start":5,"column_end":96}},{"value":"/ value, scale them to some appropriate unit, and return the unit string.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":210977,"byte_end":211052,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":211057,"byte_end":211060,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The given typical value should be used to choose the unit. This function may be called","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":211065,"byte_end":211155,"line_start":48,"line_end":48,"column_start":5,"column_end":95}},{"value":"/ multiple times with different datasets; the typical value will remain the same to ensure","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":211160,"byte_end":211252,"line_start":49,"line_end":49,"column_start":5,"column_end":97}},{"value":"/ that the units remain consistent within a graph. The typical value will not be NaN.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":211257,"byte_end":211344,"line_start":50,"line_end":50,"column_start":5,"column_end":92}},{"value":"/ Values will not contain NaN as input, and the transformed values must not contain NaN.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":211349,"byte_end":211439,"line_start":51,"line_end":51,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":211918,"byte_end":211936,"line_start":64,"line_end":64,"column_start":8,"column_end":26},"name":"scale_for_machines","qualname":"::measurement::ValueFormatter::scale_for_machines","value":"pub fn scale_for_machines(&Self, &mut [f64]) -> &'static str","parent":{"krate":0,"index":926},"children":[],"decl_id":null,"docs":" Scale the values and return a unit string designed for machines.","sig":null,"attributes":[{"value":"/ Scale the values and return a unit string designed for machines.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":211598,"byte_end":211666,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":211671,"byte_end":211674,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ For example, this is used for the CSV file output. Implementations should modify the given","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":211679,"byte_end":211773,"line_start":61,"line_end":61,"column_start":5,"column_end":99}},{"value":"/ values slice to apply the desired scaling (if any) and return a string representing the unit","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":211778,"byte_end":211874,"line_start":62,"line_end":62,"column_start":5,"column_end":101}},{"value":"/ the modified values are in.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":211879,"byte_end":211910,"line_start":63,"line_end":63,"column_start":5,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":932},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":212533,"byte_end":212544,"line_start":76,"line_end":76,"column_start":11,"column_end":22},"name":"Measurement","qualname":"::measurement::Measurement","value":"Measurement","parent":null,"children":[{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940}],"decl_id":null,"docs":" Trait for all types which define something Criterion.rs can measure. The only measurement\n currently provided is [WallTime](struct.WallTime.html), but third party crates or benchmarks\n may define more.","sig":null,"attributes":[{"value":"/ Trait for all types which define something Criterion.rs can measure. The only measurement","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":211984,"byte_end":212077,"line_start":67,"line_end":67,"column_start":1,"column_end":94}},{"value":"/ currently provided is [WallTime](struct.WallTime.html), but third party crates or benchmarks","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":212078,"byte_end":212174,"line_start":68,"line_end":68,"column_start":1,"column_end":97}},{"value":"/ may define more.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":212175,"byte_end":212195,"line_start":69,"line_end":69,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":212196,"byte_end":212199,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ This trait defines two core methods, `start` and `end`. `start` is called at the beginning of","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":212200,"byte_end":212297,"line_start":71,"line_end":71,"column_start":1,"column_end":98}},{"value":"/ a measurement to produce some intermediate value (for example, the wall-clock time at the start","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":212298,"byte_end":212397,"line_start":72,"line_end":72,"column_start":1,"column_end":100}},{"value":"/ of that set of iterations) and `end` is called at the end of the measurement with the value","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":212398,"byte_end":212493,"line_start":73,"line_end":73,"column_start":1,"column_end":96}},{"value":"/ returned by `start`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":212494,"byte_end":212518,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":212519,"byte_end":212522,"line_start":75,"line_end":75,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":933},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":212783,"byte_end":212795,"line_start":80,"line_end":80,"column_start":10,"column_end":22},"name":"Intermediate","qualname":"::measurement::Measurement::Intermediate","value":"type Intermediate;","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" This type represents an intermediate value for the measurements. It will be produced by the\n start function and passed to the end function. An example might be the wall-clock time as\n of the `start` call.\n","sig":null,"attributes":[{"value":"/ This type represents an intermediate value for the measurements. It will be produced by the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":212551,"byte_end":212646,"line_start":77,"line_end":77,"column_start":5,"column_end":100}},{"value":"/ start function and passed to the end function. An example might be the wall-clock time as","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":212651,"byte_end":212744,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/ of the `start` call.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":212749,"byte_end":212773,"line_start":79,"line_end":79,"column_start":5,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":934},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":212941,"byte_end":212946,"line_start":84,"line_end":84,"column_start":10,"column_end":15},"name":"Value","qualname":"::measurement::Measurement::Value","value":"type Value;","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" This type is the measured value. An example might be the elapsed wall-clock time between the\n `start` and `end` calls.\n","sig":null,"attributes":[{"value":"/ This type is the measured value. An example might be the elapsed wall-clock time between the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":212802,"byte_end":212898,"line_start":82,"line_end":82,"column_start":5,"column_end":101}},{"value":"/ `start` and `end` calls.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":212903,"byte_end":212931,"line_start":83,"line_end":83,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":213024,"byte_end":213029,"line_start":87,"line_end":87,"column_start":8,"column_end":13},"name":"start","qualname":"::measurement::Measurement::start","value":"pub fn start(&Self) -> Self::Intermediate","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" Criterion.rs will call this before iterating the benchmark.\n","sig":null,"attributes":[{"value":"/ Criterion.rs will call this before iterating the benchmark.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":212953,"byte_end":213016,"line_start":86,"line_end":86,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":213161,"byte_end":213164,"line_start":90,"line_end":90,"column_start":8,"column_end":11},"name":"end","qualname":"::measurement::Measurement::end","value":"pub fn end(&Self, Self::Intermediate) -> Self::Value","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" Criterion.rs will call this after iterating the benchmark to get the measured value.\n","sig":null,"attributes":[{"value":"/ Criterion.rs will call this after iterating the benchmark to get the measured value.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":213065,"byte_end":213153,"line_start":89,"line_end":89,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":213421,"byte_end":213424,"line_start":94,"line_end":94,"column_start":8,"column_end":11},"name":"add","qualname":"::measurement::Measurement::add","value":"pub fn add(&Self, &Self::Value, &Self::Value) -> Self::Value","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" Combine two values. Criterion.rs sometimes needs to perform measurements in multiple batches\n of iterations, so the value from one batch must be added to the sum of the previous batches.\n","sig":null,"attributes":[{"value":"/ Combine two values. Criterion.rs sometimes needs to perform measurements in multiple batches","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":213216,"byte_end":213312,"line_start":92,"line_end":92,"column_start":5,"column_end":101}},{"value":"/ of iterations, so the value from one batch must be added to the sum of the previous batches.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":213317,"byte_end":213413,"line_start":93,"line_end":93,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":213578,"byte_end":213582,"line_start":97,"line_end":97,"column_start":8,"column_end":12},"name":"zero","qualname":"::measurement::Measurement::zero","value":"pub fn zero(&Self) -> Self::Value","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" Return a \"zero\" value for the Value type which can be added to another value.\n","sig":null,"attributes":[{"value":"/ Return a \"zero\" value for the Value type which can be added to another value.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":213489,"byte_end":213570,"line_start":96,"line_end":96,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":213705,"byte_end":213711,"line_start":100,"line_end":100,"column_start":8,"column_end":14},"name":"to_f64","qualname":"::measurement::Measurement::to_f64","value":"pub fn to_f64(&Self, &Self::Value) -> f64","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" Converts the measured value to f64 so that it can be used in statistical analysis.\n","sig":null,"attributes":[{"value":"/ Converts the measured value to f64 so that it can be used in statistical analysis.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":213611,"byte_end":213697,"line_start":99,"line_end":99,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":213841,"byte_end":213850,"line_start":103,"line_end":103,"column_start":8,"column_end":17},"name":"formatter","qualname":"::measurement::Measurement::formatter","value":"pub fn formatter(&Self) -> &dyn ValueFormatter","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" Return a trait-object reference to the value formatter for this measurement.\n","sig":null,"attributes":[{"value":"/ Return a trait-object reference to the value formatter for this measurement.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":213753,"byte_end":213833,"line_start":102,"line_end":102,"column_start":5,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":950},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":216558,"byte_end":216566,"line_start":189,"line_end":189,"column_start":12,"column_end":20},"name":"WallTime","qualname":"::measurement::WallTime","value":"","parent":null,"children":[],"decl_id":null,"docs":" `WallTime` is the default measurement in Criterion.rs. It measures the elapsed time from the\n beginning of a series of iterations to the end.\n","sig":null,"attributes":[{"value":"/ `WallTime` is the default measurement in Criterion.rs. It measures the elapsed time from the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":216398,"byte_end":216494,"line_start":187,"line_end":187,"column_start":1,"column_end":97}},{"value":"/ beginning of a series of iterations to the end.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":216495,"byte_end":216546,"line_start":188,"line_end":188,"column_start":1,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":1738},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/profiler.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"profiler","qualname":"::profiler","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/profiler.rs","parent":null,"children":[{"krate":0,"index":1739},{"krate":0,"index":1742},{"krate":0,"index":1745},{"krate":0,"index":1747}],"decl_id":null,"docs":" This module provides an extension trait which allows in-process profilers\n to be hooked into the `--profile-time` argument at compile-time. Users of\n out-of-process profilers such as perf don't need to do anything special.\n","sig":null,"attributes":[{"value":"/ This module provides an extension trait which allows in-process profilers","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/profiler.rs","byte_start":322139,"byte_end":322216,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ to be hooked into the `--profile-time` argument at compile-time. Users of","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/profiler.rs","byte_start":322217,"byte_end":322294,"line_start":2,"line_end":2,"column_start":1,"column_end":78}},{"value":"/ out-of-process profilers such as perf don't need to do anything special.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/profiler.rs","byte_start":322295,"byte_end":322371,"line_start":3,"line_end":3,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":1742},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/profiler.rs","byte_start":322548,"byte_end":322556,"line_start":9,"line_end":9,"column_start":11,"column_end":19},"name":"Profiler","qualname":"::profiler::Profiler","value":"Profiler","parent":null,"children":[{"krate":0,"index":1743},{"krate":0,"index":1744}],"decl_id":null,"docs":" Extension trait for external crates to implement which provides start/stop\n hooks when profiling (but not when benchmarking) functions.\n","sig":null,"attributes":[{"value":"/ Extension trait for external crates to implement which provides start/stop","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/profiler.rs","byte_start":322395,"byte_end":322473,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ hooks when profiling (but not when benchmarking) functions.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/profiler.rs","byte_start":322474,"byte_end":322537,"line_start":8,"line_end":8,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1743},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/profiler.rs","byte_start":322779,"byte_end":322794,"line_start":13,"line_end":13,"column_start":8,"column_end":23},"name":"start_profiling","qualname":"::profiler::Profiler::start_profiling","value":"pub fn start_profiling(&mut Self, &str, &Path)","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" This function is called when Criterion.rs starts profiling a particular\n benchmark. It provides the stringified benchmark ID and\n a path to a directory where the profiler can store its data.\n","sig":null,"attributes":[{"value":"/ This function is called when Criterion.rs starts profiling a particular","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/profiler.rs","byte_start":322563,"byte_end":322638,"line_start":10,"line_end":10,"column_start":5,"column_end":80}},{"value":"/ benchmark. It provides the stringified benchmark ID and","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/profiler.rs","byte_start":322643,"byte_end":322702,"line_start":11,"line_end":11,"column_start":5,"column_end":64}},{"value":"/ a path to a directory where the profiler can store its data.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/profiler.rs","byte_start":322707,"byte_end":322771,"line_start":12,"line_end":12,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1744},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/profiler.rs","byte_start":323061,"byte_end":323075,"line_start":18,"line_end":18,"column_start":8,"column_end":22},"name":"stop_profiling","qualname":"::profiler::Profiler::stop_profiling","value":"pub fn stop_profiling(&mut Self, &str, &Path)","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" This function is called after Criterion.rs stops profiling a particular\n benchmark. The benchmark ID and directory are the same as in the call\n to `start`, provided for convenience.\n","sig":null,"attributes":[{"value":"/ This function is called after Criterion.rs stops profiling a particular","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/profiler.rs","byte_start":322854,"byte_end":322929,"line_start":15,"line_end":15,"column_start":5,"column_end":80}},{"value":"/ benchmark. The benchmark ID and directory are the same as in the call","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/profiler.rs","byte_start":322934,"byte_end":323007,"line_start":16,"line_end":16,"column_start":5,"column_end":78}},{"value":"/ to `start`, provided for convenience.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/profiler.rs","byte_start":323012,"byte_end":323053,"line_start":17,"line_end":17,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1745},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/profiler.rs","byte_start":323370,"byte_end":323386,"line_start":24,"line_end":24,"column_start":12,"column_end":28},"name":"ExternalProfiler","qualname":"::profiler::ExternalProfiler","value":"","parent":null,"children":[],"decl_id":null,"docs":" Dummy profiler implementation, representing cases where the profiler is\n an external process (eg. perftools, etc.) which do not require start/stop\n hooks. This implementation does nothing and is used as the default.\n","sig":null,"attributes":[{"value":"/ Dummy profiler implementation, representing cases where the profiler is","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/profiler.rs","byte_start":323133,"byte_end":323208,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/ an external process (eg. perftools, etc.) which do not require start/stop","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/profiler.rs","byte_start":323209,"byte_end":323286,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ hooks. This implementation does nothing and is used as the default.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/profiler.rs","byte_start":323287,"byte_end":323358,"line_start":23,"line_end":23,"column_start":1,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":2133},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/tuple.rs","byte_start":370865,"byte_end":370870,"line_start":6,"line_end":6,"column_start":11,"column_end":16},"name":"Tuple","qualname":"::stats::tuple::Tuple","value":"Tuple: Sized","parent":null,"children":[{"krate":0,"index":2134},{"krate":0,"index":2135}],"decl_id":null,"docs":" Any tuple: `(A, B, ..)`\n","sig":null,"attributes":[{"value":"/ Any tuple: `(A, B, ..)`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/tuple.rs","byte_start":370827,"byte_end":370854,"line_start":5,"line_end":5,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":2134},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/tuple.rs","byte_start":370949,"byte_end":370962,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"Distributions","qualname":"::stats::tuple::Tuple::Distributions","value":"type Distributions: TupledDistributions<Item = Self>;","parent":{"krate":0,"index":2133},"children":[],"decl_id":null,"docs":" A tuple of distributions associated with this tuple\n","sig":null,"attributes":[{"value":"/ A tuple of distributions associated with this tuple","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/tuple.rs","byte_start":370884,"byte_end":370939,"line_start":7,"line_end":7,"column_start":5,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":2135},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/tuple.rs","byte_start":371062,"byte_end":371069,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"Builder","qualname":"::stats::tuple::Tuple::Builder","value":"type Builder: TupledDistributionsBuilder<Item = Self>;","parent":{"krate":0,"index":2133},"children":[],"decl_id":null,"docs":" A tuple of vectors associated with this tuple\n","sig":null,"attributes":[{"value":"/ A tuple of vectors associated with this tuple","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/tuple.rs","byte_start":371003,"byte_end":371052,"line_start":10,"line_end":10,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":2137},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/tuple.rs","byte_start":371308,"byte_end":371312,"line_start":17,"line_end":17,"column_start":10,"column_end":14},"name":"Item","qualname":"::stats::tuple::TupledDistributions::Item","value":"type Item: Tuple<Distributions = Self>;","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":" A tuple that can be pushed/inserted into the tupled distributions\n","sig":null,"attributes":[{"value":"/ A tuple that can be pushed/inserted into the tupled distributions","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/tuple.rs","byte_start":371229,"byte_end":371298,"line_start":16,"line_end":16,"column_start":5,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":2139},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/tuple.rs","byte_start":371524,"byte_end":371528,"line_start":23,"line_end":23,"column_start":10,"column_end":14},"name":"Item","qualname":"::stats::tuple::TupledDistributionsBuilder::Item","value":"type Item: Tuple<Builder = Self>;","parent":{"krate":0,"index":2138},"children":[],"decl_id":null,"docs":" A tuple that can be pushed/inserted into the tupled distributions\n","sig":null,"attributes":[{"value":"/ A tuple that can be pushed/inserted into the tupled distributions","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/tuple.rs","byte_start":371445,"byte_end":371514,"line_start":22,"line_end":22,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2231},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/percentiles.rs","byte_start":386178,"byte_end":386189,"line_start":5,"line_end":5,"column_start":12,"column_end":23},"name":"Percentiles","qualname":"::stats::univariate::percentiles::Percentiles","value":"","parent":null,"children":[],"decl_id":null,"docs":" A \"view\" into the percentiles of a sample\n","sig":null,"attributes":[{"value":"/ A \"view\" into the percentiles of a sample","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/percentiles.rs","byte_start":386121,"byte_end":386166,"line_start":4,"line_end":4,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2238},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/percentiles.rs","byte_start":387308,"byte_end":387310,"line_start":45,"line_end":45,"column_start":12,"column_end":14},"name":"at","qualname":"<Percentiles<A>>::at","value":"pub fn at(&Self, A) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the percentile at `p`%","sig":null,"attributes":[{"value":"/ Returns the percentile at `p`%","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/percentiles.rs","byte_start":387168,"byte_end":387202,"line_start":40,"line_end":40,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/percentiles.rs","byte_start":387207,"byte_end":387210,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/percentiles.rs","byte_start":387215,"byte_end":387227,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/percentiles.rs","byte_start":387232,"byte_end":387235,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Panics if `p` is outside the closed `[0, 100]` range","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/percentiles.rs","byte_start":387240,"byte_end":387296,"line_start":44,"line_end":44,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2239},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/percentiles.rs","byte_start":387567,"byte_end":387570,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"iqr","qualname":"<Percentiles<A>>::iqr","value":"pub fn iqr(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the interquartile range\n","sig":null,"attributes":[{"value":"/ Returns the interquartile range","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/percentiles.rs","byte_start":387520,"byte_end":387555,"line_start":55,"line_end":55,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2240},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/percentiles.rs","byte_start":387793,"byte_end":387799,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"median","qualname":"<Percentiles<A>>::median","value":"pub fn median(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the 50th percentile\n","sig":null,"attributes":[{"value":"/ Returns the 50th percentile","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/percentiles.rs","byte_start":387750,"byte_end":387781,"line_start":65,"line_end":65,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2241},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/percentiles.rs","byte_start":387934,"byte_end":387943,"line_start":71,"line_end":71,"column_start":12,"column_end":21},"name":"quartiles","qualname":"<Percentiles<A>>::quartiles","value":"pub fn quartiles(&Self) -> (A, A, A)","parent":null,"children":[],"decl_id":null,"docs":" Returns the 25th, 50th and 75th percentiles\n","sig":null,"attributes":[{"value":"/ Returns the 25th, 50th and 75th percentiles","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/percentiles.rs","byte_start":387875,"byte_end":387922,"line_start":70,"line_end":70,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2295},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":391933,"byte_end":391939,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Sample","qualname":"::stats::univariate::sample::Sample","value":"","parent":null,"children":[],"decl_id":null,"docs":" A collection of data points drawn from a population","sig":null,"attributes":[{"value":"/ A collection of data points drawn from a population","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":391757,"byte_end":391812,"line_start":9,"line_end":9,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":391813,"byte_end":391816,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Invariants:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":391817,"byte_end":391832,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":391833,"byte_end":391836,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - The sample contains at least 2 data points","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":391837,"byte_end":391885,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/ - The sample contains no `NaN`s","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":391886,"byte_end":391921,"line_start":14,"line_end":14,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2301},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":392325,"byte_end":392328,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<Sample<A>>::new","value":"pub fn new(&[A]) -> &Sample<A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new sample from an existing slice","sig":null,"attributes":[{"value":"/ Creates a new sample from an existing slice","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":392073,"byte_end":392120,"line_start":22,"line_end":22,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":392125,"byte_end":392128,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":392133,"byte_end":392145,"line_start":24,"line_end":24,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":392150,"byte_end":392153,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Panics if `slice` contains any `NaN` or if `slice` has less than two elements","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":392158,"byte_end":392239,"line_start":26,"line_end":26,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2302},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":392575,"byte_end":392578,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"max","qualname":"<Sample<A>>::max","value":"pub fn max(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the biggest element in the sample","sig":null,"attributes":[{"value":"/ Returns the biggest element in the sample","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":392482,"byte_end":392527,"line_start":34,"line_end":34,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":392532,"byte_end":392535,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":392540,"byte_end":392563,"line_start":36,"line_end":36,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2304},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":392972,"byte_end":392976,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"mean","qualname":"<Sample<A>>::mean","value":"pub fn mean(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the arithmetic average of the sample","sig":null,"attributes":[{"value":"/ Returns the arithmetic average of the sample","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":392876,"byte_end":392924,"line_start":47,"line_end":47,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":392929,"byte_end":392932,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":392937,"byte_end":392960,"line_start":49,"line_end":49,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2305},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":393275,"byte_end":393289,"line_start":62,"line_end":62,"column_start":12,"column_end":26},"name":"median_abs_dev","qualname":"<Sample<A>>::median_abs_dev","value":"pub fn median_abs_dev(&Self, Option<A>) -> A where usize: cast::From<A, Output\n= Result<usize, cast::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the median absolute deviation","sig":null,"attributes":[{"value":"/ Returns the median absolute deviation","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":393063,"byte_end":393104,"line_start":56,"line_end":56,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":393109,"byte_end":393112,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The `median` can be optionally passed along to speed up (2X) the computation","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":393117,"byte_end":393197,"line_start":58,"line_end":58,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":393202,"byte_end":393205,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":393210,"byte_end":393233,"line_start":60,"line_end":60,"column_start":5,"column_end":28}},{"value":"/ - Memory: `O(length)`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":393238,"byte_end":393263,"line_start":61,"line_end":61,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2308},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":394031,"byte_end":394049,"line_start":81,"line_end":81,"column_start":12,"column_end":30},"name":"median_abs_dev_pct","qualname":"<Sample<A>>::median_abs_dev_pct","value":"pub fn median_abs_dev_pct(&Self) -> A where usize: cast::From<A, Output =\nResult<usize, cast::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the median absolute deviation as a percentage of the median","sig":null,"attributes":[{"value":"/ Returns the median absolute deviation as a percentage of the median","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":393882,"byte_end":393953,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":393958,"byte_end":393961,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":393966,"byte_end":393989,"line_start":79,"line_end":79,"column_start":5,"column_end":28}},{"value":"/ - Memory: `O(length)`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":393994,"byte_end":394019,"line_start":80,"line_end":80,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2309},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":394417,"byte_end":394420,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"min","qualname":"<Sample<A>>::min","value":"pub fn min(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest element in the sample","sig":null,"attributes":[{"value":"/ Returns the smallest element in the sample","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":394323,"byte_end":394369,"line_start":92,"line_end":92,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":394374,"byte_end":394377,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":394382,"byte_end":394405,"line_start":94,"line_end":94,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2311},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":394964,"byte_end":394975,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"percentiles","qualname":"<Sample<A>>::percentiles","value":"pub fn percentiles(&Self) -> Percentiles<A> where usize: cast::From<A, Output\n= Result<usize, cast::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a \"view\" into the percentiles of the sample","sig":null,"attributes":[{"value":"/ Returns a \"view\" into the percentiles of the sample","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":394718,"byte_end":394773,"line_start":105,"line_end":105,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":394778,"byte_end":394781,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This \"view\" makes consecutive computations of percentiles much faster (`O(1)`)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":394786,"byte_end":394868,"line_start":107,"line_end":107,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":394873,"byte_end":394876,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(N log N) where N = length`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":394881,"byte_end":394922,"line_start":109,"line_end":109,"column_start":5,"column_end":46}},{"value":"/ - Memory: `O(length)`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":394927,"byte_end":394952,"line_start":110,"line_end":110,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2317},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":395868,"byte_end":395875,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"std_dev","qualname":"<Sample<A>>::std_dev","value":"pub fn std_dev(&Self, Option<A>) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the standard deviation of the sample","sig":null,"attributes":[{"value":"/ Returns the standard deviation of the sample","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":395681,"byte_end":395729,"line_start":136,"line_end":136,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":395734,"byte_end":395737,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ The `mean` can be optionally passed along to speed up (2X) the computation","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":395742,"byte_end":395820,"line_start":138,"line_end":138,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":395825,"byte_end":395828,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":395833,"byte_end":395856,"line_start":140,"line_end":140,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2318},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":396058,"byte_end":396069,"line_start":148,"line_end":148,"column_start":12,"column_end":23},"name":"std_dev_pct","qualname":"<Sample<A>>::std_dev_pct","value":"pub fn std_dev_pct(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the standard deviation as a percentage of the mean","sig":null,"attributes":[{"value":"/ Returns the standard deviation as a percentage of the mean","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":395948,"byte_end":396010,"line_start":145,"line_end":145,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":396015,"byte_end":396018,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":396023,"byte_end":396046,"line_start":147,"line_end":147,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2319},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":396342,"byte_end":396345,"line_start":159,"line_end":159,"column_start":12,"column_end":15},"name":"sum","qualname":"<Sample<A>>::sum","value":"pub fn sum(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the sum of all the elements of the sample","sig":null,"attributes":[{"value":"/ Returns the sum of all the elements of the sample","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":396241,"byte_end":396294,"line_start":156,"line_end":156,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":396299,"byte_end":396302,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":396307,"byte_end":396330,"line_start":158,"line_end":158,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2320},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":396500,"byte_end":396501,"line_start":166,"line_end":166,"column_start":12,"column_end":13},"name":"t","qualname":"<Sample<A>>::t","value":"pub fn t(&Self, &Sample<A>) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the t score between these two samples","sig":null,"attributes":[{"value":"/ Returns the t score between these two samples","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":396403,"byte_end":396452,"line_start":163,"line_end":163,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":396457,"byte_end":396460,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":396465,"byte_end":396488,"line_start":165,"line_end":165,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2321},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":397040,"byte_end":397043,"line_start":182,"line_end":182,"column_start":12,"column_end":15},"name":"var","qualname":"<Sample<A>>::var","value":"pub fn var(&Self, Option<A>) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the variance of the sample","sig":null,"attributes":[{"value":"/ Returns the variance of the sample","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":396863,"byte_end":396901,"line_start":177,"line_end":177,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":396906,"byte_end":396909,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ The `mean` can be optionally passed along to speed up (2X) the computation","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":396914,"byte_end":396992,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":396997,"byte_end":397000,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":397005,"byte_end":397028,"line_start":181,"line_end":181,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2327},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":397629,"byte_end":397638,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"bootstrap","qualname":"<Sample<A>>::bootstrap","value":"pub fn bootstrap<T, S>(&Self, usize, S) -> T::Distributions where\nS: Fn(&Sample<A>) -> T + Sync, T: Tuple + Send, T::Distributions: Send,\nT::Builder: Send","parent":null,"children":[],"decl_id":null,"docs":" Returns the bootstrap distributions of the parameters estimated by the 1-sample statistic","sig":null,"attributes":[{"value":"/ Returns the bootstrap distributions of the parameters estimated by the 1-sample statistic","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":397425,"byte_end":397518,"line_start":197,"line_end":197,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":397523,"byte_end":397526,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ - Multi-threaded","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":397531,"byte_end":397551,"line_start":199,"line_end":199,"column_start":5,"column_end":25}},{"value":"/ - Time: `O(nresamples)`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":397556,"byte_end":397583,"line_start":200,"line_end":200,"column_start":5,"column_end":32}},{"value":"/ - Memory: `O(nresamples)`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":397588,"byte_end":397617,"line_start":201,"line_end":201,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3985},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":408876,"byte_end":408889,"line_start":58,"line_end":58,"column_start":12,"column_end":25},"name":"LabeledSample","qualname":"::stats::univariate::outliers::tukey::LabeledSample","value":"LabeledSample {  }","parent":null,"children":[{"krate":0,"index":3988},{"krate":0,"index":3989}],"decl_id":null,"docs":" A classified/labeled sample.","sig":null,"attributes":[{"value":"/ A classified/labeled sample.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":408492,"byte_end":408524,"line_start":49,"line_end":49,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":408525,"byte_end":408528,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The labeled data can be accessed using the indexing operator. The order of the data points is","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":408529,"byte_end":408626,"line_start":51,"line_end":51,"column_start":1,"column_end":98}},{"value":"/ retained.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":408627,"byte_end":408640,"line_start":52,"line_end":52,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":408641,"byte_end":408644,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ NOTE: Due to limitations in the indexing traits, only the label is returned. Once the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":408645,"byte_end":408734,"line_start":54,"line_end":54,"column_start":1,"column_end":90}},{"value":"/ `IndexGet` trait lands in stdlib, the indexing operation will return a `(data_point, label)`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":408735,"byte_end":408831,"line_start":55,"line_end":55,"column_start":1,"column_end":97}},{"value":"/ pair.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":408832,"byte_end":408841,"line_start":56,"line_end":56,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":2440},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":409201,"byte_end":409206,"line_start":74,"line_end":74,"column_start":12,"column_end":17},"name":"count","qualname":"<LabeledSample>::count","value":"pub fn count(&Self) -> (usize, usize, usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of data points per label","sig":null,"attributes":[{"value":"/ Returns the number of data points per label","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":409034,"byte_end":409081,"line_start":70,"line_end":70,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":409086,"byte_end":409089,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":409094,"byte_end":409117,"line_start":72,"line_end":72,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2441},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":409922,"byte_end":409928,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"fences","qualname":"<LabeledSample>::fences","value":"pub fn fences(&Self) -> (A, A, A, A)","parent":null,"children":[],"decl_id":null,"docs":" Returns the fences used to classify the outliers\n","sig":null,"attributes":[{"value":"/ Returns the fences used to classify the outliers","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":409858,"byte_end":409910,"line_start":100,"line_end":100,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2442},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":410042,"byte_end":410046,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"iter","qualname":"<LabeledSample>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the labeled data\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the labeled data","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":409985,"byte_end":410030,"line_start":105,"line_end":105,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2465},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":411425,"byte_end":411429,"line_start":170,"line_end":170,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stats::univariate::outliers::tukey::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":2468},{"krate":0,"index":2469}],"decl_id":null,"docs":" Iterator over the labeled data\n","sig":null,"attributes":[{"value":"/ Iterator over the labeled data","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":411379,"byte_end":411413,"line_start":169,"line_end":169,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2478},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":412361,"byte_end":412369,"line_start":213,"line_end":213,"column_start":5,"column_end":13},"name":"HighMild","qualname":"::stats::univariate::outliers::tukey::Label::HighMild","value":"Label::HighMild","parent":{"krate":0,"index":2477},"children":[],"decl_id":null,"docs":" A \"mild\" outlier in the \"high\" spectrum\n","sig":null,"attributes":[{"value":"/ A \"mild\" outlier in the \"high\" spectrum","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":412313,"byte_end":412356,"line_start":212,"line_end":212,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2480},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":412425,"byte_end":412435,"line_start":215,"line_end":215,"column_start":5,"column_end":15},"name":"HighSevere","qualname":"::stats::univariate::outliers::tukey::Label::HighSevere","value":"Label::HighSevere","parent":{"krate":0,"index":2477},"children":[],"decl_id":null,"docs":" A \"severe\" outlier in the \"high\" spectrum\n","sig":null,"attributes":[{"value":"/ A \"severe\" outlier in the \"high\" spectrum","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":412375,"byte_end":412420,"line_start":214,"line_end":214,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2482},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":412488,"byte_end":412495,"line_start":217,"line_end":217,"column_start":5,"column_end":12},"name":"LowMild","qualname":"::stats::univariate::outliers::tukey::Label::LowMild","value":"Label::LowMild","parent":{"krate":0,"index":2477},"children":[],"decl_id":null,"docs":" A \"mild\" outlier in the \"low\" spectrum\n","sig":null,"attributes":[{"value":"/ A \"mild\" outlier in the \"low\" spectrum","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":412441,"byte_end":412483,"line_start":216,"line_end":216,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2484},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":412550,"byte_end":412559,"line_start":219,"line_end":219,"column_start":5,"column_end":14},"name":"LowSevere","qualname":"::stats::univariate::outliers::tukey::Label::LowSevere","value":"Label::LowSevere","parent":{"krate":0,"index":2477},"children":[],"decl_id":null,"docs":" A \"severe\" outlier in the \"low\" spectrum\n","sig":null,"attributes":[{"value":"/ A \"severe\" outlier in the \"low\" spectrum","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":412501,"byte_end":412545,"line_start":218,"line_end":218,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2486},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":412593,"byte_end":412605,"line_start":221,"line_end":221,"column_start":5,"column_end":17},"name":"NotAnOutlier","qualname":"::stats::univariate::outliers::tukey::Label::NotAnOutlier","value":"Label::NotAnOutlier","parent":{"krate":0,"index":2477},"children":[],"decl_id":null,"docs":" A normal data point\n","sig":null,"attributes":[{"value":"/ A normal data point","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":412565,"byte_end":412588,"line_start":220,"line_end":220,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":2477},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":412301,"byte_end":412306,"line_start":211,"line_end":211,"column_start":10,"column_end":15},"name":"Label","qualname":"::stats::univariate::outliers::tukey::Label","value":"pub enum Label { HighMild, HighSevere, LowMild, LowSevere, NotAnOutlier, }","parent":null,"children":[{"krate":0,"index":2478},{"krate":0,"index":2480},{"krate":0,"index":2482},{"krate":0,"index":2484},{"krate":0,"index":2486}],"decl_id":null,"docs":" Labels used to classify outliers\n","sig":null,"attributes":[{"value":"/ Labels used to classify outliers","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":412255,"byte_end":412291,"line_start":210,"line_end":210,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2489},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":412697,"byte_end":412704,"line_start":226,"line_end":226,"column_start":12,"column_end":19},"name":"is_high","qualname":"<Label>::is_high","value":"pub fn is_high(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the data point has an \"unusually\" high value\n","sig":null,"attributes":[{"value":"/ Checks if the data point has an \"unusually\" high value","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":412627,"byte_end":412685,"line_start":225,"line_end":225,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2490},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":412851,"byte_end":412858,"line_start":231,"line_end":231,"column_start":12,"column_end":19},"name":"is_mild","qualname":"<Label>::is_mild","value":"pub fn is_mild(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the data point is labeled as a \"mild\" outlier\n","sig":null,"attributes":[{"value":"/ Checks if the data point is labeled as a \"mild\" outlier","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":412780,"byte_end":412839,"line_start":230,"line_end":230,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2491},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":413000,"byte_end":413006,"line_start":236,"line_end":236,"column_start":12,"column_end":18},"name":"is_low","qualname":"<Label>::is_low","value":"pub fn is_low(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the data point has an \"unusually\" low value\n","sig":null,"attributes":[{"value":"/ Checks if the data point has an \"unusually\" low value","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":412931,"byte_end":412988,"line_start":235,"line_end":235,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2492},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":413145,"byte_end":413155,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"is_outlier","qualname":"<Label>::is_outlier","value":"pub fn is_outlier(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the data point is labeled as an outlier\n","sig":null,"attributes":[{"value":"/ Checks if the data point is labeled as an outlier","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":413080,"byte_end":413133,"line_start":240,"line_end":240,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2493},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":413295,"byte_end":413304,"line_start":246,"line_end":246,"column_start":12,"column_end":21},"name":"is_severe","qualname":"<Label>::is_severe","value":"pub fn is_severe(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the data point is labeled as a \"severe\" outlier\n","sig":null,"attributes":[{"value":"/ Checks if the data point is labeled as a \"severe\" outlier","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":413222,"byte_end":413283,"line_start":245,"line_end":245,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":2535},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/float.rs","byte_start":414209,"byte_end":414214,"line_start":9,"line_end":9,"column_start":11,"column_end":16},"name":"Float","qualname":"::stats::float::Float","value":"Float: float::Float + From<usize, Output = Self> + From<f32, Output = Self> + Sync +\nSend","parent":null,"children":[],"decl_id":null,"docs":" This is an extension of `num_traits::float::Float` that adds safe\n casting and Sync + Send. Once `num_traits` has these features this\n can be removed.\n","sig":null,"attributes":[{"value":"/ This is an extension of `num_traits::float::Float` that adds safe","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/float.rs","byte_start":414038,"byte_end":414107,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/ casting and Sync + Send. Once `num_traits` has these features this","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/float.rs","byte_start":414108,"byte_end":414178,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"/ can be removed.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/float.rs","byte_start":414179,"byte_end":414198,"line_start":8,"line_end":8,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4001},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/mod.rs","byte_start":358745,"byte_end":358757,"line_start":26,"line_end":26,"column_start":12,"column_end":24},"name":"Distribution","qualname":"::stats::Distribution","value":"","parent":null,"children":[],"decl_id":null,"docs":" The bootstrap distribution of some parameter\n","sig":null,"attributes":[{"value":"/ The bootstrap distribution of some parameter","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/mod.rs","byte_start":358668,"byte_end":358716,"line_start":24,"line_end":24,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/mod.rs","byte_start":358882,"byte_end":358886,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"from","qualname":"<Distribution<A>>::from","value":"pub fn from(Box<[A]>) -> Distribution<A>","parent":null,"children":[],"decl_id":null,"docs":" Create a distribution from the given values\n","sig":null,"attributes":[{"value":"/ Create a distribution from the given values","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/mod.rs","byte_start":358823,"byte_end":358870,"line_start":32,"line_end":32,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2570},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/mod.rs","byte_start":359164,"byte_end":359183,"line_start":42,"line_end":42,"column_start":12,"column_end":31},"name":"confidence_interval","qualname":"<Distribution<A>>::confidence_interval","value":"pub fn confidence_interval(&Self, A) -> (A, A) where usize: cast::From<A,\nOutput = Result<usize, cast::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the confidence interval of the population parameter using percentiles","sig":null,"attributes":[{"value":"/ Computes the confidence interval of the population parameter using percentiles","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/mod.rs","byte_start":358966,"byte_end":359048,"line_start":37,"line_end":37,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/mod.rs","byte_start":359053,"byte_end":359056,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/mod.rs","byte_start":359061,"byte_end":359073,"line_start":39,"line_end":39,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/mod.rs","byte_start":359078,"byte_end":359081,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Panics if the `confidence_level` is not in the `(0, 1)` range.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/mod.rs","byte_start":359086,"byte_end":359152,"line_start":41,"line_end":41,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2571},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/mod.rs","byte_start":359846,"byte_end":359853,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"p_value","qualname":"<Distribution<A>>::p_value","value":"pub fn p_value(&Self, A, &Tails) -> A","parent":null,"children":[],"decl_id":null,"docs":" Computes the \"likelihood\" of seeing the value `t` or \"more extreme\" values in the\n distribution.\n","sig":null,"attributes":[{"value":"/ Computes the \"likelihood\" of seeing the value `t` or \"more extreme\" values in the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/mod.rs","byte_start":359727,"byte_end":359812,"line_start":61,"line_end":61,"column_start":5,"column_end":90}},{"value":"/ distribution.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/mod.rs","byte_start":359817,"byte_end":359834,"line_start":62,"line_end":62,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2581},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/mod.rs","byte_start":360469,"byte_end":360472,"line_start":91,"line_end":91,"column_start":5,"column_end":8},"name":"One","qualname":"::stats::Tails::One","value":"Tails::One","parent":{"krate":0,"index":2580},"children":[],"decl_id":null,"docs":" One tailed test\n","sig":null,"attributes":[{"value":"/ One tailed test","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/mod.rs","byte_start":360445,"byte_end":360464,"line_start":90,"line_end":90,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2583},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/mod.rs","byte_start":360502,"byte_end":360505,"line_start":93,"line_end":93,"column_start":5,"column_end":8},"name":"Two","qualname":"::stats::Tails::Two","value":"Tails::Two","parent":{"krate":0,"index":2580},"children":[],"decl_id":null,"docs":" Two tailed test\n","sig":null,"attributes":[{"value":"/ Two tailed test","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/mod.rs","byte_start":360478,"byte_end":360497,"line_start":92,"line_end":92,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":2580},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/mod.rs","byte_start":360433,"byte_end":360438,"line_start":89,"line_end":89,"column_start":10,"column_end":15},"name":"Tails","qualname":"::stats::Tails","value":"pub enum Tails { One, Two, }","parent":null,"children":[{"krate":0,"index":2581},{"krate":0,"index":2583}],"decl_id":null,"docs":" Number of tails for significance testing\n","sig":null,"attributes":[{"value":"/ Number of tails for significance testing","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/mod.rs","byte_start":360379,"byte_end":360423,"line_start":88,"line_end":88,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":2726},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":5330,"byte_end":5339,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"black_box","qualname":"::black_box","value":"pub fn black_box<T>(T) -> T","parent":null,"children":[],"decl_id":null,"docs":" A function that is opaque to the optimizer, used to prevent the compiler from\n optimizing away computations in a benchmark.","sig":null,"attributes":[{"value":"/ A function that is opaque to the optimizer, used to prevent the compiler from","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":5016,"byte_end":5097,"line_start":166,"line_end":166,"column_start":1,"column_end":82}},{"value":"/ optimizing away computations in a benchmark.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":5098,"byte_end":5146,"line_start":167,"line_end":167,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":5147,"byte_end":5150,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ This variant is stable-compatible, but it may cause some performance overhead","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":5151,"byte_end":5232,"line_start":169,"line_end":169,"column_start":1,"column_end":82}},{"value":"/ or fail to prevent code from being eliminated.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":5233,"byte_end":5283,"line_start":170,"line_end":170,"column_start":1,"column_end":51}},{"value":"cfg(not(feature = \"real_blackbox\"))","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":5284,"byte_end":5322,"line_start":171,"line_end":171,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2728},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":5689,"byte_end":5692,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"Fun","qualname":"::Fun","value":"Fun {  }","parent":null,"children":[{"krate":0,"index":2731},{"krate":0,"index":2732}],"decl_id":null,"docs":" Representing a function to benchmark together with a name of that function.\n Used together with `bench_functions` to represent one out of multiple functions\n under benchmark.\n","sig":null,"attributes":[{"value":"/ Representing a function to benchmark together with a name of that function.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":5478,"byte_end":5557,"line_start":180,"line_end":180,"column_start":1,"column_end":80}},{"value":"/ Used together with `bench_functions` to represent one out of multiple functions","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":5558,"byte_end":5641,"line_start":181,"line_end":181,"column_start":1,"column_end":84}},{"value":"/ under benchmark.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":5642,"byte_end":5662,"line_start":182,"line_end":182,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2736},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":5943,"byte_end":5946,"line_start":194,"line_end":194,"column_start":12,"column_end":15},"name":"new","qualname":"<Fun<I, M>>::new","value":"pub fn new<F>(&str, F) -> Fun<I, M> where F: FnMut(&mut Bencher<, M>, &I) ->\n() + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Fun` given a name and a closure\n","sig":null,"attributes":[{"value":"/ Create a new `Fun` given a name and a closure","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":5882,"byte_end":5931,"line_start":193,"line_end":193,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4064},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":8464,"byte_end":8474,"line_start":240,"line_end":240,"column_start":5,"column_end":15},"name":"SmallInput","qualname":"::BatchSize::SmallInput","value":"BatchSize::SmallInput","parent":{"krate":0,"index":4063},"children":[],"decl_id":null,"docs":" `SmallInput` indicates that the input to the benchmark routine (the value returned from\n the setup routine) is small enough that millions of values can be safely held in memory.\n Always prefer `SmallInput` unless the benchmark is using too much memory.","sig":null,"attributes":[{"value":"/ `SmallInput` indicates that the input to the benchmark routine (the value returned from","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":7989,"byte_end":8080,"line_start":234,"line_end":234,"column_start":5,"column_end":96}},{"value":"/ the setup routine) is small enough that millions of values can be safely held in memory.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":8085,"byte_end":8177,"line_start":235,"line_end":235,"column_start":5,"column_end":97}},{"value":"/ Always prefer `SmallInput` unless the benchmark is using too much memory.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":8182,"byte_end":8259,"line_start":236,"line_end":236,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":8264,"byte_end":8267,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ In testing, the maximum measurement overhead from benchmarking with `SmallInput` is on the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":8272,"byte_end":8366,"line_start":238,"line_end":238,"column_start":5,"column_end":99}},{"value":"/ order of 500 picoseconds. This is presented as a rough guide; your results may vary.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":8371,"byte_end":8459,"line_start":239,"line_end":239,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4066},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":8891,"byte_end":8901,"line_start":248,"line_end":248,"column_start":5,"column_end":15},"name":"LargeInput","qualname":"::BatchSize::LargeInput","value":"BatchSize::LargeInput","parent":{"krate":0,"index":4063},"children":[],"decl_id":null,"docs":" `LargeInput` indicates that the input to the benchmark routine or the value returned from\n that routine is large. This will reduce the memory usage but increase the measurement\n overhead.","sig":null,"attributes":[{"value":"/ `LargeInput` indicates that the input to the benchmark routine or the value returned from","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":8481,"byte_end":8574,"line_start":242,"line_end":242,"column_start":5,"column_end":98}},{"value":"/ that routine is large. This will reduce the memory usage but increase the measurement","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":8579,"byte_end":8668,"line_start":243,"line_end":243,"column_start":5,"column_end":94}},{"value":"/ overhead.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":8673,"byte_end":8686,"line_start":244,"line_end":244,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":8691,"byte_end":8694,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ In testing, the maximum measurement overhead from benchmarking with `LargeInput` is on the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":8699,"byte_end":8793,"line_start":246,"line_end":246,"column_start":5,"column_end":99}},{"value":"/ order of 750 picoseconds. This is presented as a rough guide; your results may vary.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":8798,"byte_end":8886,"line_start":247,"line_end":247,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4068},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":9467,"byte_end":9479,"line_start":258,"line_end":258,"column_start":5,"column_end":17},"name":"PerIteration","qualname":"::BatchSize::PerIteration","value":"BatchSize::PerIteration","parent":{"krate":0,"index":4063},"children":[],"decl_id":null,"docs":" `PerIteration` indicates that the input to the benchmark routine or the value returned from\n that routine is extremely large or holds some limited resource, such that holding many values\n in memory at once is infeasible. This provides the worst measurement overhead, but the\n lowest memory usage.","sig":null,"attributes":[{"value":"/ `PerIteration` indicates that the input to the benchmark routine or the value returned from","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":8908,"byte_end":9003,"line_start":250,"line_end":250,"column_start":5,"column_end":100}},{"value":"/ that routine is extremely large or holds some limited resource, such that holding many values","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":9008,"byte_end":9105,"line_start":251,"line_end":251,"column_start":5,"column_end":102}},{"value":"/ in memory at once is infeasible. This provides the worst measurement overhead, but the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":9110,"byte_end":9200,"line_start":252,"line_end":252,"column_start":5,"column_end":95}},{"value":"/ lowest memory usage.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":9205,"byte_end":9229,"line_start":253,"line_end":253,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":9234,"byte_end":9237,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ In testing, the maximum measurement overhead from benchmarking with `PerIteration` is on the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":9242,"byte_end":9338,"line_start":255,"line_end":255,"column_start":5,"column_end":101}},{"value":"/ order of 350 nanoseconds or 350,000 picoseconds. This is presented as a rough guide; your","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":9343,"byte_end":9436,"line_start":256,"line_end":256,"column_start":5,"column_end":98}},{"value":"/ results may vary.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":9441,"byte_end":9462,"line_start":257,"line_end":257,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4070},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":9944,"byte_end":9954,"line_start":265,"line_end":265,"column_start":5,"column_end":15},"name":"NumBatches","qualname":"::BatchSize::NumBatches","value":"BatchSize::NumBatches(u64)","parent":{"krate":0,"index":4063},"children":[],"decl_id":null,"docs":" `NumBatches` will attempt to divide the iterations up into a given number of batches.\n A larger number of batches (and thus smaller batches) will reduce memory usage but increase\n measurement overhead. This allows the user to choose their own tradeoff between memory usage\n and measurement overhead, but care must be taken in tuning the number of batches. Most\n benchmarks should use `SmallInput` or `LargeInput` instead.\n","sig":null,"attributes":[{"value":"/ `NumBatches` will attempt to divide the iterations up into a given number of batches.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":9486,"byte_end":9575,"line_start":260,"line_end":260,"column_start":5,"column_end":94}},{"value":"/ A larger number of batches (and thus smaller batches) will reduce memory usage but increase","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":9580,"byte_end":9675,"line_start":261,"line_end":261,"column_start":5,"column_end":100}},{"value":"/ measurement overhead. This allows the user to choose their own tradeoff between memory usage","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":9680,"byte_end":9776,"line_start":262,"line_end":262,"column_start":5,"column_end":101}},{"value":"/ and measurement overhead, but care must be taken in tuning the number of batches. Most","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":9781,"byte_end":9871,"line_start":263,"line_end":263,"column_start":5,"column_end":95}},{"value":"/ benchmarks should use `SmallInput` or `LargeInput` instead.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":9876,"byte_end":9939,"line_start":264,"line_end":264,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4073},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":10385,"byte_end":10398,"line_start":272,"line_end":272,"column_start":5,"column_end":18},"name":"NumIterations","qualname":"::BatchSize::NumIterations","value":"BatchSize::NumIterations(u64)","parent":{"krate":0,"index":4063},"children":[],"decl_id":null,"docs":" `NumIterations` fixes the batch size to a constant number, specified by the user. This\n allows the user to choose their own tradeoff between overhead and memory usage, but care must\n be taken in tuning the batch size. In general, the measurement overhead of `NumIterations`\n will be larger than that of `NumBatches`. Most benchmarks should use `SmallInput` or\n `LargeInput` instead.\n","sig":null,"attributes":[{"value":"/ `NumIterations` fixes the batch size to a constant number, specified by the user. This","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":9966,"byte_end":10056,"line_start":267,"line_end":267,"column_start":5,"column_end":95}},{"value":"/ allows the user to choose their own tradeoff between overhead and memory usage, but care must","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":10061,"byte_end":10158,"line_start":268,"line_end":268,"column_start":5,"column_end":102}},{"value":"/ be taken in tuning the batch size. In general, the measurement overhead of `NumIterations`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":10163,"byte_end":10257,"line_start":269,"line_end":269,"column_start":5,"column_end":99}},{"value":"/ will be larger than that of `NumBatches`. Most benchmarks should use `SmallInput` or","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":10262,"byte_end":10350,"line_start":270,"line_end":270,"column_start":5,"column_end":93}},{"value":"/ `LargeInput` instead.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":10355,"byte_end":10380,"line_start":271,"line_end":271,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4076},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":10429,"byte_end":10444,"line_start":275,"line_end":275,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::BatchSize::__NonExhaustive","value":"BatchSize::__NonExhaustive","parent":{"krate":0,"index":4063},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4063},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":7973,"byte_end":7982,"line_start":233,"line_end":233,"column_start":10,"column_end":19},"name":"BatchSize","qualname":"::BatchSize","value":"pub enum BatchSize {\n    SmallInput,\n    LargeInput,\n    PerIteration,\n    NumBatches(u64),\n    NumIterations(u64),\n    __NonExhaustive,\n}","parent":null,"children":[{"krate":0,"index":4064},{"krate":0,"index":4066},{"krate":0,"index":4068},{"krate":0,"index":4070},{"krate":0,"index":4073},{"krate":0,"index":4076}],"decl_id":null,"docs":" Argument to [`Bencher::iter_batched`](struct.Bencher.html#method.iter_batched) and\n [`Bencher::iter_batched_ref`](struct.Bencher.html#method.iter_batched_ref) which controls the\n batch size.","sig":null,"attributes":[{"value":"/ Argument to [`Bencher::iter_batched`](struct.Bencher.html#method.iter_batched) and","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":6281,"byte_end":6367,"line_start":210,"line_end":210,"column_start":1,"column_end":87}},{"value":"/ [`Bencher::iter_batched_ref`](struct.Bencher.html#method.iter_batched_ref) which controls the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":6368,"byte_end":6465,"line_start":211,"line_end":211,"column_start":1,"column_end":98}},{"value":"/ batch size.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":6466,"byte_end":6481,"line_start":212,"line_end":212,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":6482,"byte_end":6485,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ Generally speaking, almost all benchmarks should use `SmallInput`. If the input or the result","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":6486,"byte_end":6583,"line_start":214,"line_end":214,"column_start":1,"column_end":98}},{"value":"/ of the benchmark routine is large enough that `SmallInput` causes out-of-memory errors,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":6584,"byte_end":6675,"line_start":215,"line_end":215,"column_start":1,"column_end":92}},{"value":"/ `LargeInput` can be used to reduce memory usage at the cost of increasing the measurement","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":6676,"byte_end":6769,"line_start":216,"line_end":216,"column_start":1,"column_end":94}},{"value":"/ overhead. If the input or the result is extremely large (or if it holds some","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":6770,"byte_end":6850,"line_start":217,"line_end":217,"column_start":1,"column_end":81}},{"value":"/ limited external resource like a file handle), `PerIteration` will set the number of iterations","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":6851,"byte_end":6950,"line_start":218,"line_end":218,"column_start":1,"column_end":100}},{"value":"/ per batch to exactly one. `PerIteration` can increase the measurement overhead substantially","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":6951,"byte_end":7047,"line_start":219,"line_end":219,"column_start":1,"column_end":97}},{"value":"/ and should be avoided wherever possible.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":7048,"byte_end":7092,"line_start":220,"line_end":220,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":7093,"byte_end":7096,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ Each value lists an estimate of the measurement overhead. This is intended as a rough guide","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":7097,"byte_end":7192,"line_start":222,"line_end":222,"column_start":1,"column_end":96}},{"value":"/ to assist in choosing an option, it should not be relied upon. In particular, it is not valid","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":7193,"byte_end":7290,"line_start":223,"line_end":223,"column_start":1,"column_end":98}},{"value":"/ to subtract the listed overhead from the measurement and assume that the result represents the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":7291,"byte_end":7389,"line_start":224,"line_end":224,"column_start":1,"column_end":99}},{"value":"/ true runtime of a function. The actual measurement overhead for your specific benchmark depends","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":7390,"byte_end":7489,"line_start":225,"line_end":225,"column_start":1,"column_end":100}},{"value":"/ on the details of the function you're benchmarking and the hardware and operating","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":7490,"byte_end":7575,"line_start":226,"line_end":226,"column_start":1,"column_end":86}},{"value":"/ system running the benchmark.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":7576,"byte_end":7609,"line_start":227,"line_end":227,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":7610,"byte_end":7613,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ With that said, if the runtime of your function is small relative to the measurement overhead","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":7614,"byte_end":7711,"line_start":229,"line_end":229,"column_start":1,"column_end":98}},{"value":"/ it will be difficult to take accurate measurements. In this situation, the best option is to use","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":7712,"byte_end":7812,"line_start":230,"line_end":230,"column_start":1,"column_end":101}},{"value":"/ [`Bencher::iter`](struct.Bencher.html#method.iter) which has next-to-zero measurement overhead.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":7813,"byte_end":7912,"line_start":231,"line_end":231,"column_start":1,"column_end":100}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4094},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":11574,"byte_end":11581,"line_start":301,"line_end":301,"column_start":5,"column_end":12},"name":"Compare","qualname":"::Baseline::Compare","value":"Baseline::Compare","parent":{"krate":0,"index":4093},"children":[],"decl_id":null,"docs":" Compare ensures a previous saved version of the baseline\n exists and runs comparison against that.\n","sig":null,"attributes":[{"value":"/ Compare ensures a previous saved version of the baseline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":11460,"byte_end":11520,"line_start":299,"line_end":299,"column_start":5,"column_end":65}},{"value":"/ exists and runs comparison against that.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":11525,"byte_end":11569,"line_start":300,"line_end":300,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4096},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":11716,"byte_end":11720,"line_start":304,"line_end":304,"column_start":5,"column_end":9},"name":"Save","qualname":"::Baseline::Save","value":"Baseline::Save","parent":{"krate":0,"index":4093},"children":[],"decl_id":null,"docs":" Save writes the benchmark results to the baseline directory,\n overwriting any results that were previously there.\n","sig":null,"attributes":[{"value":"/ Save writes the benchmark results to the baseline directory,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":11587,"byte_end":11651,"line_start":302,"line_end":302,"column_start":5,"column_end":69}},{"value":"/ overwriting any results that were previously there.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":11656,"byte_end":11711,"line_start":303,"line_end":303,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":4093},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":11445,"byte_end":11453,"line_start":298,"line_end":298,"column_start":10,"column_end":18},"name":"Baseline","qualname":"::Baseline","value":"pub enum Baseline { Compare, Save, }","parent":null,"children":[{"krate":0,"index":4094},{"krate":0,"index":4096}],"decl_id":null,"docs":" Baseline describes how the baseline_directory is handled.\n","sig":null,"attributes":[{"value":"/ Baseline describes how the baseline_directory is handled.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":11344,"byte_end":11405,"line_start":296,"line_end":296,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4104},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":11983,"byte_end":11990,"line_start":312,"line_end":312,"column_start":5,"column_end":12},"name":"Gnuplot","qualname":"::PlottingBackend::Gnuplot","value":"PlottingBackend::Gnuplot","parent":{"krate":0,"index":4103},"children":[],"decl_id":null,"docs":" Plotting backend which uses the external `gnuplot` command to render plots. This is the\n default if the `gnuplot` command is installed.\n","sig":null,"attributes":[{"value":"/ Plotting backend which uses the external `gnuplot` command to render plots. This is the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":11832,"byte_end":11923,"line_start":310,"line_end":310,"column_start":5,"column_end":96}},{"value":"/ default if the `gnuplot` command is installed.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":11928,"byte_end":11978,"line_start":311,"line_end":311,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4106},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":12120,"byte_end":12128,"line_start":315,"line_end":315,"column_start":5,"column_end":13},"name":"Plotters","qualname":"::PlottingBackend::Plotters","value":"PlottingBackend::Plotters","parent":{"krate":0,"index":4103},"children":[],"decl_id":null,"docs":" Plotting backend which uses the rust 'Plotters' library. This is the default if `gnuplot`\n is not installed.\n","sig":null,"attributes":[{"value":"/ Plotting backend which uses the rust 'Plotters' library. This is the default if `gnuplot`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":11996,"byte_end":12089,"line_start":313,"line_end":313,"column_start":5,"column_end":98}},{"value":"/ is not installed.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":12094,"byte_end":12115,"line_start":314,"line_end":314,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":4103},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":11810,"byte_end":11825,"line_start":309,"line_end":309,"column_start":10,"column_end":25},"name":"PlottingBackend","qualname":"::PlottingBackend","value":"pub enum PlottingBackend { Gnuplot, Plotters, }","parent":null,"children":[{"krate":0,"index":4104},{"krate":0,"index":4106}],"decl_id":null,"docs":" Enum used to select the plotting backend.\n","sig":null,"attributes":[{"value":"/ Enum used to select the plotting backend.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":11725,"byte_end":11770,"line_start":307,"line_end":307,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2744},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":13543,"byte_end":13552,"line_start":358,"line_end":358,"column_start":12,"column_end":21},"name":"Criterion","qualname":"::Criterion","value":"Criterion {  }","parent":null,"children":[{"krate":0,"index":2746},{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2751},{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2754},{"krate":0,"index":2755},{"krate":0,"index":2756},{"krate":0,"index":2757},{"krate":0,"index":2758}],"decl_id":null,"docs":" The benchmark manager","sig":null,"attributes":[{"value":"/ The benchmark manager","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":12909,"byte_end":12934,"line_start":344,"line_end":344,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":12935,"byte_end":12938,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ `Criterion` lets you configure and execute benchmarks","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":12939,"byte_end":12996,"line_start":346,"line_end":346,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":12997,"byte_end":13000,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ Each benchmark consists of four phases:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":13001,"byte_end":13044,"line_start":348,"line_end":348,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":13045,"byte_end":13048,"line_start":349,"line_end":349,"column_start":1,"column_end":4}},{"value":"/ - **Warm-up**: The routine is repeatedly executed, to let the CPU/OS/JIT/interpreter adapt to","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":13049,"byte_end":13146,"line_start":350,"line_end":350,"column_start":1,"column_end":98}},{"value":"/ the new load","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":13147,"byte_end":13163,"line_start":351,"line_end":351,"column_start":1,"column_end":17}},{"value":"/ - **Measurement**: The routine is repeatedly executed, and timing information is collected into","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":13164,"byte_end":13263,"line_start":352,"line_end":352,"column_start":1,"column_end":100}},{"value":"/ a sample","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":13264,"byte_end":13276,"line_start":353,"line_end":353,"column_start":1,"column_end":13}},{"value":"/ - **Analysis**: The sample is analyzed and distilled into meaningful statistics that get","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":13277,"byte_end":13369,"line_start":354,"line_end":354,"column_start":1,"column_end":93}},{"value":"/ reported to stdout, stored in files, and plotted","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":13370,"byte_end":13422,"line_start":355,"line_end":355,"column_start":1,"column_end":53}},{"value":"/ - **Comparison**: The current sample is compared with the sample obtained in the previous","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":13423,"byte_end":13516,"line_start":356,"line_end":356,"column_start":1,"column_end":94}},{"value":"/ benchmark.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":13517,"byte_end":13531,"line_start":357,"line_end":357,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2766},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":17094,"byte_end":17110,"line_start":459,"line_end":459,"column_start":12,"column_end":28},"name":"with_measurement","qualname":"<Criterion<M>>::with_measurement","value":"pub fn with_measurement<M2: Measurement>(Self, M2) -> Criterion<M2>","parent":null,"children":[],"decl_id":null,"docs":" Changes the measurement for the benchmarks run with this runner. See the\n Measurement trait for more details\n","sig":null,"attributes":[{"value":"/ Changes the measurement for the benchmarks run with this runner. See the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":16963,"byte_end":17039,"line_start":457,"line_end":457,"column_start":5,"column_end":81}},{"value":"/ Measurement trait for more details","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":17044,"byte_end":17082,"line_start":458,"line_end":458,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2768},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":17944,"byte_end":17957,"line_start":480,"line_end":480,"column_start":12,"column_end":25},"name":"with_profiler","qualname":"<Criterion<M>>::with_profiler","value":"pub fn with_profiler<P: Profiler + 'static>(Self, P) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the internal profiler for benchmarks run with this runner. See\n the Profiler trait for more details.\n","sig":null,"attributes":[{"value":"/ Changes the internal profiler for benchmarks run with this runner. See","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":17813,"byte_end":17887,"line_start":478,"line_end":478,"column_start":5,"column_end":79}},{"value":"/ the Profiler trait for more details.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":17892,"byte_end":17932,"line_start":479,"line_end":479,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2770},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":18338,"byte_end":18354,"line_start":491,"line_end":491,"column_start":12,"column_end":28},"name":"plotting_backend","qualname":"<Criterion<M>>::plotting_backend","value":"pub fn plotting_backend(Self, PlottingBackend) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Set the plotting backend. By default, Criterion will use gnuplot if available, or plotters\n if not.","sig":null,"attributes":[{"value":"/ Set the plotting backend. By default, Criterion will use gnuplot if available, or plotters","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":18120,"byte_end":18214,"line_start":487,"line_end":487,"column_start":5,"column_end":99}},{"value":"/ if not.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":18219,"byte_end":18230,"line_start":488,"line_end":488,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":18235,"byte_end":18238,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ Panics if `backend` is `PlottingBackend::Gnuplot` and gnuplot is not available.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":18243,"byte_end":18326,"line_start":490,"line_end":490,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":2771},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":19130,"byte_end":19141,"line_start":512,"line_end":512,"column_start":12,"column_end":23},"name":"sample_size","qualname":"<Criterion<M>>::sample_size","value":"pub fn sample_size(Self, usize) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default size of the sample for benchmarks run with this runner.","sig":null,"attributes":[{"value":"/ Changes the default size of the sample for benchmarks run with this runner.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":18803,"byte_end":18882,"line_start":502,"line_end":502,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":18887,"byte_end":18890,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ A bigger sample should yield more accurate results if paired with a sufficiently large","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":18895,"byte_end":18985,"line_start":504,"line_end":504,"column_start":5,"column_end":95}},{"value":"/ measurement time.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":18990,"byte_end":19011,"line_start":505,"line_end":505,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":19016,"byte_end":19019,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ Sample size must be at least 10.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":19024,"byte_end":19060,"line_start":507,"line_end":507,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":19065,"byte_end":19068,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":19073,"byte_end":19085,"line_start":509,"line_end":509,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":19090,"byte_end":19093,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ Panics if n < 10","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":19098,"byte_end":19118,"line_start":511,"line_end":511,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2772},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":19431,"byte_end":19443,"line_start":524,"line_end":524,"column_start":12,"column_end":24},"name":"warm_up_time","qualname":"<Criterion<M>>::warm_up_time","value":"pub fn warm_up_time(Self, Duration) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default warm up time for benchmarks run with this runner.","sig":null,"attributes":[{"value":"/ Changes the default warm up time for benchmarks run with this runner.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":19268,"byte_end":19341,"line_start":519,"line_end":519,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":19346,"byte_end":19349,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":19354,"byte_end":19366,"line_start":521,"line_end":521,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":19371,"byte_end":19374,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ Panics if the input duration is zero","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":19379,"byte_end":19419,"line_start":523,"line_end":523,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2773},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":20001,"byte_end":20017,"line_start":541,"line_end":541,"column_start":12,"column_end":28},"name":"measurement_time","qualname":"<Criterion<M>>::measurement_time","value":"pub fn measurement_time(Self, Duration) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default measurement time for benchmarks run with this runner.","sig":null,"attributes":[{"value":"/ Changes the default measurement time for benchmarks run with this runner.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":19589,"byte_end":19666,"line_start":531,"line_end":531,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":19671,"byte_end":19674,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ With a longer time, the measurement will become more resilient to transitory peak loads","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":19679,"byte_end":19770,"line_start":533,"line_end":533,"column_start":5,"column_end":96}},{"value":"/ caused by external programs","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":19775,"byte_end":19806,"line_start":534,"line_end":534,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":19811,"byte_end":19814,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ **Note**: If the measurement time is too \"low\", Criterion will automatically increase it","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":19819,"byte_end":19911,"line_start":536,"line_end":536,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":19916,"byte_end":19919,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":19924,"byte_end":19936,"line_start":538,"line_end":538,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":19941,"byte_end":19944,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ Panics if the input duration in zero","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":19949,"byte_end":19989,"line_start":540,"line_end":540,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2774},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":20663,"byte_end":20673,"line_start":559,"line_end":559,"column_start":12,"column_end":22},"name":"nresamples","qualname":"<Criterion<M>>::nresamples","value":"pub fn nresamples(Self, usize) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default number of resamples for benchmarks run with this runner.","sig":null,"attributes":[{"value":"/ Changes the default number of resamples for benchmarks run with this runner.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":20167,"byte_end":20247,"line_start":548,"line_end":548,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":20252,"byte_end":20255,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ Number of resamples to use for the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":20260,"byte_end":20298,"line_start":550,"line_end":550,"column_start":5,"column_end":43}},{"value":"/ [bootstrap](http://en.wikipedia.org/wiki/Bootstrapping_(statistics)#Case_resampling)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":20303,"byte_end":20391,"line_start":551,"line_end":551,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":20396,"byte_end":20399,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ A larger number of resamples reduces the random sampling errors, which are inherent to the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":20404,"byte_end":20498,"line_start":553,"line_end":553,"column_start":5,"column_end":99}},{"value":"/ bootstrap method, but also increases the analysis time","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":20503,"byte_end":20561,"line_start":554,"line_end":554,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":20566,"byte_end":20569,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":20574,"byte_end":20586,"line_start":556,"line_end":556,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":20591,"byte_end":20594,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ Panics if the number of resamples is set to zero","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":20599,"byte_end":20651,"line_start":558,"line_end":558,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2775},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":21641,"byte_end":21656,"line_start":581,"line_end":581,"column_start":12,"column_end":27},"name":"noise_threshold","qualname":"<Criterion<M>>::noise_threshold","value":"pub fn noise_threshold(Self, f64) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default noise threshold for benchmarks run with this runner. The noise threshold\n is used to filter out small changes in performance, even if they are statistically\n significant. Sometimes benchmarking the same code twice will result in small but\n statistically significant differences solely because of noise. This provides a way to filter\n out some of these false positives at the cost of making it harder to detect small changes\n to the true performance of the benchmark.","sig":null,"attributes":[{"value":"/ Changes the default noise threshold for benchmarks run with this runner. The noise threshold","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":20921,"byte_end":21017,"line_start":569,"line_end":569,"column_start":5,"column_end":101}},{"value":"/ is used to filter out small changes in performance, even if they are statistically","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":21022,"byte_end":21108,"line_start":570,"line_end":570,"column_start":5,"column_end":91}},{"value":"/ significant. Sometimes benchmarking the same code twice will result in small but","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":21113,"byte_end":21197,"line_start":571,"line_end":571,"column_start":5,"column_end":89}},{"value":"/ statistically significant differences solely because of noise. This provides a way to filter","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":21202,"byte_end":21298,"line_start":572,"line_end":572,"column_start":5,"column_end":101}},{"value":"/ out some of these false positives at the cost of making it harder to detect small changes","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":21303,"byte_end":21396,"line_start":573,"line_end":573,"column_start":5,"column_end":98}},{"value":"/ to the true performance of the benchmark.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":21401,"byte_end":21446,"line_start":574,"line_end":574,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":21451,"byte_end":21454,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ The default is 0.01, meaning that changes smaller than 1% will be ignored.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":21459,"byte_end":21537,"line_start":576,"line_end":576,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":21542,"byte_end":21545,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":21550,"byte_end":21562,"line_start":578,"line_end":578,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":21567,"byte_end":21570,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ Panics if the threshold is set to a negative value","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":21575,"byte_end":21629,"line_start":580,"line_end":580,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2776},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":22315,"byte_end":22331,"line_start":596,"line_end":596,"column_start":12,"column_end":28},"name":"confidence_level","qualname":"<Criterion<M>>::confidence_level","value":"pub fn confidence_level(Self, f64) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default confidence level for benchmarks run with this runner. The confidence\n level is the desired probability that the true runtime lies within the estimated\n [confidence interval](https://en.wikipedia.org/wiki/Confidence_interval). The default is\n 0.95, meaning that the confidence interval should capture the true value 95% of the time.","sig":null,"attributes":[{"value":"/ Changes the default confidence level for benchmarks run with this runner. The confidence","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":21810,"byte_end":21902,"line_start":588,"line_end":588,"column_start":5,"column_end":97}},{"value":"/ level is the desired probability that the true runtime lies within the estimated","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":21907,"byte_end":21991,"line_start":589,"line_end":589,"column_start":5,"column_end":89}},{"value":"/ [confidence interval](https://en.wikipedia.org/wiki/Confidence_interval). The default is","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":21996,"byte_end":22088,"line_start":590,"line_end":590,"column_start":5,"column_end":97}},{"value":"/ 0.95, meaning that the confidence interval should capture the true value 95% of the time.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":22093,"byte_end":22186,"line_start":591,"line_end":591,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":22191,"byte_end":22194,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":22199,"byte_end":22211,"line_start":593,"line_end":593,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":22216,"byte_end":22219,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ Panics if the confidence level is set to a value outside the `(0, 1)` range","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":22224,"byte_end":22303,"line_start":595,"line_end":595,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2777},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":23903,"byte_end":23921,"line_start":626,"line_end":626,"column_start":12,"column_end":30},"name":"significance_level","qualname":"<Criterion<M>>::significance_level","value":"pub fn significance_level(Self, f64) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default [significance level](https://en.wikipedia.org/wiki/Statistical_significance)\n for benchmarks run with this runner. This is used to perform a\n [hypothesis test](https://en.wikipedia.org/wiki/Statistical_hypothesis_testing) to see if\n the measurements from this run are different from the measured performance of the last run.\n The significance level is the desired probability that two measurements of identical code\n will be considered 'different' due to noise in the measurements. The default value is 0.05,\n meaning that approximately 5% of identical benchmarks will register as different due to\n noise.","sig":null,"attributes":[{"value":"/ Changes the default [significance level](https://en.wikipedia.org/wiki/Statistical_significance)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":22604,"byte_end":22704,"line_start":606,"line_end":606,"column_start":5,"column_end":105}},{"value":"/ for benchmarks run with this runner. This is used to perform a","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":22709,"byte_end":22775,"line_start":607,"line_end":607,"column_start":5,"column_end":71}},{"value":"/ [hypothesis test](https://en.wikipedia.org/wiki/Statistical_hypothesis_testing) to see if","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":22780,"byte_end":22873,"line_start":608,"line_end":608,"column_start":5,"column_end":98}},{"value":"/ the measurements from this run are different from the measured performance of the last run.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":22878,"byte_end":22973,"line_start":609,"line_end":609,"column_start":5,"column_end":100}},{"value":"/ The significance level is the desired probability that two measurements of identical code","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":22978,"byte_end":23071,"line_start":610,"line_end":610,"column_start":5,"column_end":98}},{"value":"/ will be considered 'different' due to noise in the measurements. The default value is 0.05,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":23076,"byte_end":23171,"line_start":611,"line_end":611,"column_start":5,"column_end":100}},{"value":"/ meaning that approximately 5% of identical benchmarks will register as different due to","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":23176,"byte_end":23267,"line_start":612,"line_end":612,"column_start":5,"column_end":96}},{"value":"/ noise.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":23272,"byte_end":23282,"line_start":613,"line_end":613,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":23287,"byte_end":23290,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ This presents a trade-off. By setting the significance level closer to 0.0, you can increase","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":23295,"byte_end":23391,"line_start":615,"line_end":615,"column_start":5,"column_end":101}},{"value":"/ the statistical robustness against noise, but it also weakens Criterion.rs' ability to","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":23396,"byte_end":23486,"line_start":616,"line_end":616,"column_start":5,"column_end":95}},{"value":"/ detect small but real changes in the performance. By setting the significance level","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":23491,"byte_end":23578,"line_start":617,"line_end":617,"column_start":5,"column_end":92}},{"value":"/ closer to 1.0, Criterion.rs will be more able to detect small true changes, but will also","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":23583,"byte_end":23676,"line_start":618,"line_end":618,"column_start":5,"column_end":98}},{"value":"/ report more spurious differences.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":23681,"byte_end":23718,"line_start":619,"line_end":619,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":23723,"byte_end":23726,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ See also the noise threshold setting.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":23731,"byte_end":23772,"line_start":621,"line_end":621,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":23777,"byte_end":23780,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":23785,"byte_end":23797,"line_start":623,"line_end":623,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":23802,"byte_end":23805,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ Panics if the significance level is set to a value outside the `(0, 1)` range","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":23810,"byte_end":23891,"line_start":625,"line_end":625,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2778},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":24100,"byte_end":24110,"line_start":634,"line_end":634,"column_start":12,"column_end":22},"name":"with_plots","qualname":"<Criterion<M>>::with_plots","value":"pub fn with_plots(Self) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Enables plotting\n","sig":null,"attributes":[{"value":"/ Enables plotting","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":24068,"byte_end":24088,"line_start":633,"line_end":633,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2779},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":24393,"byte_end":24406,"line_start":643,"line_end":643,"column_start":12,"column_end":25},"name":"without_plots","qualname":"<Criterion<M>>::without_plots","value":"pub fn without_plots(Self) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Disables plotting\n","sig":null,"attributes":[{"value":"/ Disables plotting","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":24360,"byte_end":24381,"line_start":642,"line_end":642,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2780},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":24732,"byte_end":24740,"line_start":653,"line_end":653,"column_start":12,"column_end":20},"name":"can_plot","qualname":"<Criterion<M>>::can_plot","value":"pub fn can_plot(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if generation of the plots is possible.\n","sig":null,"attributes":[{"value":"/ Return true if generation of the plots is possible.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":24501,"byte_end":24556,"line_start":648,"line_end":648,"column_start":5,"column_end":60}},{"value":"deprecated(since = \"0.3.4\", note =\n\"No longer useful; since the plotters backend is available Criterion.rs can always generate plots\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":24561,"byte_end":24720,"line_start":649,"line_end":652,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":2781},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":24967,"byte_end":24980,"line_start":660,"line_end":660,"column_start":12,"column_end":25},"name":"save_baseline","qualname":"<Criterion<M>>::save_baseline","value":"pub fn save_baseline(Self, String) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Names an explicit baseline and enables overwriting the previous results.\n","sig":null,"attributes":[{"value":"/ Names an explicit baseline and enables overwriting the previous results.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":24879,"byte_end":24955,"line_start":659,"line_end":659,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2782},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":25224,"byte_end":25239,"line_start":667,"line_end":667,"column_start":12,"column_end":27},"name":"retain_baseline","qualname":"<Criterion<M>>::retain_baseline","value":"pub fn retain_baseline(Self, String) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Names an explicit baseline and disables overwriting the previous results.\n","sig":null,"attributes":[{"value":"/ Names an explicit baseline and disables overwriting the previous results.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":25135,"byte_end":25212,"line_start":666,"line_end":666,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2783},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":25519,"byte_end":25530,"line_start":675,"line_end":675,"column_start":12,"column_end":23},"name":"with_filter","qualname":"<Criterion<M>>::with_filter","value":"pub fn with_filter<S: Into<String>>(Self, S) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Filters the benchmarks. Only benchmarks with names that contain the\n given string will be executed.\n","sig":null,"attributes":[{"value":"/ Filters the benchmarks. Only benchmarks with names that contain the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":25397,"byte_end":25468,"line_start":673,"line_end":673,"column_start":5,"column_end":76}},{"value":"/ given string will be executed.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":25473,"byte_end":25507,"line_start":674,"line_end":674,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2786},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":26087,"byte_end":26104,"line_start":690,"line_end":690,"column_start":12,"column_end":29},"name":"with_output_color","qualname":"<Criterion<M>>::with_output_color","value":"pub fn with_output_color(Self, bool) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Override whether the CLI output will be colored or not. Usually you would use the `--color`\n CLI argument, but this is available for programmmatic use as well.\n","sig":null,"attributes":[{"value":"/ Override whether the CLI output will be colored or not. Usually you would use the `--color`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":25905,"byte_end":26000,"line_start":688,"line_end":688,"column_start":5,"column_end":100}},{"value":"/ CLI argument, but this is available for programmmatic use as well.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":26005,"byte_end":26075,"line_start":689,"line_end":689,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2787},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":26316,"byte_end":26332,"line_start":697,"line_end":697,"column_start":12,"column_end":28},"name":"output_directory","qualname":"<Criterion<M>>::output_directory","value":"pub fn output_directory(Self, &Path) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Set the output directory (currently for testing only)\n","sig":null,"attributes":[{"value":"/ Set the output directory (currently for testing only)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":26228,"byte_end":26285,"line_start":695,"line_end":695,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2788},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":26532,"byte_end":26544,"line_start":705,"line_end":705,"column_start":12,"column_end":24},"name":"profile_time","qualname":"<Criterion<M>>::profile_time","value":"pub fn profile_time(Self, Option<Duration>) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Set the profile time (currently for testing only)\n","sig":null,"attributes":[{"value":"/ Set the profile time (currently for testing only)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":26448,"byte_end":26501,"line_start":703,"line_end":703,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2789},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":26859,"byte_end":26872,"line_start":716,"line_end":716,"column_start":12,"column_end":25},"name":"final_summary","qualname":"<Criterion<M>>::final_summary","value":"pub fn final_summary(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Generate the final summary at the end of a run.\n","sig":null,"attributes":[{"value":"/ Generate the final summary at the end of a run.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":26777,"byte_end":26828,"line_start":714,"line_end":714,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2790},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":27375,"byte_end":27394,"line_start":732,"line_end":732,"column_start":12,"column_end":31},"name":"configure_from_args","qualname":"<Criterion<M>>::configure_from_args","value":"pub fn configure_from_args(Self) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Configure this criterion struct based on the command-line arguments to\n this process.\n","sig":null,"attributes":[{"value":"/ Configure this criterion struct based on the command-line arguments to","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":27188,"byte_end":27262,"line_start":729,"line_end":729,"column_start":5,"column_end":79}},{"value":"/ this process.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":27267,"byte_end":27284,"line_start":730,"line_end":730,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2808},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":43245,"byte_end":43260,"line_start":1092,"line_end":1092,"column_start":12,"column_end":27},"name":"benchmark_group","qualname":"<Criterion<M>>::benchmark_group","value":"pub fn benchmark_group<S: Into<String>>(&mut Self, S) -> BenchmarkGroup<, M>","parent":null,"children":[],"decl_id":null,"docs":" Return a benchmark group. All benchmarks performed using a benchmark group will be\n grouped together in the final report.","sig":null,"attributes":[{"value":"/ Return a benchmark group. All benchmarks performed using a benchmark group will be","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":42458,"byte_end":42544,"line_start":1069,"line_end":1069,"column_start":5,"column_end":91}},{"value":"/ grouped together in the final report.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":42549,"byte_end":42590,"line_start":1070,"line_end":1070,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":42595,"byte_end":42598,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":42603,"byte_end":42618,"line_start":1072,"line_end":1072,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":42623,"byte_end":42626,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":42631,"byte_end":42642,"line_start":1074,"line_end":1074,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":42647,"byte_end":42687,"line_start":1075,"line_end":1075,"column_start":5,"column_end":45}},{"value":"/ use self::criterion::*;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":42692,"byte_end":42719,"line_start":1076,"line_end":1076,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":42724,"byte_end":42727,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ fn bench_simple(c: &mut Criterion) {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":42732,"byte_end":42772,"line_start":1078,"line_end":1078,"column_start":5,"column_end":45}},{"value":"/     let mut group = c.benchmark_group(\"My Group\");","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":42777,"byte_end":42831,"line_start":1079,"line_end":1079,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":42836,"byte_end":42839,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/     // Now we can perform benchmarks with this group","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":42844,"byte_end":42900,"line_start":1081,"line_end":1081,"column_start":5,"column_end":61}},{"value":"/     group.bench_function(\"Bench 1\", |b| b.iter(|| 1 ));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":42905,"byte_end":42964,"line_start":1082,"line_end":1082,"column_start":5,"column_end":64}},{"value":"/     group.bench_function(\"Bench 2\", |b| b.iter(|| 2 ));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":42969,"byte_end":43028,"line_start":1083,"line_end":1083,"column_start":5,"column_end":64}},{"value":"/    ","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":43033,"byte_end":43040,"line_start":1084,"line_end":1084,"column_start":5,"column_end":12}},{"value":"/     group.finish();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":43045,"byte_end":43068,"line_start":1085,"line_end":1085,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":43073,"byte_end":43078,"line_start":1086,"line_end":1086,"column_start":5,"column_end":10}},{"value":"/ criterion_group!(benches, bench_simple);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":43083,"byte_end":43127,"line_start":1087,"line_end":1087,"column_start":5,"column_end":49}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":43132,"byte_end":43161,"line_start":1088,"line_end":1088,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":43166,"byte_end":43173,"line_start":1089,"line_end":1089,"column_start":5,"column_end":12}},{"value":"/ # Panics:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":43178,"byte_end":43191,"line_start":1090,"line_end":1090,"column_start":5,"column_end":18}},{"value":"/ Panics if the group name is empty","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":43196,"byte_end":43233,"line_start":1091,"line_end":1091,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2812},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":44379,"byte_end":44393,"line_start":1131,"line_end":1131,"column_start":12,"column_end":26},"name":"bench_function","qualname":"<Criterion<M>>::bench_function","value":"pub fn bench_function<F>(&mut Self, &str, F) -> &mut Criterion<M> where\nF: FnMut(&mut Bencher<, M>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Benchmarks a function. For comparing multiple functions, see `benchmark_group`.","sig":null,"attributes":[{"value":"/ Benchmarks a function. For comparing multiple functions, see `benchmark_group`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":43764,"byte_end":43847,"line_start":1110,"line_end":1110,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":43852,"byte_end":43855,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":43860,"byte_end":43873,"line_start":1112,"line_end":1112,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":43878,"byte_end":43881,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":43886,"byte_end":43897,"line_start":1114,"line_end":1114,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":43902,"byte_end":43942,"line_start":1115,"line_end":1115,"column_start":5,"column_end":45}},{"value":"/ use self::criterion::*;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":43947,"byte_end":43974,"line_start":1116,"line_end":1116,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":43979,"byte_end":43982,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":43987,"byte_end":44020,"line_start":1118,"line_end":1118,"column_start":5,"column_end":38}},{"value":"/     // Setup (construct data, allocate memory, etc)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":44025,"byte_end":44080,"line_start":1119,"line_end":1119,"column_start":5,"column_end":60}},{"value":"/     c.bench_function(","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":44085,"byte_end":44110,"line_start":1120,"line_end":1120,"column_start":5,"column_end":30}},{"value":"/         \"function_name\",","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":44115,"byte_end":44143,"line_start":1121,"line_end":1121,"column_start":5,"column_end":33}},{"value":"/         |b| b.iter(|| {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":44148,"byte_end":44175,"line_start":1122,"line_end":1122,"column_start":5,"column_end":32}},{"value":"/             // Code to benchmark goes here","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":44180,"byte_end":44226,"line_start":1123,"line_end":1123,"column_start":5,"column_end":51}},{"value":"/         }),","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":44231,"byte_end":44246,"line_start":1124,"line_end":1124,"column_start":5,"column_end":20}},{"value":"/     );","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":44251,"byte_end":44261,"line_start":1125,"line_end":1125,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":44266,"byte_end":44271,"line_start":1126,"line_end":1126,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":44276,"byte_end":44279,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":44284,"byte_end":44321,"line_start":1128,"line_end":1128,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":44326,"byte_end":44355,"line_start":1129,"line_end":1129,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":44360,"byte_end":44367,"line_start":1130,"line_end":1130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2814},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":45357,"byte_end":45373,"line_start":1163,"line_end":1163,"column_start":12,"column_end":28},"name":"bench_with_input","qualname":"<Criterion<M>>::bench_with_input","value":"pub fn bench_with_input<F, I>(&mut Self, BenchmarkId, &I, F)\n-> &mut Criterion<M> where F: FnMut(&mut Bencher<, M>, &I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Benchmarks a function with an input. For comparing multiple functions or multiple inputs,\n see `benchmark_group`.","sig":null,"attributes":[{"value":"/ Benchmarks a function with an input. For comparing multiple functions or multiple inputs,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":44617,"byte_end":44710,"line_start":1140,"line_end":1140,"column_start":5,"column_end":98}},{"value":"/ see `benchmark_group`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":44715,"byte_end":44741,"line_start":1141,"line_end":1141,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":44746,"byte_end":44749,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":44754,"byte_end":44767,"line_start":1143,"line_end":1143,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":44772,"byte_end":44775,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":44780,"byte_end":44791,"line_start":1145,"line_end":1145,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":44796,"byte_end":44836,"line_start":1146,"line_end":1146,"column_start":5,"column_end":45}},{"value":"/ use self::criterion::*;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":44841,"byte_end":44868,"line_start":1147,"line_end":1147,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":44873,"byte_end":44876,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":44881,"byte_end":44914,"line_start":1149,"line_end":1149,"column_start":5,"column_end":38}},{"value":"/     // Setup (construct data, allocate memory, etc)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":44919,"byte_end":44974,"line_start":1150,"line_end":1150,"column_start":5,"column_end":60}},{"value":"/     let input = 5u64;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":44979,"byte_end":45004,"line_start":1151,"line_end":1151,"column_start":5,"column_end":30}},{"value":"/     c.bench_with_input(","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":45009,"byte_end":45036,"line_start":1152,"line_end":1152,"column_start":5,"column_end":32}},{"value":"/         BenchmarkId::new(\"function_name\", input), &input,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":45041,"byte_end":45102,"line_start":1153,"line_end":1153,"column_start":5,"column_end":66}},{"value":"/         |b, i| b.iter(|| {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":45107,"byte_end":45137,"line_start":1154,"line_end":1154,"column_start":5,"column_end":35}},{"value":"/             // Code to benchmark using input `i` goes here","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":45142,"byte_end":45204,"line_start":1155,"line_end":1155,"column_start":5,"column_end":67}},{"value":"/         }),","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":45209,"byte_end":45224,"line_start":1156,"line_end":1156,"column_start":5,"column_end":20}},{"value":"/     );","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":45229,"byte_end":45239,"line_start":1157,"line_end":1157,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":45244,"byte_end":45249,"line_start":1158,"line_end":1158,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":45254,"byte_end":45257,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":45262,"byte_end":45299,"line_start":1160,"line_end":1160,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":45304,"byte_end":45333,"line_start":1161,"line_end":1161,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":45338,"byte_end":45345,"line_start":1162,"line_end":1162,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2817},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":47138,"byte_end":47164,"line_start":1210,"line_end":1210,"column_start":12,"column_end":38},"name":"bench_function_over_inputs","qualname":"<Criterion<M>>::bench_function_over_inputs","value":"pub fn bench_function_over_inputs<I, F>(&mut Self, &str, F, I)\n-> &mut Criterion<M> where I: IntoIterator, I::Item: fmt::Debug + 'static,\nF: FnMut(&mut Bencher<, M>, &I::Item) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Benchmarks a function under various inputs","sig":null,"attributes":[{"value":"/ Benchmarks a function under various inputs","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":46300,"byte_end":46346,"line_start":1184,"line_end":1184,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":46351,"byte_end":46354,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method to execute several related benchmarks. Each benchmark will","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":46359,"byte_end":46450,"line_start":1186,"line_end":1186,"column_start":5,"column_end":96}},{"value":"/ receive the id: `${id}/${input}`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":46455,"byte_end":46492,"line_start":1187,"line_end":1187,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":46497,"byte_end":46500,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":46505,"byte_end":46518,"line_start":1189,"line_end":1189,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":46523,"byte_end":46526,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":46531,"byte_end":46542,"line_start":1191,"line_end":1191,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate criterion;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":46547,"byte_end":46589,"line_start":1192,"line_end":1192,"column_start":5,"column_end":47}},{"value":"/ # use self::criterion::*;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":46594,"byte_end":46623,"line_start":1193,"line_end":1193,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":46628,"byte_end":46631,"line_start":1194,"line_end":1194,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":46636,"byte_end":46669,"line_start":1195,"line_end":1195,"column_start":5,"column_end":38}},{"value":"/     c.bench_function_over_inputs(\"from_elem\",","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":46674,"byte_end":46723,"line_start":1196,"line_end":1196,"column_start":5,"column_end":54}},{"value":"/         |b: &mut Bencher, size: &usize| {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":46728,"byte_end":46773,"line_start":1197,"line_end":1197,"column_start":5,"column_end":50}},{"value":"/             b.iter(|| vec![0u8; *size]);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":46778,"byte_end":46822,"line_start":1198,"line_end":1198,"column_start":5,"column_end":49}},{"value":"/         },","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":46827,"byte_end":46841,"line_start":1199,"line_end":1199,"column_start":5,"column_end":19}},{"value":"/         vec![1024, 2048, 4096]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":46846,"byte_end":46880,"line_start":1200,"line_end":1200,"column_start":5,"column_end":39}},{"value":"/     );","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":46885,"byte_end":46895,"line_start":1201,"line_end":1201,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":46900,"byte_end":46905,"line_start":1202,"line_end":1202,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":46910,"byte_end":46913,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":46918,"byte_end":46955,"line_start":1204,"line_end":1204,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":46960,"byte_end":46989,"line_start":1205,"line_end":1205,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":46994,"byte_end":47001,"line_start":1206,"line_end":1206,"column_start":5,"column_end":12}},{"value":"deprecated(since = \"0.3.4\", note = \"Please use BenchmarkGroups instead.\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":47025,"byte_end":47101,"line_start":1208,"line_end":1208,"column_start":5,"column_end":81}},{"value":"allow(deprecated)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":47106,"byte_end":47126,"line_start":1209,"line_end":1209,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2820},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":48715,"byte_end":48730,"line_start":1263,"line_end":1263,"column_start":12,"column_end":27},"name":"bench_functions","qualname":"<Criterion<M>>::bench_functions","value":"pub fn bench_functions<I>(&mut Self, &str, Vec<Fun<I, M>>, I)\n-> &mut Criterion<M> where I: fmt::Debug + 'static","parent":null,"children":[],"decl_id":null,"docs":" Benchmarks multiple functions","sig":null,"attributes":[{"value":"/ Benchmarks multiple functions","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":47486,"byte_end":47519,"line_start":1224,"line_end":1224,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":47524,"byte_end":47527,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ All functions get the same input and are compared with the other implementations.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":47532,"byte_end":47617,"line_start":1226,"line_end":1226,"column_start":5,"column_end":90}},{"value":"/ Works similar to `bench_function`, but with multiple functions.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":47622,"byte_end":47689,"line_start":1227,"line_end":1227,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":47694,"byte_end":47697,"line_start":1228,"line_end":1228,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":47702,"byte_end":47715,"line_start":1229,"line_end":1229,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":47720,"byte_end":47723,"line_start":1230,"line_end":1230,"column_start":5,"column_end":8}},{"value":"/ ``` rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":47728,"byte_end":47740,"line_start":1231,"line_end":1231,"column_start":5,"column_end":17}},{"value":"/ # #[macro_use] extern crate criterion;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":47745,"byte_end":47787,"line_start":1232,"line_end":1232,"column_start":5,"column_end":47}},{"value":"/ # use self::criterion::*;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":47792,"byte_end":47821,"line_start":1233,"line_end":1233,"column_start":5,"column_end":34}},{"value":"/ # fn seq_fib(i: &u32) {}","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":47826,"byte_end":47854,"line_start":1234,"line_end":1234,"column_start":5,"column_end":33}},{"value":"/ # fn par_fib(i: &u32) {}","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":47859,"byte_end":47887,"line_start":1235,"line_end":1235,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":47892,"byte_end":47895,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ fn bench_seq_fib(b: &mut Bencher, i: &u32) {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":47900,"byte_end":47948,"line_start":1237,"line_end":1237,"column_start":5,"column_end":53}},{"value":"/     b.iter(|| {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":47953,"byte_end":47972,"line_start":1238,"line_end":1238,"column_start":5,"column_end":24}},{"value":"/         seq_fib(i);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":47977,"byte_end":48000,"line_start":1239,"line_end":1239,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":48005,"byte_end":48016,"line_start":1240,"line_end":1240,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":48021,"byte_end":48026,"line_start":1241,"line_end":1241,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":48031,"byte_end":48034,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ fn bench_par_fib(b: &mut Bencher, i: &u32) {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":48039,"byte_end":48087,"line_start":1243,"line_end":1243,"column_start":5,"column_end":53}},{"value":"/     b.iter(|| {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":48092,"byte_end":48111,"line_start":1244,"line_end":1244,"column_start":5,"column_end":24}},{"value":"/         par_fib(i);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":48116,"byte_end":48139,"line_start":1245,"line_end":1245,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":48144,"byte_end":48155,"line_start":1246,"line_end":1246,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":48160,"byte_end":48165,"line_start":1247,"line_end":1247,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":48170,"byte_end":48173,"line_start":1248,"line_end":1248,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":48178,"byte_end":48211,"line_start":1249,"line_end":1249,"column_start":5,"column_end":38}},{"value":"/     let sequential_fib = Fun::new(\"Sequential\", bench_seq_fib);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":48216,"byte_end":48283,"line_start":1250,"line_end":1250,"column_start":5,"column_end":72}},{"value":"/     let parallel_fib = Fun::new(\"Parallel\", bench_par_fib);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":48288,"byte_end":48351,"line_start":1251,"line_end":1251,"column_start":5,"column_end":68}},{"value":"/     let funs = vec![sequential_fib, parallel_fib];","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":48356,"byte_end":48410,"line_start":1252,"line_end":1252,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":48415,"byte_end":48418,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/     c.bench_functions(\"Fibonacci\", funs, 14);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":48423,"byte_end":48472,"line_start":1254,"line_end":1254,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":48477,"byte_end":48482,"line_start":1255,"line_end":1255,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":48487,"byte_end":48490,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":48495,"byte_end":48532,"line_start":1257,"line_end":1257,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":48537,"byte_end":48566,"line_start":1258,"line_end":1258,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":48571,"byte_end":48578,"line_start":1259,"line_end":1259,"column_start":5,"column_end":12}},{"value":"deprecated(since = \"0.3.4\", note = \"Please use BenchmarkGroups instead.\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":48602,"byte_end":48678,"line_start":1261,"line_end":1261,"column_start":5,"column_end":81}},{"value":"allow(deprecated)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":48683,"byte_end":48703,"line_start":1262,"line_end":1262,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2823},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":50146,"byte_end":50151,"line_start":1307,"line_end":1307,"column_start":12,"column_end":17},"name":"bench","qualname":"<Criterion<M>>::bench","value":"pub fn bench<B: BenchmarkDefinition<M>>(&mut Self, &str, B)\n-> &mut Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Executes the given benchmark. Use this variant to execute benchmarks\n with complex configuration. This can be used to compare multiple\n functions, execute benchmarks with custom configuration settings and\n more. See the Benchmark and ParameterizedBenchmark structs for more\n information.","sig":null,"attributes":[{"value":"/ Executes the given benchmark. Use this variant to execute benchmarks","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":49099,"byte_end":49171,"line_start":1280,"line_end":1280,"column_start":5,"column_end":77}},{"value":"/ with complex configuration. This can be used to compare multiple","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":49176,"byte_end":49244,"line_start":1281,"line_end":1281,"column_start":5,"column_end":73}},{"value":"/ functions, execute benchmarks with custom configuration settings and","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":49249,"byte_end":49321,"line_start":1282,"line_end":1282,"column_start":5,"column_end":77}},{"value":"/ more. See the Benchmark and ParameterizedBenchmark structs for more","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":49326,"byte_end":49397,"line_start":1283,"line_end":1283,"column_start":5,"column_end":76}},{"value":"/ information.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":49402,"byte_end":49418,"line_start":1284,"line_end":1284,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":49423,"byte_end":49426,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":49431,"byte_end":49442,"line_start":1286,"line_end":1286,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate criterion;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":49447,"byte_end":49489,"line_start":1287,"line_end":1287,"column_start":5,"column_end":47}},{"value":"/ # use criterion::*;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":49494,"byte_end":49517,"line_start":1288,"line_end":1288,"column_start":5,"column_end":28}},{"value":"/ # fn routine_1() {}","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":49522,"byte_end":49545,"line_start":1289,"line_end":1289,"column_start":5,"column_end":28}},{"value":"/ # fn routine_2() {}","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":49550,"byte_end":49573,"line_start":1290,"line_end":1290,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":49578,"byte_end":49581,"line_start":1291,"line_end":1291,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":49586,"byte_end":49619,"line_start":1292,"line_end":1292,"column_start":5,"column_end":38}},{"value":"/     // Setup (construct data, allocate memory, etc)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":49624,"byte_end":49679,"line_start":1293,"line_end":1293,"column_start":5,"column_end":60}},{"value":"/     c.bench(","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":49684,"byte_end":49700,"line_start":1294,"line_end":1294,"column_start":5,"column_end":21}},{"value":"/         \"routines\",","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":49705,"byte_end":49728,"line_start":1295,"line_end":1295,"column_start":5,"column_end":28}},{"value":"/         Benchmark::new(\"routine_1\", |b| b.iter(|| routine_1()))","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":49733,"byte_end":49800,"line_start":1296,"line_end":1296,"column_start":5,"column_end":72}},{"value":"/             .with_function(\"routine_2\", |b| b.iter(|| routine_2()))","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":49805,"byte_end":49876,"line_start":1297,"line_end":1297,"column_start":5,"column_end":76}},{"value":"/             .sample_size(50)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":49881,"byte_end":49913,"line_start":1298,"line_end":1298,"column_start":5,"column_end":37}},{"value":"/     );","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":49918,"byte_end":49928,"line_start":1299,"line_end":1299,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":49933,"byte_end":49938,"line_start":1300,"line_end":1300,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":49943,"byte_end":49946,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":49951,"byte_end":49988,"line_start":1302,"line_end":1302,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":49993,"byte_end":50022,"line_start":1303,"line_end":1303,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":50027,"byte_end":50034,"line_start":1304,"line_end":1304,"column_start":5,"column_end":12}},{"value":"deprecated(since = \"0.3.4\", note = \"Please use BenchmarkGroups instead.\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":50058,"byte_end":50134,"line_start":1306,"line_end":1306,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4171},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":51181,"byte_end":51186,"line_start":1338,"line_end":1338,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::Throughput::Bytes","value":"Throughput::Bytes(u64)","parent":{"krate":0,"index":4170},"children":[],"decl_id":null,"docs":" Measure throughput in terms of bytes/second. The value should be the number of bytes\n processed by one iteration of the benchmarked code. Typically, this would be the length of\n an input string or `&[u8]`.\n","sig":null,"attributes":[{"value":"/ Measure throughput in terms of bytes/second. The value should be the number of bytes","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":50953,"byte_end":51041,"line_start":1335,"line_end":1335,"column_start":5,"column_end":93}},{"value":"/ processed by one iteration of the benchmarked code. Typically, this would be the length of","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":51046,"byte_end":51140,"line_start":1336,"line_end":1336,"column_start":5,"column_end":99}},{"value":"/ an input string or `&[u8]`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":51145,"byte_end":51176,"line_start":1337,"line_end":1337,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4174},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":51510,"byte_end":51518,"line_start":1344,"line_end":1344,"column_start":5,"column_end":13},"name":"Elements","qualname":"::Throughput::Elements","value":"Throughput::Elements(u64)","parent":{"krate":0,"index":4170},"children":[],"decl_id":null,"docs":" Measure throughput in terms of elements/second. The value should be the number of elements\n processed by one iteration of the benchmarked code. Typically, this would be the size of a\n collection, but could also be the number of lines of input text or the number of values to\n parse.\n","sig":null,"attributes":[{"value":"/ Measure throughput in terms of elements/second. The value should be the number of elements","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":51198,"byte_end":51292,"line_start":1340,"line_end":1340,"column_start":5,"column_end":99}},{"value":"/ processed by one iteration of the benchmarked code. Typically, this would be the size of a","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":51297,"byte_end":51391,"line_start":1341,"line_end":1341,"column_start":5,"column_end":99}},{"value":"/ collection, but could also be the number of lines of input text or the number of values to","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":51396,"byte_end":51490,"line_start":1342,"line_end":1342,"column_start":5,"column_end":99}},{"value":"/ parse.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":51495,"byte_end":51505,"line_start":1343,"line_end":1343,"column_start":5,"column_end":15}}]},{"kind":"Enum","id":{"krate":0,"index":4170},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":50936,"byte_end":50946,"line_start":1334,"line_end":1334,"column_start":10,"column_end":20},"name":"Throughput","qualname":"::Throughput","value":"pub enum Throughput { Bytes(u64), Elements(u64), }","parent":null,"children":[{"krate":0,"index":4171},{"krate":0,"index":4174}],"decl_id":null,"docs":" Enum representing different ways of measuring the throughput of benchmarked code.\n If the throughput setting is configured for a benchmark then the estimated throughput will\n be reported as well as the time per iteration.\n","sig":null,"attributes":[{"value":"/ Enum representing different ways of measuring the throughput of benchmarked code.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":50577,"byte_end":50662,"line_start":1329,"line_end":1329,"column_start":1,"column_end":86}},{"value":"/ If the throughput setting is configured for a benchmark then the estimated throughput will","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":50663,"byte_end":50757,"line_start":1330,"line_end":1330,"column_start":1,"column_end":95}},{"value":"/ be reported as well as the time per iteration.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":50758,"byte_end":50808,"line_start":1331,"line_end":1331,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4231},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":51633,"byte_end":51639,"line_start":1351,"line_end":1351,"column_start":5,"column_end":11},"name":"Linear","qualname":"::AxisScale::Linear","value":"AxisScale::Linear","parent":{"krate":0,"index":4230},"children":[],"decl_id":null,"docs":" Axes scale linearly\n","sig":null,"attributes":[{"value":"/ Axes scale linearly","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":51605,"byte_end":51628,"line_start":1350,"line_end":1350,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4233},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":51681,"byte_end":51692,"line_start":1354,"line_end":1354,"column_start":5,"column_end":16},"name":"Logarithmic","qualname":"::AxisScale::Logarithmic","value":"AxisScale::Logarithmic","parent":{"krate":0,"index":4230},"children":[],"decl_id":null,"docs":" Axes scale logarithmically\n","sig":null,"attributes":[{"value":"/ Axes scale logarithmically","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":51646,"byte_end":51676,"line_start":1353,"line_end":1353,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":4230},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":51589,"byte_end":51598,"line_start":1349,"line_end":1349,"column_start":10,"column_end":19},"name":"AxisScale","qualname":"::AxisScale","value":"pub enum AxisScale { Linear, Logarithmic, }","parent":null,"children":[{"krate":0,"index":4231},{"krate":0,"index":4233}],"decl_id":null,"docs":" Axis scaling type\n","sig":null,"attributes":[{"value":"/ Axis scaling type","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":51528,"byte_end":51549,"line_start":1347,"line_end":1347,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":4240},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":52335,"byte_end":52352,"line_start":1373,"line_end":1373,"column_start":12,"column_end":29},"name":"PlotConfiguration","qualname":"::PlotConfiguration","value":"PlotConfiguration {  }","parent":null,"children":[{"krate":0,"index":4241}],"decl_id":null,"docs":" Contains the configuration options for the plots generated by a particular benchmark\n or benchmark group.","sig":null,"attributes":[{"value":"/ Contains the configuration options for the plots generated by a particular benchmark","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":51697,"byte_end":51785,"line_start":1357,"line_end":1357,"column_start":1,"column_end":89}},{"value":"/ or benchmark group.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":51786,"byte_end":51809,"line_start":1358,"line_end":1358,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":51810,"byte_end":51813,"line_start":1359,"line_end":1359,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":51814,"byte_end":51825,"line_start":1360,"line_end":1360,"column_start":1,"column_end":12}},{"value":"/ use self::criterion::{Bencher, Criterion, Benchmark, PlotConfiguration, AxisScale};","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":51826,"byte_end":51913,"line_start":1361,"line_end":1361,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":51914,"byte_end":51917,"line_start":1362,"line_end":1362,"column_start":1,"column_end":4}},{"value":"/ let plot_config = PlotConfiguration::default()","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":51918,"byte_end":51968,"line_start":1363,"line_end":1363,"column_start":1,"column_end":51}},{"value":"/     .summary_scale(AxisScale::Logarithmic);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":51969,"byte_end":52016,"line_start":1364,"line_end":1364,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":52017,"byte_end":52020,"line_start":1365,"line_end":1365,"column_start":1,"column_end":4}},{"value":"/ // Using Criterion::default() for simplicity; normally you'd use the macros.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":52021,"byte_end":52101,"line_start":1366,"line_end":1366,"column_start":1,"column_end":81}},{"value":"/ let mut criterion = Criterion::default();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":52102,"byte_end":52147,"line_start":1367,"line_end":1367,"column_start":1,"column_end":46}},{"value":"/ let mut benchmark_group = criterion.benchmark_group(\"Group name\");","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":52148,"byte_end":52218,"line_start":1368,"line_end":1368,"column_start":1,"column_end":71}},{"value":"/ benchmark_group.plot_config(plot_config);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":52219,"byte_end":52264,"line_start":1369,"line_end":1369,"column_start":1,"column_end":46}},{"value":"/ // Use benchmark group","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":52265,"byte_end":52291,"line_start":1370,"line_end":1370,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":52292,"byte_end":52299,"line_start":1371,"line_end":1371,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2833},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":52815,"byte_end":52828,"line_start":1389,"line_end":1389,"column_start":12,"column_end":25},"name":"summary_scale","qualname":"<PlotConfiguration>::summary_scale","value":"pub fn summary_scale(Self, AxisScale) -> PlotConfiguration","parent":null,"children":[],"decl_id":null,"docs":" Set the axis scale (linear or logarithmic) for the summary plots. Typically, you would\n set this to logarithmic if benchmarking over a range of inputs which scale exponentially.\n Defaults to linear.\n","sig":null,"attributes":[{"value":"/ Set the axis scale (linear or logarithmic) for the summary plots. Typically, you would","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":52587,"byte_end":52677,"line_start":1386,"line_end":1386,"column_start":5,"column_end":95}},{"value":"/ set this to logarithmic if benchmarking over a range of inputs which scale exponentially.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":52682,"byte_end":52775,"line_start":1387,"line_end":1387,"column_start":5,"column_end":98}},{"value":"/ Defaults to linear.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":52780,"byte_end":52803,"line_start":1388,"line_end":1388,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4247},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":53381,"byte_end":53385,"line_start":1402,"line_end":1402,"column_start":5,"column_end":9},"name":"Auto","qualname":"::SamplingMode::Auto","value":"SamplingMode::Auto","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":" Criterion.rs should choose a sampling method automatically. This is the default, and is\n recommended for most users and most benchmarks.\n","sig":null,"attributes":[{"value":"/ Criterion.rs should choose a sampling method automatically. This is the default, and is","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":53229,"byte_end":53320,"line_start":1400,"line_end":1400,"column_start":5,"column_end":96}},{"value":"/ recommended for most users and most benchmarks.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":53325,"byte_end":53376,"line_start":1401,"line_end":1401,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4249},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":53591,"byte_end":53597,"line_start":1406,"line_end":1406,"column_start":5,"column_end":11},"name":"Linear","qualname":"::SamplingMode::Linear","value":"SamplingMode::Linear","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":" Scale the iteration count in each sample linearly. This is suitable for most benchmarks,\n but it tends to require many iterations which can make it very slow for very long benchmarks.\n","sig":null,"attributes":[{"value":"/ Scale the iteration count in each sample linearly. This is suitable for most benchmarks,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":53392,"byte_end":53484,"line_start":1404,"line_end":1404,"column_start":5,"column_end":97}},{"value":"/ but it tends to require many iterations which can make it very slow for very long benchmarks.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":53489,"byte_end":53586,"line_start":1405,"line_end":1405,"column_start":5,"column_end":102}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4251},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":53994,"byte_end":53998,"line_start":1412,"line_end":1412,"column_start":5,"column_end":9},"name":"Flat","qualname":"::SamplingMode::Flat","value":"SamplingMode::Flat","parent":{"krate":0,"index":4246},"children":[],"decl_id":null,"docs":" Keep the iteration count the same for all samples. This is not recommended, as it affects\n the statistics that Criterion.rs can compute. However, it requires fewer iterations than\n the Linear method and therefore is more suitable for very long-running benchmarks where\n benchmark execution time is more of a problem and statistical precision is less important.\n","sig":null,"attributes":[{"value":"/ Keep the iteration count the same for all samples. This is not recommended, as it affects","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":53604,"byte_end":53697,"line_start":1408,"line_end":1408,"column_start":5,"column_end":98}},{"value":"/ the statistics that Criterion.rs can compute. However, it requires fewer iterations than","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":53702,"byte_end":53794,"line_start":1409,"line_end":1409,"column_start":5,"column_end":97}},{"value":"/ the Linear method and therefore is more suitable for very long-running benchmarks where","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":53799,"byte_end":53890,"line_start":1410,"line_end":1410,"column_start":5,"column_end":96}},{"value":"/ benchmark execution time is more of a problem and statistical precision is less important.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":53895,"byte_end":53989,"line_start":1411,"line_end":1411,"column_start":5,"column_end":99}}]},{"kind":"Enum","id":{"krate":0,"index":4246},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":53210,"byte_end":53222,"line_start":1399,"line_end":1399,"column_start":10,"column_end":22},"name":"SamplingMode","qualname":"::SamplingMode","value":"pub enum SamplingMode { Auto, Linear, Flat, }","parent":null,"children":[{"krate":0,"index":4247},{"krate":0,"index":4249},{"krate":0,"index":4251}],"decl_id":null,"docs":" This enum allows the user to control how Criterion.rs chooses the iteration count when sampling.\n The default is Auto, which will choose a method automatically based on the iteration time during\n the warm-up phase.\n","sig":null,"attributes":[{"value":"/ This enum allows the user to control how Criterion.rs chooses the iteration count when sampling.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":52946,"byte_end":53046,"line_start":1395,"line_end":1395,"column_start":1,"column_end":101}},{"value":"/ The default is Auto, which will choose a method automatically based on the iteration time during","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":53047,"byte_end":53147,"line_start":1396,"line_end":1396,"column_start":1,"column_end":101}},{"value":"/ the warm-up phase.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":53148,"byte_end":53170,"line_start":1397,"line_end":1397,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":2842},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":60033,"byte_end":60039,"line_start":1563,"line_end":1563,"column_start":8,"column_end":14},"name":"runner","qualname":"::runner","value":"pub fn runner(&[&dyn Fn() -> ()])","parent":null,"children":[],"decl_id":null,"docs":" Custom-test-framework runner. Should not be called directly.\n","sig":null,"attributes":[{"value":"/ Custom-test-framework runner. Should not be called directly.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":59946,"byte_end":60010,"line_start":1561,"line_end":1561,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":2843},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":60313,"byte_end":60346,"line_start":1573,"line_end":1573,"column_start":8,"column_end":41},"name":"__warn_about_html_reports_feature","qualname":"::__warn_about_html_reports_feature","value":"pub fn __warn_about_html_reports_feature()","parent":null,"children":[],"decl_id":null,"docs":" Print a warning informing users about upcoming changes to features\n","sig":null,"attributes":[{"value":"/ Print a warning informing users about upcoming changes to features","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":60182,"byte_end":60252,"line_start":1570,"line_end":1570,"column_start":1,"column_end":71}},{"value":"cfg(not(feature = \"html_reports\"))","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":60253,"byte_end":60290,"line_start":1571,"line_end":1571,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":2844},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":62102,"byte_end":62142,"line_start":1616,"line_end":1616,"column_start":8,"column_end":48},"name":"__warn_about_cargo_bench_support_feature","qualname":"::__warn_about_cargo_bench_support_feature","value":"pub fn __warn_about_cargo_bench_support_feature()","parent":null,"children":[],"decl_id":null,"docs":" Print a warning informing users about upcoming changes to features\n","sig":null,"attributes":[{"value":"/ Print a warning informing users about upcoming changes to features","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":61969,"byte_end":62039,"line_start":1613,"line_end":1613,"column_start":1,"column_end":71}},{"value":"cfg(feature = \"cargo_bench_support\")","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":62040,"byte_end":62079,"line_start":1614,"line_end":1614,"column_start":1,"column_end":40}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":80811,"byte_end":80833,"line_start":42,"line_end":42,"column_start":18,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":81246,"byte_end":81268,"line_start":58,"line_end":58,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":89337,"byte_end":89346,"line_start":254,"line_end":254,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2877},{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2880},{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":2883},{"krate":0,"index":2884},{"krate":0,"index":2885},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":91031,"byte_end":91040,"line_start":316,"line_end":316,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":93211,"byte_end":93233,"line_start":387,"line_end":387,"column_start":12,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2886},{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2889},{"krate":0,"index":2890},{"krate":0,"index":2891},{"krate":0,"index":2892},{"krate":0,"index":2893},{"krate":0,"index":2894},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":287},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":95787,"byte_end":95809,"line_start":473,"line_end":473,"column_start":39,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":103628,"byte_end":103642,"line_start":86,"line_end":86,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":381},{"krate":0,"index":385},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":114159,"byte_end":114173,"line_start":368,"line_end":368,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":115555,"byte_end":115566,"line_start":407,"line_end":407,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":118076,"byte_end":118087,"line_start":473,"line_end":473,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":118128,"byte_end":118129,"line_start":474,"line_end":474,"column_start":38,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":118342,"byte_end":118353,"line_start":481,"line_end":481,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":118467,"byte_end":118468,"line_start":486,"line_end":486,"column_start":43,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":123368,"byte_end":123375,"line_start":42,"line_end":42,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":466},{"krate":0,"index":471},{"krate":0,"index":476},{"krate":0,"index":482},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/connection.rs","byte_start":148495,"byte_end":148507,"line_start":14,"line_end":14,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/connection.rs","byte_start":148644,"byte_end":148656,"line_start":19,"line_end":19,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/connection.rs","byte_start":148776,"byte_end":148788,"line_start":24,"line_end":24,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/connection.rs","byte_start":149332,"byte_end":149344,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/connection.rs","byte_start":150302,"byte_end":150317,"line_start":69,"line_end":69,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/connection.rs","byte_start":152803,"byte_end":152813,"line_start":133,"line_end":133,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/connection.rs","byte_start":157110,"byte_end":157124,"line_start":282,"line_end":282,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/connection.rs","byte_start":157558,"byte_end":157567,"line_start":298,"line_end":298,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/connection.rs","byte_start":157918,"byte_end":157935,"line_start":311,"line_end":311,"column_start":42,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/connection.rs","byte_start":158210,"byte_end":158218,"line_start":324,"line_end":324,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/connection.rs","byte_start":158683,"byte_end":158698,"line_start":343,"line_end":343,"column_start":51,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/connection.rs","byte_start":159406,"byte_end":159420,"line_start":363,"line_end":363,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/csv_report.rs","byte_start":160609,"byte_end":160624,"line_start":24,"line_end":24,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/csv_report.rs","byte_start":161945,"byte_end":161958,"line_start":61,"line_end":61,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/csv_report.rs","byte_start":162345,"byte_end":162358,"line_start":76,"line_end":76,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/error.rs","byte_start":163307,"byte_end":163312,"line_start":26,"line_end":26,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/error.rs","byte_start":164001,"byte_end":164006,"line_start":44,"line_end":44,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":619},{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/error.rs","byte_start":164632,"byte_end":164637,"line_start":63,"line_end":63,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/estimate.rs","byte_start":165099,"byte_end":165108,"line_start":15,"line_end":15,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/estimate.rs","byte_start":167941,"byte_end":167950,"line_start":113,"line_end":113,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/estimate.rs","byte_start":168707,"byte_end":168720,"line_start":136,"line_end":136,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/estimate.rs","byte_start":169483,"byte_end":169498,"line_start":162,"line_end":162,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/estimate.rs","byte_start":169842,"byte_end":169861,"line_start":176,"line_end":176,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/html/mod.rs","byte_start":176950,"byte_end":176969,"line_start":59,"line_end":59,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/html/mod.rs","byte_start":177962,"byte_end":177966,"line_start":103,"line_end":103,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/html/mod.rs","byte_start":178766,"byte_end":178776,"line_start":137,"line_end":137,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/html/mod.rs","byte_start":180447,"byte_end":180461,"line_start":192,"line_end":192,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/html/mod.rs","byte_start":183237,"byte_end":183241,"line_start":275,"line_end":275,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/html/mod.rs","byte_start":184094,"byte_end":184098,"line_start":295,"line_end":295,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":850},{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/html/mod.rs","byte_start":193686,"byte_end":193690,"line_start":566,"line_end":566,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":213927,"byte_end":213944,"line_start":107,"line_end":107,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":944},{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":215333,"byte_end":215350,"line_start":148,"line_end":148,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":216589,"byte_end":216597,"line_start":190,"line_end":190,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/plot/gnuplot_backend/summary.rs","byte_start":264721,"byte_end":264730,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/plot/gnuplot_backend/mod.rs","byte_start":221610,"byte_end":221613,"line_start":62,"line_end":62,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1387}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/plot/gnuplot_backend/mod.rs","byte_start":221809,"byte_end":221816,"line_start":74,"line_end":74,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1389},{"krate":0,"index":1391},{"krate":0,"index":1393},{"krate":0,"index":1395},{"krate":0,"index":1397},{"krate":0,"index":1399},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/plot/plotters_backend/mod.rs","byte_start":273763,"byte_end":273778,"line_start":37,"line_end":37,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681},{"krate":0,"index":1682},{"krate":0,"index":1683}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/plot/mod.rs","byte_start":218000,"byte_end":218011,"line_start":30,"line_end":30,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/plot/mod.rs","byte_start":219026,"byte_end":219034,"line_start":67,"line_end":67,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1727}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/profiler.rs","byte_start":323406,"byte_end":323422,"line_start":25,"line_end":25,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1748},{"krate":0,"index":1749}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/report.rs","byte_start":325000,"byte_end":325015,"line_start":44,"line_end":44,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1852},{"krate":0,"index":1853}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/report.rs","byte_start":326873,"byte_end":326884,"line_start":108,"line_end":108,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1860},{"krate":0,"index":1861},{"krate":0,"index":1863},{"krate":0,"index":1866},{"krate":0,"index":1867}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/report.rs","byte_start":330478,"byte_end":330489,"line_start":225,"line_end":225,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1869}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/report.rs","byte_start":330620,"byte_end":330631,"line_start":230,"line_end":230,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1871}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/report.rs","byte_start":331308,"byte_end":331321,"line_start":254,"line_end":254,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1877}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/report.rs","byte_start":333674,"byte_end":333681,"line_start":330,"line_end":330,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3956},{"krate":0,"index":3957},{"krate":0,"index":3958},{"krate":0,"index":3959},{"krate":0,"index":3960},{"krate":0,"index":3961},{"krate":0,"index":3962},{"krate":0,"index":3963},{"krate":0,"index":3964},{"krate":0,"index":3965},{"krate":0,"index":3966},{"krate":0,"index":3967}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/report.rs","byte_start":335164,"byte_end":335173,"line_start":373,"line_end":373,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1909},{"krate":0,"index":1910},{"krate":0,"index":1911},{"krate":0,"index":1912},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1916},{"krate":0,"index":1917}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/report.rs","byte_start":337876,"byte_end":337885,"line_start":483,"line_end":483,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1926},{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1932}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/report.rs","byte_start":347038,"byte_end":347051,"line_start":731,"line_end":731,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1938}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/routine.rs","byte_start":356492,"byte_end":356500,"line_start":175,"line_end":175,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2007}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/routine.rs","byte_start":356785,"byte_end":356793,"line_start":189,"line_end":189,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2012},{"krate":0,"index":2014}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/bivariate/regression.rs","byte_start":368133,"byte_end":368138,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2027},{"krate":0,"index":2028}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/bivariate/resamples.rs","byte_start":369541,"byte_end":369550,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2054},{"krate":0,"index":2055}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/bivariate/mod.rs","byte_start":361290,"byte_end":361294,"line_start":21,"line_end":21,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/bivariate/mod.rs","byte_start":361412,"byte_end":361416,"line_start":24,"line_end":24,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2094}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/bivariate/mod.rs","byte_start":361507,"byte_end":361511,"line_start":30,"line_end":30,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2099},{"krate":0,"index":2100}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/bivariate/mod.rs","byte_start":361803,"byte_end":361807,"line_start":45,"line_end":45,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2105},{"krate":0,"index":2106},{"krate":0,"index":2115},{"krate":0,"index":2116}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/bivariate/mod.rs","byte_start":363678,"byte_end":363683,"line_start":115,"line_end":115,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2127},{"krate":0,"index":2128}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/percentiles.rs","byte_start":386311,"byte_end":386322,"line_start":10,"line_end":10,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2241}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/resamples.rs","byte_start":388509,"byte_end":388518,"line_start":17,"line_end":17,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2268},{"krate":0,"index":2269}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":392037,"byte_end":392043,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2301},{"krate":0,"index":2302},{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2308},{"krate":0,"index":2309},{"krate":0,"index":2311},{"krate":0,"index":2317},{"krate":0,"index":2318},{"krate":0,"index":2319},{"krate":0,"index":2320},{"krate":0,"index":2321},{"krate":0,"index":2327}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":398847,"byte_end":398853,"line_start":249,"line_end":249,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2338},{"krate":0,"index":2339}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/kde/kernel.rs","byte_start":403181,"byte_end":403189,"line_start":18,"line_end":18,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2350}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/kde/mod.rs","byte_start":399289,"byte_end":399292,"line_start":21,"line_end":21,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2375},{"krate":0,"index":2376},{"krate":0,"index":2377},{"krate":0,"index":2379}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/kde/mod.rs","byte_start":400582,"byte_end":400591,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2385}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":408987,"byte_end":409000,"line_start":66,"line_end":66,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2442}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":410198,"byte_end":410211,"line_start":114,"line_end":114,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2446},{"krate":0,"index":2447}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":410399,"byte_end":410412,"line_start":126,"line_end":126,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2451},{"krate":0,"index":2452}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":411543,"byte_end":411547,"line_start":178,"line_end":178,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2473},{"krate":0,"index":2474},{"krate":0,"index":2476}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":412615,"byte_end":412620,"line_start":224,"line_end":224,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":2491},{"krate":0,"index":2492},{"krate":0,"index":2493}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/mod.rs","byte_start":358781,"byte_end":358793,"line_start":28,"line_end":28,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2569},{"krate":0,"index":2570},{"krate":0,"index":2571}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/mod.rs","byte_start":360209,"byte_end":360221,"line_start":78,"line_end":78,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2578},{"krate":0,"index":2579}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":5831,"byte_end":5834,"line_start":189,"line_end":189,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2736}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":10453,"byte_end":10462,"line_start":277,"line_end":277,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2739}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":12137,"byte_end":12152,"line_start":317,"line_end":317,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2741}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":12812,"byte_end":12816,"line_start":338,"line_end":338,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2743}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":14643,"byte_end":14652,"line_start":394,"line_end":394,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2762}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":16944,"byte_end":16953,"line_start":456,"line_end":456,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2766},{"krate":0,"index":2768},{"krate":0,"index":2770},{"krate":0,"index":2771},{"krate":0,"index":2772},{"krate":0,"index":2773},{"krate":0,"index":2774},{"krate":0,"index":2775},{"krate":0,"index":2776},{"krate":0,"index":2777},{"krate":0,"index":2778},{"krate":0,"index":2779},{"krate":0,"index":2780},{"krate":0,"index":2781},{"krate":0,"index":2782},{"krate":0,"index":2783},{"krate":0,"index":2786},{"krate":0,"index":2787},{"krate":0,"index":2788},{"krate":0,"index":2789},{"krate":0,"index":2790},{"krate":0,"index":2807},{"krate":0,"index":2808}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":43709,"byte_end":43718,"line_start":1106,"line_end":1106,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2812},{"krate":0,"index":2814},{"krate":0,"index":2817},{"krate":0,"index":2820},{"krate":0,"index":2823}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":50453,"byte_end":50461,"line_start":1323,"line_end":1323,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2829}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":52405,"byte_end":52422,"line_start":1377,"line_end":1377,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2831}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":52563,"byte_end":52580,"line_start":1385,"line_end":1385,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2833}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":54007,"byte_end":54019,"line_start":1414,"line_end":1414,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2835}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":55131,"byte_end":55149,"line_start":1447,"line_end":1447,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2837},{"krate":0,"index":2839},{"krate":0,"index":2840},{"krate":0,"index":2841}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":1562,"byte_end":1576,"line_start":57,"line_end":57,"column_start":9,"column_end":23},"ref_id":{"krate":0,"index":414}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":1707,"byte_end":1718,"line_start":68,"line_end":68,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":909}},{"kind":"Mod","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":1738,"byte_end":1746,"line_start":70,"line_end":70,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1738}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":80811,"byte_end":80833,"line_start":42,"line_end":42,"column_start":18,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2865},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":81246,"byte_end":81268,"line_start":58,"line_end":58,"column_start":6,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":83195,"byte_end":83200,"line_start":104,"line_end":104,"column_start":59,"column_end":64},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":262}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":89337,"byte_end":89346,"line_start":254,"line_end":254,"column_start":9,"column_end":18},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":91031,"byte_end":91040,"line_start":316,"line_end":316,"column_start":49,"column_end":58},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":257},"to":{"krate":0,"index":262}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":93211,"byte_end":93233,"line_start":387,"line_end":387,"column_start":12,"column_end":34},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark.rs","byte_start":95787,"byte_end":95809,"line_start":473,"line_end":473,"column_start":39,"column_end":61},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":250},"to":{"krate":0,"index":262}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":103628,"byte_end":103642,"line_start":86,"line_end":86,"column_start":26,"column_end":40},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":114159,"byte_end":114173,"line_start":368,"line_end":368,"column_start":35,"column_end":49},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":354},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":115555,"byte_end":115566,"line_start":407,"line_end":407,"column_start":6,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2895},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":118076,"byte_end":118087,"line_start":473,"line_end":473,"column_start":28,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2895},"to":{"krate":0,"index":403}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":118128,"byte_end":118129,"line_start":474,"line_end":474,"column_start":38,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":406},"to":{"krate":0,"index":403}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":118259,"byte_end":118265,"line_start":478,"line_end":478,"column_start":37,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":403},"to":{"krate":0,"index":407}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":118342,"byte_end":118353,"line_start":481,"line_end":481,"column_start":26,"column_end":37},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2895},"to":{"krate":0,"index":407}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/benchmark_group.rs","byte_start":118467,"byte_end":118468,"line_start":486,"line_end":486,"column_start":43,"column_end":44},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":412},"to":{"krate":0,"index":407}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/bencher.rs","byte_start":123368,"byte_end":123375,"line_start":42,"line_end":42,"column_start":26,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/connection.rs","byte_start":148495,"byte_end":148507,"line_start":14,"line_end":14,"column_start":34,"column_end":46},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2910},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/connection.rs","byte_start":148644,"byte_end":148656,"line_start":19,"line_end":19,"column_start":31,"column_end":43},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2910},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/connection.rs","byte_start":148776,"byte_end":148788,"line_start":24,"line_end":24,"column_start":28,"column_end":40},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2910},"to":{"krate":2,"index":9602}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/connection.rs","byte_start":149332,"byte_end":149344,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2910},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/connection.rs","byte_start":150302,"byte_end":150317,"line_start":69,"line_end":69,"column_start":6,"column_end":21},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/connection.rs","byte_start":152803,"byte_end":152813,"line_start":133,"line_end":133,"column_start":6,"column_end":16},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/connection.rs","byte_start":157110,"byte_end":157124,"line_start":282,"line_end":282,"column_start":37,"column_end":51},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3219},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/connection.rs","byte_start":157558,"byte_end":157567,"line_start":298,"line_end":298,"column_start":33,"column_end":42},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3232},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/connection.rs","byte_start":157918,"byte_end":157935,"line_start":311,"line_end":311,"column_start":42,"column_end":59},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":3245},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/connection.rs","byte_start":158210,"byte_end":158218,"line_start":324,"line_end":324,"column_start":36,"column_end":44},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3255},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/connection.rs","byte_start":158683,"byte_end":158698,"line_start":343,"line_end":343,"column_start":51,"column_end":66},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":3266},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/connection.rs","byte_start":159406,"byte_end":159420,"line_start":363,"line_end":363,"column_start":42,"column_end":56},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3282},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/csv_report.rs","byte_start":160609,"byte_end":160624,"line_start":24,"line_end":24,"column_start":16,"column_end":31},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/csv_report.rs","byte_start":161945,"byte_end":161958,"line_start":61,"line_end":61,"column_start":6,"column_end":19},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":591},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/csv_report.rs","byte_start":162345,"byte_end":162358,"line_start":76,"line_end":76,"column_start":17,"column_end":30},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":591},"to":{"krate":0,"index":1879}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/error.rs","byte_start":163307,"byte_end":163312,"line_start":26,"line_end":26,"column_start":23,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3358},"to":{"krate":2,"index":9602}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/error.rs","byte_start":164001,"byte_end":164006,"line_start":44,"line_end":44,"column_start":19,"column_end":24},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3358},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/error.rs","byte_start":164632,"byte_end":164637,"line_start":63,"line_end":63,"column_start":25,"column_end":30},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3358},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/estimate.rs","byte_start":165099,"byte_end":165108,"line_start":15,"line_end":15,"column_start":23,"column_end":32},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":3374},"to":{"krate":2,"index":9602}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/estimate.rs","byte_start":167941,"byte_end":167950,"line_start":113,"line_end":113,"column_start":6,"column_end":15},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":3581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/estimate.rs","byte_start":168707,"byte_end":168720,"line_start":136,"line_end":136,"column_start":6,"column_end":19},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/estimate.rs","byte_start":169483,"byte_end":169498,"line_start":162,"line_end":162,"column_start":6,"column_end":21},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/estimate.rs","byte_start":169842,"byte_end":169861,"line_start":176,"line_end":176,"column_start":6,"column_end":25},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/html/mod.rs","byte_start":176950,"byte_end":176969,"line_start":59,"line_end":59,"column_start":6,"column_end":25},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/html/mod.rs","byte_start":177962,"byte_end":177966,"line_start":103,"line_end":103,"column_start":6,"column_end":10},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3755},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/html/mod.rs","byte_start":178766,"byte_end":178776,"line_start":137,"line_end":137,"column_start":10,"column_end":20},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":3778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/html/mod.rs","byte_start":180447,"byte_end":180461,"line_start":192,"line_end":192,"column_start":10,"column_end":24},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3803},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/html/mod.rs","byte_start":183237,"byte_end":183241,"line_start":275,"line_end":275,"column_start":6,"column_end":10},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/html/mod.rs","byte_start":184094,"byte_end":184098,"line_start":295,"line_end":295,"column_start":17,"column_end":21},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":841},"to":{"krate":0,"index":1879}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/html/mod.rs","byte_start":193686,"byte_end":193690,"line_start":566,"line_end":566,"column_start":6,"column_end":10},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":213927,"byte_end":213944,"line_start":107,"line_end":107,"column_start":6,"column_end":23},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":215333,"byte_end":215350,"line_start":148,"line_end":148,"column_start":25,"column_end":42},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":941},"to":{"krate":0,"index":926}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/measurement.rs","byte_start":216589,"byte_end":216597,"line_start":190,"line_end":190,"column_start":22,"column_end":30},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":950},"to":{"krate":0,"index":932}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/plot/gnuplot_backend/summary.rs","byte_start":264721,"byte_end":264730,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":4230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/plot/gnuplot_backend/mod.rs","byte_start":221610,"byte_end":221613,"line_start":62,"line_end":62,"column_start":23,"column_end":26},"kind":{"Impl":{"id":78}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":1382}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/plot/gnuplot_backend/mod.rs","byte_start":221809,"byte_end":221816,"line_start":74,"line_end":74,"column_start":18,"column_end":25},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":3836},"to":{"krate":0,"index":1728}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/plot/plotters_backend/mod.rs","byte_start":273763,"byte_end":273778,"line_start":37,"line_end":37,"column_start":18,"column_end":33},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3840},"to":{"krate":0,"index":1728}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/plot/mod.rs","byte_start":218000,"byte_end":218011,"line_start":30,"line_end":30,"column_start":10,"column_end":21},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3844},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/plot/mod.rs","byte_start":219026,"byte_end":219034,"line_start":67,"line_end":67,"column_start":10,"column_end":18},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/profiler.rs","byte_start":323406,"byte_end":323422,"line_start":25,"line_end":25,"column_start":19,"column_end":35},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1745},"to":{"krate":0,"index":1742}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/report.rs","byte_start":325000,"byte_end":325015,"line_start":44,"line_end":44,"column_start":10,"column_end":25},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1842},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/report.rs","byte_start":326873,"byte_end":326884,"line_start":108,"line_end":108,"column_start":6,"column_end":17},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3883},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/report.rs","byte_start":330478,"byte_end":330489,"line_start":225,"line_end":225,"column_start":23,"column_end":34},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3883},"to":{"krate":2,"index":9602}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/report.rs","byte_start":330620,"byte_end":330631,"line_start":230,"line_end":230,"column_start":21,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3883},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/report.rs","byte_start":331308,"byte_end":331321,"line_start":254,"line_end":254,"column_start":6,"column_end":19},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/report.rs","byte_start":333674,"byte_end":333681,"line_start":330,"line_end":330,"column_start":17,"column_end":24},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1892},"to":{"krate":0,"index":1879}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/report.rs","byte_start":335164,"byte_end":335173,"line_start":373,"line_end":373,"column_start":6,"column_end":15},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/report.rs","byte_start":337876,"byte_end":337885,"line_start":483,"line_end":483,"column_start":17,"column_end":26},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1903},"to":{"krate":0,"index":1879}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/report.rs","byte_start":347038,"byte_end":347051,"line_start":731,"line_end":731,"column_start":17,"column_end":30},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1933},"to":{"krate":0,"index":1879}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/routine.rs","byte_start":356492,"byte_end":356500,"line_start":175,"line_end":175,"column_start":28,"column_end":36},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/routine.rs","byte_start":356785,"byte_end":356793,"line_start":189,"line_end":189,"column_start":46,"column_end":54},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1996},"to":{"krate":0,"index":1986}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/bivariate/regression.rs","byte_start":368133,"byte_end":368138,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/bivariate/resamples.rs","byte_start":369541,"byte_end":369550,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/bivariate/mod.rs","byte_start":361290,"byte_end":361294,"line_start":21,"line_end":21,"column_start":25,"column_end":29},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2079},"to":{"krate":2,"index":3034}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/bivariate/mod.rs","byte_start":361412,"byte_end":361416,"line_start":24,"line_end":24,"column_start":26,"column_end":30},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2079},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/bivariate/mod.rs","byte_start":361507,"byte_end":361511,"line_start":30,"line_end":30,"column_start":16,"column_end":20},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2079},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/bivariate/mod.rs","byte_start":361803,"byte_end":361807,"line_start":45,"line_end":45,"column_start":16,"column_end":20},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2079},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/bivariate/mod.rs","byte_start":363678,"byte_end":363683,"line_start":115,"line_end":115,"column_start":29,"column_end":34},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2117},"to":{"krate":2,"index":7907}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/tuple.rs","byte_start":370872,"byte_end":370877,"line_start":6,"line_end":6,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":2133}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/tuple.rs","byte_start":371217,"byte_end":371222,"line_start":15,"line_end":15,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":2136}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/tuple.rs","byte_start":371433,"byte_end":371438,"line_start":21,"line_end":21,"column_start":39,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":2138}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/percentiles.rs","byte_start":386311,"byte_end":386322,"line_start":10,"line_end":10,"column_start":9,"column_end":20},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/resamples.rs","byte_start":388509,"byte_end":388518,"line_start":17,"line_end":17,"column_start":13,"column_end":22},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":392037,"byte_end":392043,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/sample.rs","byte_start":398847,"byte_end":398853,"line_start":249,"line_end":249,"column_start":24,"column_end":30},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2295},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/kde/kernel.rs","byte_start":402966,"byte_end":402970,"line_start":6,"line_end":6,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":3034},"to":{"krate":0,"index":2345}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/kde/kernel.rs","byte_start":402973,"byte_end":402977,"line_start":6,"line_end":6,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":3036},"to":{"krate":0,"index":2345}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/kde/kernel.rs","byte_start":403181,"byte_end":403189,"line_start":18,"line_end":18,"column_start":23,"column_end":31},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3980},"to":{"krate":0,"index":2345}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/kde/mod.rs","byte_start":399289,"byte_end":399292,"line_start":21,"line_end":21,"column_start":16,"column_end":19},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/kde/mod.rs","byte_start":400582,"byte_end":400591,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2381},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":408987,"byte_end":409000,"line_start":66,"line_end":66,"column_start":13,"column_end":26},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":410198,"byte_end":410211,"line_start":114,"line_end":114,"column_start":23,"column_end":36},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3985},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":410399,"byte_end":410412,"line_start":126,"line_end":126,"column_start":30,"column_end":43},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":3985},"to":{"krate":2,"index":3327}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":411543,"byte_end":411547,"line_start":178,"line_end":178,"column_start":26,"column_end":30},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2465},"to":{"krate":2,"index":7907}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/univariate/outliers/tukey.rs","byte_start":412615,"byte_end":412620,"line_start":224,"line_end":224,"column_start":6,"column_end":11},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/float.rs","byte_start":414227,"byte_end":414232,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":48,"index":424},"to":{"krate":0,"index":2535}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/float.rs","byte_start":414235,"byte_end":414239,"line_start":10,"line_end":10,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":42,"index":15},"to":{"krate":0,"index":2535}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/float.rs","byte_start":414264,"byte_end":414268,"line_start":10,"line_end":10,"column_start":49,"column_end":53},"kind":"SuperTrait","from":{"krate":42,"index":15},"to":{"krate":0,"index":2535}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/float.rs","byte_start":414291,"byte_end":414295,"line_start":10,"line_end":10,"column_start":76,"column_end":80},"kind":"SuperTrait","from":{"krate":2,"index":3036},"to":{"krate":0,"index":2535}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/float.rs","byte_start":414298,"byte_end":414302,"line_start":10,"line_end":10,"column_start":83,"column_end":87},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":2535}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/mod.rs","byte_start":358781,"byte_end":358793,"line_start":28,"line_end":28,"column_start":9,"column_end":21},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/stats/mod.rs","byte_start":360209,"byte_end":360221,"line_start":78,"line_end":78,"column_start":19,"column_end":31},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4001},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":5831,"byte_end":5834,"line_start":189,"line_end":189,"column_start":25,"column_end":28},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":10453,"byte_end":10462,"line_start":277,"line_end":277,"column_start":6,"column_end":15},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":4063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":12137,"byte_end":12152,"line_start":317,"line_end":317,"column_start":6,"column_end":21},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":4103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":12812,"byte_end":12816,"line_start":338,"line_end":338,"column_start":6,"column_end":10},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":4113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":14643,"byte_end":14652,"line_start":394,"line_end":394,"column_start":18,"column_end":27},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2744},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":16944,"byte_end":16953,"line_start":456,"line_end":456,"column_start":22,"column_end":31},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2744},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":43709,"byte_end":43718,"line_start":1106,"line_end":1106,"column_start":9,"column_end":18},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2744},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":50453,"byte_end":50461,"line_start":1323,"line_end":1323,"column_start":22,"column_end":30},"kind":{"Impl":{"id":128}},"from":{"krate":2,"index":48587},"to":{"krate":0,"index":2825}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":52405,"byte_end":52422,"line_start":1377,"line_end":1377,"column_start":18,"column_end":35},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4240},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":52563,"byte_end":52580,"line_start":1385,"line_end":1385,"column_start":6,"column_end":23},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":54007,"byte_end":54019,"line_start":1414,"line_end":1414,"column_start":6,"column_end":18},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":4246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.5/src/lib.rs","byte_start":55131,"byte_end":55149,"line_start":1447,"line_end":1447,"column_start":6,"column_end":24},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":4258},"to":{"krate":4294967295,"index":4294967295}}]}
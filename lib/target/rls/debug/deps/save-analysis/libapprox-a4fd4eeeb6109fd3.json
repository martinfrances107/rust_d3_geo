{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1","program":"/home/martin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","approx","/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=a4fd4eeeb6109fd3","-C","extra-filename=-a4fd4eeeb6109fd3","--out-dir","/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps","-L","dependency=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps","--extern","num_traits=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libnum_traits-0123c3a8ba9a4e3c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/martin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libapprox-a4fd4eeeb6109fd3.rmeta"},"prelude":{"crate_id":{"name":"approx","disambiguator":[4336756689977915225,0]},"crate_root":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src","external_crates":[{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2825088610194081445,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[9481142260376939403,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[16420834686343379425,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","num":4,"id":{"name":"num_traits","disambiguator":[14098284124660598696,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[14788966508543342302,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","num":6,"id":{"name":"alloc","disambiguator":[11097033969885139948,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","num":7,"id":{"name":"libc","disambiguator":[6800150773471260640,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[9424233180753397496,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[4493421558680613340,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","num":10,"id":{"name":"hashbrown","disambiguator":[10587786945246582611,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6037489587312533517,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[12999623613951624675,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","num":13,"id":{"name":"rustc_demangle","disambiguator":[15285592788019233460,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","num":14,"id":{"name":"addr2line","disambiguator":[7690318462147983057,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","num":15,"id":{"name":"gimli","disambiguator":[16937637772373355212,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","num":16,"id":{"name":"object","disambiguator":[8216859446519220865,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","num":17,"id":{"name":"memchr","disambiguator":[6387052066414425180,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","num":18,"id":{"name":"miniz_oxide","disambiguator":[879344915155370202,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","num":19,"id":{"name":"adler","disambiguator":[12947071141408240460,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","num":20,"id":{"name":"panic_unwind","disambiguator":[12545025351940724261,0]}}],"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":597,"byte_end":11487,"line_start":15,"line_end":388,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":9},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":6000,"byte_end":6009,"line_start":170,"line_end":170,"column_start":22,"column_end":31},"alias_span":null,"name":"AbsDiffEq","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":60},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":6032,"byte_end":6042,"line_start":171,"line_end":171,"column_start":22,"column_end":32},"alias_span":null,"name":"RelativeEq","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":6061,"byte_end":6067,"line_start":172,"line_end":172,"column_start":18,"column_end":24},"alias_span":null,"name":"UlpsEq","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":597,"byte_end":11487,"line_start":15,"line_end":388,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":46},{"krate":0,"index":90},{"krate":0,"index":130},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":157},{"krate":0,"index":161},{"krate":0,"index":167},{"krate":0,"index":172},{"krate":0,"index":176},{"krate":0,"index":183},{"krate":0,"index":188},{"krate":0,"index":192}],"decl_id":null,"docs":" A crate that provides facilities for testing the approximate equality of floating-point\n based types, using either relative difference, or units in the last place (ULPs)\n comparisons.","sig":null,"attributes":[{"value":"/ A crate that provides facilities for testing the approximate equality of floating-point","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":597,"byte_end":688,"line_start":15,"line_end":15,"column_start":1,"column_end":92}},{"value":"/ based types, using either relative difference, or units in the last place (ULPs)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":689,"byte_end":773,"line_start":16,"line_end":16,"column_start":1,"column_end":85}},{"value":"/ comparisons.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":774,"byte_end":790,"line_start":17,"line_end":17,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":791,"byte_end":794,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ You can also use the `*_{eq, ne}!` and `assert_*_{eq, ne}!` macros to test for equality using a","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":795,"byte_end":894,"line_start":19,"line_end":19,"column_start":1,"column_end":100}},{"value":"/ more positional style:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":895,"byte_end":921,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":922,"byte_end":925,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":926,"byte_end":937,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/ #[macro_use]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":938,"byte_end":954,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/ extern crate approx;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":955,"byte_end":979,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":980,"byte_end":983,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ use std::f64;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":984,"byte_end":1001,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1002,"byte_end":1005,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1006,"byte_end":1023,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/ abs_diff_eq!(1.0, 1.0);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1024,"byte_end":1051,"line_start":29,"line_end":29,"column_start":1,"column_end":28}},{"value":"/ abs_diff_eq!(1.0, 1.0, epsilon = f64::EPSILON);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1052,"byte_end":1103,"line_start":30,"line_end":30,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1104,"byte_end":1107,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ relative_eq!(1.0, 1.0);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1108,"byte_end":1135,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/ relative_eq!(1.0, 1.0, epsilon = f64::EPSILON);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1136,"byte_end":1187,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/ relative_eq!(1.0, 1.0, max_relative = 1.0);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1188,"byte_end":1235,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/ relative_eq!(1.0, 1.0, epsilon = f64::EPSILON, max_relative = 1.0);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1236,"byte_end":1307,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/ relative_eq!(1.0, 1.0, max_relative = 1.0, epsilon = f64::EPSILON);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1308,"byte_end":1379,"line_start":36,"line_end":36,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1380,"byte_end":1383,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ulps_eq!(1.0, 1.0);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1384,"byte_end":1407,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/ ulps_eq!(1.0, 1.0, epsilon = f64::EPSILON);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1408,"byte_end":1455,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ ulps_eq!(1.0, 1.0, max_ulps = 4);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1456,"byte_end":1493,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/ ulps_eq!(1.0, 1.0, epsilon = f64::EPSILON, max_ulps = 4);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1494,"byte_end":1555,"line_start":41,"line_end":41,"column_start":1,"column_end":62}},{"value":"/ ulps_eq!(1.0, 1.0, max_ulps = 4, epsilon = f64::EPSILON);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1556,"byte_end":1617,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/ # }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1618,"byte_end":1625,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1626,"byte_end":1633,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1634,"byte_end":1637,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Implementing approximate equality for custom types","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1638,"byte_end":1694,"line_start":46,"line_end":46,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1695,"byte_end":1698,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The `*Eq` traits allow approximate equalities to be implemented on types, based on the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1699,"byte_end":1789,"line_start":48,"line_end":48,"column_start":1,"column_end":91}},{"value":"/ fundamental floating point implementations.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1790,"byte_end":1837,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1838,"byte_end":1841,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ For example, we might want to be able to do approximate assertions on a complex number type:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1842,"byte_end":1938,"line_start":51,"line_end":51,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1939,"byte_end":1942,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1943,"byte_end":1954,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"/ #[macro_use]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1955,"byte_end":1971,"line_start":54,"line_end":54,"column_start":1,"column_end":17}},{"value":"/ extern crate approx;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1972,"byte_end":1996,"line_start":55,"line_end":55,"column_start":1,"column_end":25}},{"value":"/ # use approx::{AbsDiffEq, RelativeEq, UlpsEq};","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":1997,"byte_end":2047,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":2048,"byte_end":2051,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":2052,"byte_end":2083,"line_start":58,"line_end":58,"column_start":1,"column_end":32}},{"value":"/ struct Complex<T> {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":2084,"byte_end":2107,"line_start":59,"line_end":59,"column_start":1,"column_end":24}},{"value":"/     x: T,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":2108,"byte_end":2121,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/     i: T,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":2122,"byte_end":2135,"line_start":61,"line_end":61,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":2136,"byte_end":2141,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/ # impl<T: AbsDiffEq> AbsDiffEq for Complex<T> where T::Epsilon: Copy {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":2142,"byte_end":2216,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"/ #     type Epsilon = T::Epsilon;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":2217,"byte_end":2253,"line_start":64,"line_end":64,"column_start":1,"column_end":37}},{"value":"/ #     fn default_epsilon() -> T::Epsilon { T::default_epsilon() }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":2254,"byte_end":2323,"line_start":65,"line_end":65,"column_start":1,"column_end":70}},{"value":"/ #     fn abs_diff_eq(&self, other: &Self, epsilon: T::Epsilon) -> bool {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":2324,"byte_end":2400,"line_start":66,"line_end":66,"column_start":1,"column_end":77}},{"value":"/ #         T::abs_diff_eq(&self.x, &other.x, epsilon) &&","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":2401,"byte_end":2460,"line_start":67,"line_end":67,"column_start":1,"column_end":60}},{"value":"/ #         T::abs_diff_eq(&self.i, &other.i, epsilon)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":2461,"byte_end":2517,"line_start":68,"line_end":68,"column_start":1,"column_end":57}},{"value":"/ #     }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":2518,"byte_end":2529,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":2530,"byte_end":2537,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ # impl<T: RelativeEq> RelativeEq for Complex<T> where T::Epsilon: Copy {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":2538,"byte_end":2614,"line_start":71,"line_end":71,"column_start":1,"column_end":77}},{"value":"/ #     fn default_max_relative() -> T::Epsilon { T::default_max_relative() }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":2615,"byte_end":2694,"line_start":72,"line_end":72,"column_start":1,"column_end":80}},{"value":"/ #     fn relative_eq(&self, other: &Self, epsilon: T::Epsilon, max_relative: T::Epsilon)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":2695,"byte_end":2787,"line_start":73,"line_end":73,"column_start":1,"column_end":93}},{"value":"/ #                   -> bool {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":2788,"byte_end":2821,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/ #         T::relative_eq(&self.x, &other.x, epsilon, max_relative) &&","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":2822,"byte_end":2895,"line_start":75,"line_end":75,"column_start":1,"column_end":74}},{"value":"/ #         T::relative_eq(&self.i, &other.i, epsilon, max_relative)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":2896,"byte_end":2966,"line_start":76,"line_end":76,"column_start":1,"column_end":71}},{"value":"/ #     }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":2967,"byte_end":2978,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":2979,"byte_end":2986,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/ # impl<T: UlpsEq> UlpsEq for Complex<T> where T::Epsilon: Copy {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":2987,"byte_end":3055,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"/ #     fn default_max_ulps() -> u32 { T::default_max_ulps() }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":3056,"byte_end":3120,"line_start":80,"line_end":80,"column_start":1,"column_end":65}},{"value":"/ #     fn ulps_eq(&self, other: &Self, epsilon: T::Epsilon, max_ulps: u32) -> bool {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":3121,"byte_end":3208,"line_start":81,"line_end":81,"column_start":1,"column_end":88}},{"value":"/ #         T::ulps_eq(&self.x, &other.x, epsilon, max_ulps) &&","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":3209,"byte_end":3274,"line_start":82,"line_end":82,"column_start":1,"column_end":66}},{"value":"/ #         T::ulps_eq(&self.i, &other.i, epsilon, max_ulps)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":3275,"byte_end":3337,"line_start":83,"line_end":83,"column_start":1,"column_end":63}},{"value":"/ #     }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":3338,"byte_end":3349,"line_start":84,"line_end":84,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":3350,"byte_end":3357,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":3358,"byte_end":3361,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":3362,"byte_end":3379,"line_start":87,"line_end":87,"column_start":1,"column_end":18}},{"value":"/ let x = Complex { x: 1.2, i: 2.3 };","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":3380,"byte_end":3419,"line_start":88,"line_end":88,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":3420,"byte_end":3423,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ assert_relative_eq!(x, x);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":3424,"byte_end":3454,"line_start":90,"line_end":90,"column_start":1,"column_end":31}},{"value":"/ assert_ulps_eq!(x, x, max_ulps = 4);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":3455,"byte_end":3495,"line_start":91,"line_end":91,"column_start":1,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":3496,"byte_end":3503,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":3504,"byte_end":3511,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":3512,"byte_end":3515,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ To do this we can implement [`AbsDiffEq`], [`RelativeEq`] and [`UlpsEq`] generically in terms","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":3516,"byte_end":3613,"line_start":95,"line_end":95,"column_start":1,"column_end":98}},{"value":"/ of a type parameter that also implements `AbsDiffEq`, `RelativeEq` and `UlpsEq` respectively.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":3614,"byte_end":3711,"line_start":96,"line_end":96,"column_start":1,"column_end":98}},{"value":"/ This means that we can make comparisons for either `Complex<f32>` or `Complex<f64>`:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":3712,"byte_end":3800,"line_start":97,"line_end":97,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":3801,"byte_end":3804,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":3805,"byte_end":3816,"line_start":99,"line_end":99,"column_start":1,"column_end":12}},{"value":"/ # use approx::{AbsDiffEq, RelativeEq, UlpsEq};","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":3817,"byte_end":3867,"line_start":100,"line_end":100,"column_start":1,"column_end":51}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":3868,"byte_end":3901,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # struct Complex<T> { x: T, i: T, }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":3902,"byte_end":3941,"line_start":102,"line_end":102,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":3942,"byte_end":3947,"line_start":103,"line_end":103,"column_start":1,"column_end":6}},{"value":"/ impl<T: AbsDiffEq> AbsDiffEq for Complex<T> where","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":3948,"byte_end":4001,"line_start":104,"line_end":104,"column_start":1,"column_end":54}},{"value":"/     T::Epsilon: Copy,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4002,"byte_end":4027,"line_start":105,"line_end":105,"column_start":1,"column_end":26}},{"value":"/ {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4028,"byte_end":4033,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/     type Epsilon = T::Epsilon;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4034,"byte_end":4068,"line_start":107,"line_end":107,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4069,"byte_end":4072,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/     fn default_epsilon() -> T::Epsilon {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4073,"byte_end":4117,"line_start":109,"line_end":109,"column_start":1,"column_end":45}},{"value":"/         T::default_epsilon()","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4118,"byte_end":4150,"line_start":110,"line_end":110,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4151,"byte_end":4160,"line_start":111,"line_end":111,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4161,"byte_end":4164,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/     fn abs_diff_eq(&self, other: &Self, epsilon: T::Epsilon) -> bool {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4165,"byte_end":4239,"line_start":113,"line_end":113,"column_start":1,"column_end":75}},{"value":"/         T::abs_diff_eq(&self.x, &other.x, epsilon) &&","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4240,"byte_end":4297,"line_start":114,"line_end":114,"column_start":1,"column_end":58}},{"value":"/         T::abs_diff_eq(&self.i, &other.i, epsilon)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4298,"byte_end":4352,"line_start":115,"line_end":115,"column_start":1,"column_end":55}},{"value":"/     }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4353,"byte_end":4362,"line_start":116,"line_end":116,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4363,"byte_end":4368,"line_start":117,"line_end":117,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4369,"byte_end":4372,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ impl<T: RelativeEq> RelativeEq for Complex<T> where","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4373,"byte_end":4428,"line_start":119,"line_end":119,"column_start":1,"column_end":56}},{"value":"/     T::Epsilon: Copy,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4429,"byte_end":4454,"line_start":120,"line_end":120,"column_start":1,"column_end":26}},{"value":"/ {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4455,"byte_end":4460,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/     fn default_max_relative() -> T::Epsilon {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4461,"byte_end":4510,"line_start":122,"line_end":122,"column_start":1,"column_end":50}},{"value":"/         T::default_max_relative()","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4511,"byte_end":4548,"line_start":123,"line_end":123,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4549,"byte_end":4558,"line_start":124,"line_end":124,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4559,"byte_end":4562,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/     fn relative_eq(&self, other: &Self, epsilon: T::Epsilon, max_relative: T::Epsilon) -> bool {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4563,"byte_end":4663,"line_start":126,"line_end":126,"column_start":1,"column_end":101}},{"value":"/         T::relative_eq(&self.x, &other.x, epsilon, max_relative) &&","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4664,"byte_end":4735,"line_start":127,"line_end":127,"column_start":1,"column_end":72}},{"value":"/         T::relative_eq(&self.i, &other.i, epsilon, max_relative)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4736,"byte_end":4804,"line_start":128,"line_end":128,"column_start":1,"column_end":69}},{"value":"/     }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4805,"byte_end":4814,"line_start":129,"line_end":129,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4815,"byte_end":4820,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4821,"byte_end":4824,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ impl<T: UlpsEq> UlpsEq for Complex<T> where","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4825,"byte_end":4872,"line_start":132,"line_end":132,"column_start":1,"column_end":48}},{"value":"/     T::Epsilon: Copy,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4873,"byte_end":4898,"line_start":133,"line_end":133,"column_start":1,"column_end":26}},{"value":"/ {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4899,"byte_end":4904,"line_start":134,"line_end":134,"column_start":1,"column_end":6}},{"value":"/     fn default_max_ulps() -> u32 {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4905,"byte_end":4943,"line_start":135,"line_end":135,"column_start":1,"column_end":39}},{"value":"/         T::default_max_ulps()","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4944,"byte_end":4977,"line_start":136,"line_end":136,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4978,"byte_end":4987,"line_start":137,"line_end":137,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4988,"byte_end":4991,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/     fn ulps_eq(&self, other: &Self, epsilon: T::Epsilon, max_ulps: u32) -> bool {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":4992,"byte_end":5077,"line_start":139,"line_end":139,"column_start":1,"column_end":86}},{"value":"/         T::ulps_eq(&self.x, &other.x, epsilon, max_ulps) &&","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":5078,"byte_end":5141,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/         T::ulps_eq(&self.i, &other.i, epsilon, max_ulps)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":5142,"byte_end":5202,"line_start":141,"line_end":141,"column_start":1,"column_end":61}},{"value":"/     }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":5203,"byte_end":5212,"line_start":142,"line_end":142,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":5213,"byte_end":5218,"line_start":143,"line_end":143,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":5219,"byte_end":5226,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":5227,"byte_end":5230,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ # References","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":5231,"byte_end":5247,"line_start":146,"line_end":146,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":5248,"byte_end":5251,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Floating point is hard! Thanks goes to these links for helping to make things a _little_","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":5252,"byte_end":5344,"line_start":148,"line_end":148,"column_start":1,"column_end":93}},{"value":"/ easier to understand:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":5345,"byte_end":5370,"line_start":149,"line_end":149,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":5371,"byte_end":5374,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ - [Comparing Floating Point Numbers, 2012 Edition](","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":5375,"byte_end":5430,"line_start":151,"line_end":151,"column_start":1,"column_end":56}},{"value":"/   https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":5431,"byte_end":5529,"line_start":152,"line_end":152,"column_start":1,"column_end":99}},{"value":"/ - [The Floating Point Guide - Comparison](http://floating-point-gui.de/errors/comparison/)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":5530,"byte_end":5624,"line_start":153,"line_end":153,"column_start":1,"column_end":95}},{"value":"/ - [What Every Computer Scientist Should Know About Floating-Point Arithmetic](","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":5625,"byte_end":5707,"line_start":154,"line_end":154,"column_start":1,"column_end":83}},{"value":"/   https://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":5708,"byte_end":5778,"line_start":155,"line_end":155,"column_start":1,"column_end":71}},{"value":"no_std","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":5780,"byte_end":5790,"line_start":157,"line_end":157,"column_start":1,"column_end":11}},{"value":"allow(clippy :: transmute_float_to_int)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":5791,"byte_end":5832,"line_start":158,"line_end":158,"column_start":1,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":9},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/abs_diff_eq.rs","byte_start":12037,"byte_end":12046,"line_start":6,"line_end":6,"column_start":11,"column_end":20},"name":"AbsDiffEq","qualname":"::abs_diff_eq::AbsDiffEq","value":"AbsDiffEq<Rhs = Self>: PartialEq<Rhs>","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14}],"decl_id":null,"docs":" Equality that is defined using the absolute difference of two numbers.\n","sig":null,"attributes":[{"value":"/ Equality that is defined using the absolute difference of two numbers.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/abs_diff_eq.rs","byte_start":11952,"byte_end":12026,"line_start":5,"line_end":5,"column_start":1,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":11},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/abs_diff_eq.rs","byte_start":12159,"byte_end":12166,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"Epsilon","qualname":"::abs_diff_eq::AbsDiffEq::Epsilon","value":"type Epsilon;","parent":{"krate":0,"index":9},"children":[],"decl_id":null,"docs":" Used for specifying relative comparisons.\n","sig":null,"attributes":[{"value":"/ Used for specifying relative comparisons.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/abs_diff_eq.rs","byte_start":12104,"byte_end":12149,"line_start":10,"line_end":10,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/abs_diff_eq.rs","byte_start":12398,"byte_end":12413,"line_start":17,"line_end":17,"column_start":8,"column_end":23},"name":"default_epsilon","qualname":"::abs_diff_eq::AbsDiffEq::default_epsilon","value":"pub fn default_epsilon() -> Self::Epsilon","parent":{"krate":0,"index":9},"children":[],"decl_id":null,"docs":" The default tolerance to use when testing values that are close together.","sig":null,"attributes":[{"value":"/ The default tolerance to use when testing values that are close together.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/abs_diff_eq.rs","byte_start":12173,"byte_end":12250,"line_start":13,"line_end":13,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/abs_diff_eq.rs","byte_start":12255,"byte_end":12258,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ This is used when no `epsilon` value is supplied to the [`abs_diff_eq!`], [`relative_eq!`],","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/abs_diff_eq.rs","byte_start":12263,"byte_end":12358,"line_start":15,"line_end":15,"column_start":5,"column_end":100}},{"value":"/ or [`ulps_eq!`] macros.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/abs_diff_eq.rs","byte_start":12363,"byte_end":12390,"line_start":16,"line_end":16,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/abs_diff_eq.rs","byte_start":12564,"byte_end":12575,"line_start":21,"line_end":21,"column_start":8,"column_end":19},"name":"abs_diff_eq","qualname":"::abs_diff_eq::AbsDiffEq::abs_diff_eq","value":"pub fn abs_diff_eq(&Self, &Rhs, Self::Epsilon) -> bool","parent":{"krate":0,"index":9},"children":[],"decl_id":null,"docs":" A test for equality that uses the absolute difference to compute the approximate\n equality of two numbers.\n","sig":null,"attributes":[{"value":"/ A test for equality that uses the absolute difference to compute the approximate","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/abs_diff_eq.rs","byte_start":12439,"byte_end":12523,"line_start":19,"line_end":19,"column_start":5,"column_end":89}},{"value":"/ equality of two numbers.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/abs_diff_eq.rs","byte_start":12528,"byte_end":12556,"line_start":20,"line_end":20,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/abs_diff_eq.rs","byte_start":12688,"byte_end":12699,"line_start":24,"line_end":24,"column_start":8,"column_end":19},"name":"abs_diff_ne","qualname":"::abs_diff_eq::AbsDiffEq::abs_diff_ne","value":"pub fn abs_diff_ne(&Self, &Rhs, Self::Epsilon) -> bool","parent":{"krate":0,"index":9},"children":[],"decl_id":null,"docs":" The inverse of [`AbsDiffEq::abs_diff_eq`].\n","sig":null,"attributes":[{"value":"/ The inverse of [`AbsDiffEq::abs_diff_eq`].","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/abs_diff_eq.rs","byte_start":12634,"byte_end":12680,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":60},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/relative_eq.rs","byte_start":17422,"byte_end":17432,"line_start":8,"line_end":8,"column_start":11,"column_end":21},"name":"RelativeEq","qualname":"::relative_eq::RelativeEq","value":"RelativeEq<Rhs = Self>: AbsDiffEq<Rhs>","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64}],"decl_id":null,"docs":" Equality comparisons between two numbers using both the absolute difference and\n relative based comparisons.\n","sig":null,"attributes":[{"value":"/ Equality comparisons between two numbers using both the absolute difference and","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/relative_eq.rs","byte_start":17296,"byte_end":17379,"line_start":6,"line_end":6,"column_start":1,"column_end":84}},{"value":"/ relative based comparisons.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/relative_eq.rs","byte_start":17380,"byte_end":17411,"line_start":7,"line_end":7,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/relative_eq.rs","byte_start":17671,"byte_end":17691,"line_start":15,"line_end":15,"column_start":8,"column_end":28},"name":"default_max_relative","qualname":"::relative_eq::RelativeEq::default_max_relative","value":"pub fn default_max_relative() -> Self::Epsilon","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" The default relative tolerance for testing values that are far-apart.","sig":null,"attributes":[{"value":"/ The default relative tolerance for testing values that are far-apart.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/relative_eq.rs","byte_start":17490,"byte_end":17563,"line_start":12,"line_end":12,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/relative_eq.rs","byte_start":17568,"byte_end":17571,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ This is used when no `max_relative` value is supplied to the [`relative_eq`] macro.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/relative_eq.rs","byte_start":17576,"byte_end":17663,"line_start":14,"line_end":14,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/relative_eq.rs","byte_start":17809,"byte_end":17820,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"relative_eq","qualname":"::relative_eq::RelativeEq::relative_eq","value":"pub fn relative_eq(&Self, &Rhs, Self::Epsilon, Self::Epsilon) -> bool","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" A test for equality that uses a relative comparison if the values are far apart.\n","sig":null,"attributes":[{"value":"/ A test for equality that uses a relative comparison if the values are far apart.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/relative_eq.rs","byte_start":17717,"byte_end":17801,"line_start":17,"line_end":17,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/relative_eq.rs","byte_start":17971,"byte_end":17982,"line_start":22,"line_end":22,"column_start":8,"column_end":19},"name":"relative_ne","qualname":"::relative_eq::RelativeEq::relative_ne","value":"pub fn relative_ne(&Self, &Rhs, Self::Epsilon, Self::Epsilon) -> bool","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" The inverse of [`RelativeEq::relative_eq`].\n","sig":null,"attributes":[{"value":"/ The inverse of [`RelativeEq::relative_eq`].","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/relative_eq.rs","byte_start":17916,"byte_end":17963,"line_start":21,"line_end":21,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":100},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/ulps_eq.rs","byte_start":23180,"byte_end":23186,"line_start":10,"line_end":10,"column_start":11,"column_end":17},"name":"UlpsEq","qualname":"::ulps_eq::UlpsEq","value":"UlpsEq<Rhs = Self>: AbsDiffEq<Rhs>","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104}],"decl_id":null,"docs":" Equality comparisons between two numbers using both the absolute difference and ULPs\n (Units in Last Place) based comparisons.\n","sig":null,"attributes":[{"value":"/ Equality comparisons between two numbers using both the absolute difference and ULPs","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/ulps_eq.rs","byte_start":23036,"byte_end":23124,"line_start":8,"line_end":8,"column_start":1,"column_end":89}},{"value":"/ (Units in Last Place) based comparisons.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/ulps_eq.rs","byte_start":23125,"byte_end":23169,"line_start":9,"line_end":9,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/ulps_eq.rs","byte_start":23416,"byte_end":23432,"line_start":17,"line_end":17,"column_start":8,"column_end":24},"name":"default_max_ulps","qualname":"::ulps_eq::UlpsEq::default_max_ulps","value":"pub fn default_max_ulps() -> u32","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" The default ULPs to tolerate when testing values that are far-apart.","sig":null,"attributes":[{"value":"/ The default ULPs to tolerate when testing values that are far-apart.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/ulps_eq.rs","byte_start":23244,"byte_end":23316,"line_start":14,"line_end":14,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/ulps_eq.rs","byte_start":23321,"byte_end":23324,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ This is used when no `max_ulps` value is supplied to the [`ulps_eq`] macro.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/ulps_eq.rs","byte_start":23329,"byte_end":23408,"line_start":16,"line_end":16,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/ulps_eq.rs","byte_start":23548,"byte_end":23555,"line_start":20,"line_end":20,"column_start":8,"column_end":15},"name":"ulps_eq","qualname":"::ulps_eq::UlpsEq::ulps_eq","value":"pub fn ulps_eq(&Self, &Rhs, Self::Epsilon, u32) -> bool","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" A test for equality that uses units in the last place (ULP) if the values are far apart.\n","sig":null,"attributes":[{"value":"/ A test for equality that uses units in the last place (ULP) if the values are far apart.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/ulps_eq.rs","byte_start":23448,"byte_end":23540,"line_start":19,"line_end":19,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/ulps_eq.rs","byte_start":23676,"byte_end":23683,"line_start":23,"line_end":23,"column_start":8,"column_end":15},"name":"ulps_ne","qualname":"::ulps_eq::UlpsEq::ulps_ne","value":"pub fn ulps_ne(&Self, &Rhs, Self::Epsilon, u32) -> bool","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" The inverse of [`UlpsEq::ulps_eq`].\n","sig":null,"attributes":[{"value":"/ The inverse of [`UlpsEq::ulps_eq`].","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/ulps_eq.rs","byte_start":23629,"byte_end":23668,"line_start":22,"line_end":22,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":153},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":6508,"byte_end":6515,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"AbsDiff","qualname":"::AbsDiff","value":"AbsDiff { epsilon }","parent":null,"children":[{"krate":0,"index":156}],"decl_id":null,"docs":" The requisite parameters for testing for approximate equality using a\n absolute difference based comparison.","sig":null,"attributes":[{"value":"/ The requisite parameters for testing for approximate equality using a","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":6070,"byte_end":6143,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/ absolute difference based comparison.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":6144,"byte_end":6185,"line_start":175,"line_end":175,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":6186,"byte_end":6189,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ This is not normally used directly, rather via the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":6190,"byte_end":6244,"line_start":177,"line_end":177,"column_start":1,"column_end":55}},{"value":"/ `assert_abs_diff_{eq|ne}!` and `abs_diff_{eq|ne}!` macros.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":6245,"byte_end":6307,"line_start":178,"line_end":178,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":6308,"byte_end":6311,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":6312,"byte_end":6325,"line_start":180,"line_end":180,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":6326,"byte_end":6329,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":6330,"byte_end":6341,"line_start":182,"line_end":182,"column_start":1,"column_end":12}},{"value":"/ use std::f64;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":6342,"byte_end":6359,"line_start":183,"line_end":183,"column_start":1,"column_end":18}},{"value":"/ use approx::AbsDiff;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":6360,"byte_end":6384,"line_start":184,"line_end":184,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":6385,"byte_end":6388,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ AbsDiff::default().eq(&1.0, &1.0);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":6389,"byte_end":6427,"line_start":186,"line_end":186,"column_start":1,"column_end":39}},{"value":"/ AbsDiff::default().epsilon(f64::EPSILON).eq(&1.0, &1.0);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":6428,"byte_end":6488,"line_start":187,"line_end":187,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":6489,"byte_end":6496,"line_start":188,"line_end":188,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":156},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":6661,"byte_end":6668,"line_start":195,"line_end":195,"column_start":9,"column_end":16},"name":"epsilon","qualname":"::AbsDiff::epsilon","value":"<A as abs_diff_eq::AbsDiffEq<B>>::Epsilon","parent":{"krate":0,"index":153},"children":[],"decl_id":null,"docs":" The tolerance to use when testing values that are close together.\n","sig":null,"attributes":[{"value":"/ The tolerance to use when testing values that are close together.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":6583,"byte_end":6652,"line_start":194,"line_end":194,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":7066,"byte_end":7073,"line_start":218,"line_end":218,"column_start":12,"column_end":19},"name":"epsilon","qualname":"<AbsDiff<A, B>>::epsilon","value":"pub fn epsilon(Self, A::Epsilon) -> AbsDiff<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Replace the epsilon value with the one specified.\n","sig":null,"attributes":[{"value":"/ Replace the epsilon value with the one specified.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":6987,"byte_end":7040,"line_start":216,"line_end":216,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":7045,"byte_end":7054,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":7235,"byte_end":7237,"line_start":225,"line_end":225,"column_start":12,"column_end":14},"name":"eq","qualname":"<AbsDiff<A, B>>::eq","value":"pub fn eq(Self, &A, &B) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Peform the equality comparison\n","sig":null,"attributes":[{"value":"/ Peform the equality comparison","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":7159,"byte_end":7193,"line_start":222,"line_end":222,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":7198,"byte_end":7207,"line_start":223,"line_end":223,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":7212,"byte_end":7223,"line_start":224,"line_end":224,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":7408,"byte_end":7410,"line_start":232,"line_end":232,"column_start":12,"column_end":14},"name":"ne","qualname":"<AbsDiff<A, B>>::ne","value":"pub fn ne(Self, &A, &B) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Peform the inequality comparison\n","sig":null,"attributes":[{"value":"/ Peform the inequality comparison","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":7330,"byte_end":7366,"line_start":229,"line_end":229,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":7371,"byte_end":7380,"line_start":230,"line_end":230,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":7385,"byte_end":7396,"line_start":231,"line_end":231,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":167},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":8149,"byte_end":8157,"line_start":255,"line_end":255,"column_start":12,"column_end":20},"name":"Relative","qualname":"::Relative","value":"Relative { epsilon, max_relative }","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171}],"decl_id":null,"docs":" The requisite parameters for testing for approximate equality using a\n relative based comparison.","sig":null,"attributes":[{"value":"/ The requisite parameters for testing for approximate equality using a","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":7501,"byte_end":7574,"line_start":237,"line_end":237,"column_start":1,"column_end":74}},{"value":"/ relative based comparison.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":7575,"byte_end":7605,"line_start":238,"line_end":238,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":7606,"byte_end":7609,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ This is not normally used directly, rather via the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":7610,"byte_end":7664,"line_start":240,"line_end":240,"column_start":1,"column_end":55}},{"value":"/ `assert_relative_{eq|ne}!` and `relative_{eq|ne}!` macros.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":7665,"byte_end":7727,"line_start":241,"line_end":241,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":7728,"byte_end":7731,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":7732,"byte_end":7745,"line_start":243,"line_end":243,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":7746,"byte_end":7749,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":7750,"byte_end":7761,"line_start":245,"line_end":245,"column_start":1,"column_end":12}},{"value":"/ use std::f64;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":7762,"byte_end":7779,"line_start":246,"line_end":246,"column_start":1,"column_end":18}},{"value":"/ use approx::Relative;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":7780,"byte_end":7805,"line_start":247,"line_end":247,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":7806,"byte_end":7809,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ Relative::default().eq(&1.0, &1.0);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":7810,"byte_end":7849,"line_start":249,"line_end":249,"column_start":1,"column_end":40}},{"value":"/ Relative::default().epsilon(f64::EPSILON).eq(&1.0, &1.0);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":7850,"byte_end":7911,"line_start":250,"line_end":250,"column_start":1,"column_end":62}},{"value":"/ Relative::default().max_relative(1.0).eq(&1.0, &1.0);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":7912,"byte_end":7969,"line_start":251,"line_end":251,"column_start":1,"column_end":58}},{"value":"/ Relative::default().epsilon(f64::EPSILON).max_relative(1.0).eq(&1.0, &1.0);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":7970,"byte_end":8049,"line_start":252,"line_end":252,"column_start":1,"column_end":80}},{"value":"/ Relative::default().max_relative(1.0).epsilon(f64::EPSILON).eq(&1.0, &1.0);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":8050,"byte_end":8129,"line_start":253,"line_end":253,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":8130,"byte_end":8137,"line_start":254,"line_end":254,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":170},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":8304,"byte_end":8311,"line_start":261,"line_end":261,"column_start":9,"column_end":16},"name":"epsilon","qualname":"::Relative::epsilon","value":"<A as abs_diff_eq::AbsDiffEq<B>>::Epsilon","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":" The tolerance to use when testing values that are close together.\n","sig":null,"attributes":[{"value":"/ The tolerance to use when testing values that are close together.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":8226,"byte_end":8295,"line_start":260,"line_end":260,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":171},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":8403,"byte_end":8415,"line_start":263,"line_end":263,"column_start":9,"column_end":21},"name":"max_relative","qualname":"::Relative::max_relative","value":"<A as abs_diff_eq::AbsDiffEq<B>>::Epsilon","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":" The relative tolerance for testing values that are far-apart.\n","sig":null,"attributes":[{"value":"/ The relative tolerance for testing values that are far-apart.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":8329,"byte_end":8394,"line_start":262,"line_end":262,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":8872,"byte_end":8879,"line_start":287,"line_end":287,"column_start":12,"column_end":19},"name":"epsilon","qualname":"<Relative<A, B>>::epsilon","value":"pub fn epsilon(Self, A::Epsilon) -> Relative<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Replace the epsilon value with the one specified.\n","sig":null,"attributes":[{"value":"/ Replace the epsilon value with the one specified.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":8793,"byte_end":8846,"line_start":285,"line_end":285,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":8851,"byte_end":8860,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":9063,"byte_end":9075,"line_start":293,"line_end":293,"column_start":12,"column_end":24},"name":"max_relative","qualname":"<Relative<A, B>>::max_relative","value":"pub fn max_relative(Self, A::Epsilon) -> Relative<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Replace the maximum relative value with the one specified.\n","sig":null,"attributes":[{"value":"/ Replace the maximum relative value with the one specified.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":8975,"byte_end":9037,"line_start":291,"line_end":291,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":9042,"byte_end":9051,"line_start":292,"line_end":292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":9289,"byte_end":9291,"line_start":303,"line_end":303,"column_start":12,"column_end":14},"name":"eq","qualname":"<Relative<A, B>>::eq","value":"pub fn eq(Self, &A, &B) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Peform the equality comparison\n","sig":null,"attributes":[{"value":"/ Peform the equality comparison","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":9213,"byte_end":9247,"line_start":300,"line_end":300,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":9252,"byte_end":9261,"line_start":301,"line_end":301,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":9266,"byte_end":9277,"line_start":302,"line_end":302,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":9481,"byte_end":9483,"line_start":310,"line_end":310,"column_start":12,"column_end":14},"name":"ne","qualname":"<Relative<A, B>>::ne","value":"pub fn ne(Self, &A, &B) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Peform the inequality comparison\n","sig":null,"attributes":[{"value":"/ Peform the inequality comparison","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":9403,"byte_end":9439,"line_start":307,"line_end":307,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":9444,"byte_end":9453,"line_start":308,"line_end":308,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":9458,"byte_end":9469,"line_start":309,"line_end":309,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":183},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":10188,"byte_end":10192,"line_start":333,"line_end":333,"column_start":12,"column_end":16},"name":"Ulps","qualname":"::Ulps","value":"Ulps { epsilon, max_ulps }","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187}],"decl_id":null,"docs":" The requisite parameters for testing for approximate equality using an ULPs\n based comparison.","sig":null,"attributes":[{"value":"/ The requisite parameters for testing for approximate equality using an ULPs","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":9593,"byte_end":9672,"line_start":315,"line_end":315,"column_start":1,"column_end":80}},{"value":"/ based comparison.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":9673,"byte_end":9694,"line_start":316,"line_end":316,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":9695,"byte_end":9698,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ This is not normally used directly, rather via the `assert_ulps_{eq|ne}!`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":9699,"byte_end":9776,"line_start":318,"line_end":318,"column_start":1,"column_end":78}},{"value":"/ and `ulps_{eq|ne}!` macros.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":9777,"byte_end":9808,"line_start":319,"line_end":319,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":9809,"byte_end":9812,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":9813,"byte_end":9826,"line_start":321,"line_end":321,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":9827,"byte_end":9830,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":9831,"byte_end":9842,"line_start":323,"line_end":323,"column_start":1,"column_end":12}},{"value":"/ use std::f64;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":9843,"byte_end":9860,"line_start":324,"line_end":324,"column_start":1,"column_end":18}},{"value":"/ use approx::Ulps;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":9861,"byte_end":9882,"line_start":325,"line_end":325,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":9883,"byte_end":9886,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ Ulps::default().eq(&1.0, &1.0);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":9887,"byte_end":9922,"line_start":327,"line_end":327,"column_start":1,"column_end":36}},{"value":"/ Ulps::default().epsilon(f64::EPSILON).eq(&1.0, &1.0);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":9923,"byte_end":9980,"line_start":328,"line_end":328,"column_start":1,"column_end":58}},{"value":"/ Ulps::default().max_ulps(4).eq(&1.0, &1.0);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":9981,"byte_end":10028,"line_start":329,"line_end":329,"column_start":1,"column_end":48}},{"value":"/ Ulps::default().epsilon(f64::EPSILON).max_ulps(4).eq(&1.0, &1.0);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":10029,"byte_end":10098,"line_start":330,"line_end":330,"column_start":1,"column_end":70}},{"value":"/ Ulps::default().max_ulps(4).epsilon(f64::EPSILON).eq(&1.0, &1.0);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":10099,"byte_end":10168,"line_start":331,"line_end":331,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":10169,"byte_end":10176,"line_start":332,"line_end":332,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":186},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":10335,"byte_end":10342,"line_start":339,"line_end":339,"column_start":9,"column_end":16},"name":"epsilon","qualname":"::Ulps::epsilon","value":"<A as abs_diff_eq::AbsDiffEq<B>>::Epsilon","parent":{"krate":0,"index":183},"children":[],"decl_id":null,"docs":" The tolerance to use when testing values that are close together.\n","sig":null,"attributes":[{"value":"/ The tolerance to use when testing values that are close together.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":10257,"byte_end":10326,"line_start":338,"line_end":338,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":187},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":10433,"byte_end":10441,"line_start":341,"line_end":341,"column_start":9,"column_end":17},"name":"max_ulps","qualname":"::Ulps::max_ulps","value":"u32","parent":{"krate":0,"index":183},"children":[],"decl_id":null,"docs":" The ULPs to tolerate when testing values that are far-apart.\n","sig":null,"attributes":[{"value":"/ The ULPs to tolerate when testing values that are far-apart.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":10360,"byte_end":10424,"line_start":340,"line_end":340,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":10859,"byte_end":10866,"line_start":365,"line_end":365,"column_start":12,"column_end":19},"name":"epsilon","qualname":"<Ulps<A, B>>::epsilon","value":"pub fn epsilon(Self, A::Epsilon) -> Ulps<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Replace the epsilon value with the one specified.\n","sig":null,"attributes":[{"value":"/ Replace the epsilon value with the one specified.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":10780,"byte_end":10833,"line_start":363,"line_end":363,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":10838,"byte_end":10847,"line_start":364,"line_end":364,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":11034,"byte_end":11042,"line_start":371,"line_end":371,"column_start":12,"column_end":20},"name":"max_ulps","qualname":"<Ulps<A, B>>::max_ulps","value":"pub fn max_ulps(Self, u32) -> Ulps<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Replace the max ulps value with the one specified.\n","sig":null,"attributes":[{"value":"/ Replace the max ulps value with the one specified.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":10954,"byte_end":11008,"line_start":369,"line_end":369,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":11013,"byte_end":11022,"line_start":370,"line_end":370,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":11201,"byte_end":11203,"line_start":378,"line_end":378,"column_start":12,"column_end":14},"name":"eq","qualname":"<Ulps<A, B>>::eq","value":"pub fn eq(Self, &A, &B) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Peform the equality comparison\n","sig":null,"attributes":[{"value":"/ Peform the equality comparison","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":11125,"byte_end":11159,"line_start":375,"line_end":375,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":11164,"byte_end":11173,"line_start":376,"line_end":376,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":11178,"byte_end":11189,"line_start":377,"line_end":377,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":11385,"byte_end":11387,"line_start":385,"line_end":385,"column_start":12,"column_end":14},"name":"ne","qualname":"<Ulps<A, B>>::ne","value":"pub fn ne(Self, &A, &B) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Peform the inequality comparison\n","sig":null,"attributes":[{"value":"/ Peform the inequality comparison","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":11307,"byte_end":11343,"line_start":382,"line_end":382,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":11348,"byte_end":11357,"line_start":383,"line_end":383,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":11362,"byte_end":11373,"line_start":384,"line_end":384,"column_start":5,"column_end":16}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/abs_diff_eq.rs","byte_start":15471,"byte_end":15475,"line_start":121,"line_end":121,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/abs_diff_eq.rs","byte_start":15814,"byte_end":15821,"line_start":135,"line_end":135,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/relative_eq.rs","byte_start":20950,"byte_end":20954,"line_start":119,"line_end":119,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/relative_eq.rs","byte_start":21352,"byte_end":21359,"line_start":136,"line_end":136,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/ulps_eq.rs","byte_start":26261,"byte_end":26265,"line_start":101,"line_end":101,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/ulps_eq.rs","byte_start":26578,"byte_end":26585,"line_start":113,"line_end":113,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":6708,"byte_end":6715,"line_start":198,"line_end":198,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":6916,"byte_end":6923,"line_start":211,"line_end":211,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":8455,"byte_end":8463,"line_start":266,"line_end":266,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":8720,"byte_end":8728,"line_start":280,"line_end":280,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":10474,"byte_end":10478,"line_start":344,"line_end":344,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":10715,"byte_end":10719,"line_start":358,"line_end":358,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/abs_diff_eq.rs","byte_start":12060,"byte_end":12069,"line_start":6,"line_end":6,"column_start":34,"column_end":43},"kind":"SuperTrait","from":{"krate":1,"index":2675},"to":{"krate":0,"index":9}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/abs_diff_eq.rs","byte_start":15471,"byte_end":15475,"line_start":121,"line_end":121,"column_start":47,"column_end":51},"kind":{"Impl":{"id":0}},"from":{"krate":1,"index":4464},"to":{"krate":0,"index":9}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/abs_diff_eq.rs","byte_start":15814,"byte_end":15821,"line_start":135,"line_end":135,"column_start":49,"column_end":56},"kind":{"Impl":{"id":1}},"from":{"krate":1,"index":4529},"to":{"krate":0,"index":9}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/relative_eq.rs","byte_start":17446,"byte_end":17455,"line_start":8,"line_end":8,"column_start":35,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":9},"to":{"krate":0,"index":60}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/relative_eq.rs","byte_start":20950,"byte_end":20954,"line_start":119,"line_end":119,"column_start":49,"column_end":53},"kind":{"Impl":{"id":2}},"from":{"krate":1,"index":4464},"to":{"krate":0,"index":60}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/relative_eq.rs","byte_start":21352,"byte_end":21359,"line_start":136,"line_end":136,"column_start":51,"column_end":58},"kind":{"Impl":{"id":3}},"from":{"krate":1,"index":4529},"to":{"krate":0,"index":60}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/ulps_eq.rs","byte_start":23200,"byte_end":23209,"line_start":10,"line_end":10,"column_start":31,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":9},"to":{"krate":0,"index":100}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/ulps_eq.rs","byte_start":26261,"byte_end":26265,"line_start":101,"line_end":101,"column_start":41,"column_end":45},"kind":{"Impl":{"id":4}},"from":{"krate":1,"index":4464},"to":{"krate":0,"index":100}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/ulps_eq.rs","byte_start":26578,"byte_end":26585,"line_start":113,"line_end":113,"column_start":43,"column_end":50},"kind":{"Impl":{"id":5}},"from":{"krate":1,"index":4529},"to":{"krate":0,"index":100}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":6708,"byte_end":6715,"line_start":198,"line_end":198,"column_start":24,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":153},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":6916,"byte_end":6923,"line_start":211,"line_end":211,"column_start":12,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":8455,"byte_end":8463,"line_start":266,"line_end":266,"column_start":24,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":167},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":8720,"byte_end":8728,"line_start":280,"line_end":280,"column_start":12,"column_end":20},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":10474,"byte_end":10478,"line_start":344,"line_end":344,"column_start":24,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":183},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.5.1/src/lib.rs","byte_start":10715,"byte_end":10719,"line_start":358,"line_end":358,"column_start":12,"column_end":16},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":183},"to":{"krate":4294967295,"index":4294967295}}]}
{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0","program":"/home/martin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","pdqselect","/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=99dd6ecc4498b8e2","-C","extra-filename=-99dd6ecc4498b8e2","--out-dir","/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps","-L","dependency=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/martin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libpdqselect-99dd6ecc4498b8e2.rmeta"},"prelude":{"crate_id":{"name":"pdqselect","disambiguator":[311865596127757181,0]},"crate_root":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src","external_crates":[{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2825088610194081445,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[9481142260376939403,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[16420834686343379425,0]}}],"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":0,"byte_end":40400,"line_start":1,"line_end":1194,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":0,"byte_end":40400,"line_start":1,"line_end":1194,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":42},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":62},{"krate":0,"index":70},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":85}],"decl_id":null,"docs":" Pattern-defeating quickselect","sig":null,"attributes":[{"value":"/ Pattern-defeating quickselect","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":0,"byte_end":33,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":34,"byte_end":37,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The algorithm is based on pattern-defeating quicksort by Orson Peters, published at:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":38,"byte_end":126,"line_start":3,"line_end":3,"column_start":1,"column_end":89}},{"value":"/ https://github.com/orlp/pdqsort","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":127,"byte_end":162,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/ It is also heavily adapted from the Rust implementation of pdqsort","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":163,"byte_end":233,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/ (https://github.com/stjepang/pdqsort) and Rust's own `sort_unstable`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":234,"byte_end":307,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":308,"byte_end":311,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Properties","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":312,"byte_end":328,"line_start":8,"line_end":8,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":329,"byte_end":332,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ - Best-case running time is `O(n)`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":333,"byte_end":372,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/ - Worst-case running time is `O(n log n)`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":373,"byte_end":419,"line_start":11,"line_end":11,"column_start":1,"column_end":47}},{"value":"/ - Does not allocate additional memory.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":420,"byte_end":462,"line_start":12,"line_end":12,"column_start":1,"column_end":43}},{"value":"/ - Uses `#![no_std]`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":463,"byte_end":487,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":488,"byte_end":491,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":492,"byte_end":506,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":507,"byte_end":510,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":511,"byte_end":518,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ let mut v = [-5i32, 4, 1, -3, 2];","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":519,"byte_end":556,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/ let k = 3;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":557,"byte_end":571,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":572,"byte_end":575,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ pdqselect::select(&mut v, k);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":576,"byte_end":609,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ let kth = v[k];","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":610,"byte_end":629,"line_start":22,"line_end":22,"column_start":1,"column_end":20}},{"value":"/ assert!(v[..k].iter().all(|&x| x <= kth));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":630,"byte_end":676,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/ assert!(v[k+1..].iter().all(|&x| x >= kth));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":677,"byte_end":725,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":726,"byte_end":729,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ pdqselect::select_by(&mut v, k, |a, b| b.cmp(a));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":730,"byte_end":783,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let kth = v[k];","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":784,"byte_end":803,"line_start":27,"line_end":27,"column_start":1,"column_end":20}},{"value":"/ assert!(v[..k].iter().all(|&x| x >= kth));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":804,"byte_end":850,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ assert!(v[k+1..].iter().all(|&x| x <= kth));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":851,"byte_end":899,"line_start":29,"line_end":29,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":900,"byte_end":903,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ pdqselect::select_by_key(&mut v, k, |k| k.abs());","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":904,"byte_end":957,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ let kth = v[k].abs();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":958,"byte_end":983,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"/ assert!(v[..k].iter().all(|&x| x.abs() <= kth));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":984,"byte_end":1036,"line_start":33,"line_end":33,"column_start":1,"column_end":53}},{"value":"/ assert!(v[k+1..].iter().all(|&x| x.abs() >= kth));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":1037,"byte_end":1091,"line_start":34,"line_end":34,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":1092,"byte_end":1099,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"no_std","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":1101,"byte_end":1111,"line_start":37,"line_end":37,"column_start":1,"column_end":11}}]},{"kind":"Function","id":{"krate":0,"index":38},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":6137,"byte_end":6145,"line_start":179,"line_end":179,"column_start":8,"column_end":16},"name":"heapsort","qualname":"::heapsort","value":"pub fn heapsort<T, F>(&mut [T], &mut F) where F: FnMut(&T, &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Sorts `v` using heapsort, which guarantees `O(n log n)` worst-case.\n","sig":null,"attributes":[{"value":"/ Sorts `v` using heapsort, which guarantees `O(n log n)` worst-case.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":6050,"byte_end":6121,"line_start":177,"line_end":177,"column_start":1,"column_end":72}},{"value":"cold","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":6122,"byte_end":6129,"line_start":178,"line_end":178,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":78},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":38748,"byte_end":38754,"line_start":1140,"line_end":1140,"column_start":8,"column_end":14},"name":"select","qualname":"::select","value":"pub fn select<T>(&mut [T], usize) where T: Ord","parent":null,"children":[],"decl_id":null,"docs":" Partially sorts a slice and puts the `k`th smallest item in place.","sig":null,"attributes":[{"value":"/ Partially sorts a slice and puts the `k`th smallest item in place.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":38295,"byte_end":38365,"line_start":1125,"line_end":1125,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":38366,"byte_end":38369,"line_start":1126,"line_end":1126,"column_start":1,"column_end":4}},{"value":"/ This sort is in-place, unstable, and `O(n log n)` worst-case.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":38370,"byte_end":38435,"line_start":1127,"line_end":1127,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":38436,"byte_end":38439,"line_start":1128,"line_end":1128,"column_start":1,"column_end":4}},{"value":"/ The implementation is based on Orson Peters' pattern-defeating quickselect.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":38440,"byte_end":38519,"line_start":1129,"line_end":1129,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":38520,"byte_end":38523,"line_start":1130,"line_end":1130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":38524,"byte_end":38538,"line_start":1131,"line_end":1131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":38539,"byte_end":38542,"line_start":1132,"line_end":1132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":38543,"byte_end":38550,"line_start":1133,"line_end":1133,"column_start":1,"column_end":8}},{"value":"/ let mut v = [-5, 4, 1, -3, 2];","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":38551,"byte_end":38585,"line_start":1134,"line_end":1134,"column_start":1,"column_end":35}},{"value":"/ let k = 2;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":38586,"byte_end":38600,"line_start":1135,"line_end":1135,"column_start":1,"column_end":15}},{"value":"/ pdqselect::select(&mut v, k);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":38601,"byte_end":38634,"line_start":1136,"line_end":1136,"column_start":1,"column_end":34}},{"value":"/ assert!(v[..k].iter().all(|&x| x <= v[k]));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":38635,"byte_end":38682,"line_start":1137,"line_end":1137,"column_start":1,"column_end":48}},{"value":"/ assert!(v[k+1..].iter().all(|&x| x >= v[k]));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":38683,"byte_end":38732,"line_start":1138,"line_end":1138,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":38733,"byte_end":38740,"line_start":1139,"line_end":1139,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":81},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39533,"byte_end":39542,"line_start":1167,"line_end":1167,"column_start":8,"column_end":17},"name":"select_by","qualname":"::select_by","value":"pub fn select_by<T, F>(&mut [T], usize, F) where F: FnMut(&T, &T) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Partially sorts a slice using `compare` to compare elements and puts the `k`th smallest\n item in place.","sig":null,"attributes":[{"value":"/ Partially sorts a slice using `compare` to compare elements and puts the `k`th smallest","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":38843,"byte_end":38934,"line_start":1146,"line_end":1146,"column_start":1,"column_end":92}},{"value":"/ item in place.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":38935,"byte_end":38953,"line_start":1147,"line_end":1147,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":38954,"byte_end":38957,"line_start":1148,"line_end":1148,"column_start":1,"column_end":4}},{"value":"/ This sort is in-place, unstable, and `O(n log n)` worst-case.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":38958,"byte_end":39023,"line_start":1149,"line_end":1149,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39024,"byte_end":39027,"line_start":1150,"line_end":1150,"column_start":1,"column_end":4}},{"value":"/ The implementation is based on Orson Peters' pattern-defeating quickselect.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39028,"byte_end":39107,"line_start":1151,"line_end":1151,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39108,"byte_end":39111,"line_start":1152,"line_end":1152,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39112,"byte_end":39126,"line_start":1153,"line_end":1153,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39127,"byte_end":39130,"line_start":1154,"line_end":1154,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39131,"byte_end":39138,"line_start":1155,"line_end":1155,"column_start":1,"column_end":8}},{"value":"/ let mut v = [5, 4, 1, 3, 2];","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39139,"byte_end":39171,"line_start":1156,"line_end":1156,"column_start":1,"column_end":33}},{"value":"/ let k = 2;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39172,"byte_end":39186,"line_start":1157,"line_end":1157,"column_start":1,"column_end":15}},{"value":"/ pdqselect::select_by(&mut v, k, |a, b| a.cmp(b));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39187,"byte_end":39240,"line_start":1158,"line_end":1158,"column_start":1,"column_end":54}},{"value":"/ assert!(v[..k].iter().all(|&x| x <= v[k]));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39241,"byte_end":39288,"line_start":1159,"line_end":1159,"column_start":1,"column_end":48}},{"value":"/ assert!(v[k+1..].iter().all(|&x| x >= v[k]));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39289,"byte_end":39338,"line_start":1160,"line_end":1160,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39339,"byte_end":39342,"line_start":1161,"line_end":1161,"column_start":1,"column_end":4}},{"value":"/ // reverse sorting","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39343,"byte_end":39365,"line_start":1162,"line_end":1162,"column_start":1,"column_end":23}},{"value":"/ pdqselect::select_by(&mut v, k, |a, b| b.cmp(a));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39366,"byte_end":39419,"line_start":1163,"line_end":1163,"column_start":1,"column_end":54}},{"value":"/ assert!(v[..k].iter().all(|&x| x >= v[k]));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39420,"byte_end":39467,"line_start":1164,"line_end":1164,"column_start":1,"column_end":48}},{"value":"/ assert!(v[k+1..].iter().all(|&x| x <= v[k]));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39468,"byte_end":39517,"line_start":1165,"line_end":1165,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39518,"byte_end":39525,"line_start":1166,"line_end":1166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":85},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":40248,"byte_end":40261,"line_start":1189,"line_end":1189,"column_start":8,"column_end":21},"name":"select_by_key","qualname":"::select_by_key","value":"pub fn select_by_key<T, B, F>(&mut [T], usize, F) where F: FnMut(&T) -> B,\nB: Ord","parent":null,"children":[],"decl_id":null,"docs":" Partially sorts a slice using `f` to extract a key to compare elements by and puts the `k`th\n smallest item in place.","sig":null,"attributes":[{"value":"/ Partially sorts a slice using `f` to extract a key to compare elements by and puts the `k`th","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39696,"byte_end":39792,"line_start":1173,"line_end":1173,"column_start":1,"column_end":97}},{"value":"/ smallest item in place.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39793,"byte_end":39820,"line_start":1174,"line_end":1174,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39821,"byte_end":39824,"line_start":1175,"line_end":1175,"column_start":1,"column_end":4}},{"value":"/ This sort is in-place, unstable, and `O(n log n)` worst-case.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39825,"byte_end":39890,"line_start":1176,"line_end":1176,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39891,"byte_end":39894,"line_start":1177,"line_end":1177,"column_start":1,"column_end":4}},{"value":"/ The implementation is based on Orson Peters' pattern-defeating quicksort.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39895,"byte_end":39972,"line_start":1178,"line_end":1178,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39973,"byte_end":39976,"line_start":1179,"line_end":1179,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39977,"byte_end":39991,"line_start":1180,"line_end":1180,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39992,"byte_end":39995,"line_start":1181,"line_end":1181,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":39996,"byte_end":40003,"line_start":1182,"line_end":1182,"column_start":1,"column_end":8}},{"value":"/ let mut v = [-5i32, 4, 1, -3, 2];","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":40004,"byte_end":40041,"line_start":1183,"line_end":1183,"column_start":1,"column_end":38}},{"value":"/ let k = 3;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":40042,"byte_end":40056,"line_start":1184,"line_end":1184,"column_start":1,"column_end":15}},{"value":"/ pdqselect::select_by_key(&mut v, k, |x| x.abs());","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":40057,"byte_end":40110,"line_start":1185,"line_end":1185,"column_start":1,"column_end":54}},{"value":"/ assert!(v[..k].iter().all(|&x| x.abs() <= v[k].abs()));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":40111,"byte_end":40170,"line_start":1186,"line_end":1186,"column_start":1,"column_end":60}},{"value":"/ assert!(v[k+1..].iter().all(|&x| x.abs() >= v[k].abs()));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":40171,"byte_end":40232,"line_start":1187,"line_end":1187,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":40233,"byte_end":40240,"line_start":1188,"line_end":1188,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":1304,"byte_end":1314,"line_start":49,"line_end":49,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/pdqselect-0.1.0/src/lib.rs","byte_start":1304,"byte_end":1314,"line_start":49,"line_end":49,"column_start":18,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":17},"to":{"krate":1,"index":3266}}]}
{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7","program":"/home/martin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","cast","--edition=2018","/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=3f02259161c937e7","-C","extra-filename=-3f02259161c937e7","--out-dir","/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps","-L","dependency=/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps","--cap-lints","allow","--cfg","stable_i128","--error-format=json","--sysroot","/home/martin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/martin/build/rust_d3_geo/lib/target/rls/debug/deps/libcast-3f02259161c937e7.rmeta"},"prelude":{"crate_id":{"name":"cast","disambiguator":[18256268496041663964,0]},"crate_root":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src","external_crates":[{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14788966508543342302,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2825088610194081445,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9481142260376939403,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16420834686343379425,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11097033969885139948,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6800150773471260640,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9424233180753397496,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4493421558680613340,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[10587786945246582611,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6037489587312533517,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[12999623613951624675,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[15285592788019233460,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[7690318462147983057,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16937637772373355212,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8216859446519220865,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[6387052066414425180,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[879344915155370202,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[12947071141408240460,0]}},{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12545025351940724261,0]}}],"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":0,"byte_end":17116,"line_start":1,"line_end":545,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":0,"byte_end":17116,"line_start":1,"line_end":545,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":43},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":9},{"krate":0,"index":11},{"krate":0,"index":13},{"krate":0,"index":15},{"krate":0,"index":19},{"krate":0,"index":63},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":33}],"decl_id":null,"docs":" Ergonomic, checked cast functions for primitive types","sig":null,"attributes":[{"value":"/ Ergonomic, checked cast functions for primitive types","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":0,"byte_end":57,"line_start":1,"line_end":1,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":58,"byte_end":61,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides one checked cast function for each numeric primitive.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":62,"byte_end":139,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ Use these functions to perform a cast from any other numeric primitive:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":140,"byte_end":215,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":216,"byte_end":219,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":220,"byte_end":227,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ extern crate cast;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":228,"byte_end":250,"line_start":7,"line_end":7,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":251,"byte_end":254,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ use cast::{u8, u16, Error};","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":255,"byte_end":286,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":287,"byte_end":290,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":291,"byte_end":308,"line_start":11,"line_end":11,"column_start":1,"column_end":18}},{"value":"/ // Infallible operations, like integer promotion, are equivalent to a normal","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":309,"byte_end":389,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ // cast with `as`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":390,"byte_end":411,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(u16(0u8), 0u16);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":412,"byte_end":443,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":444,"byte_end":447,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ // Everything else will return a `Result` depending on the success of the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":448,"byte_end":525,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ // operation","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":526,"byte_end":542,"line_start":17,"line_end":17,"column_start":1,"column_end":17}},{"value":"/ assert_eq!(u8(0u16), Ok(0u8));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":543,"byte_end":577,"line_start":18,"line_end":18,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(u8(256u16), Err(Error::Overflow));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":578,"byte_end":627,"line_start":19,"line_end":19,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(u8(-1i8), Err(Error::Underflow));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":628,"byte_end":676,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(u8(1. / 0.), Err(Error::Infinite));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":677,"byte_end":727,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(u8(0. / 0.), Err(Error::NaN));","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":728,"byte_end":773,"line_start":22,"line_end":22,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":774,"byte_end":781,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":782,"byte_end":789,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":790,"byte_end":793,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ There are no namespace problems between these functions, the \"primitive","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":794,"byte_end":869,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ modules\" in `core`/`std` and the built-in primitive types, so all them can","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":870,"byte_end":948,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ be in the same scope:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":949,"byte_end":974,"line_start":28,"line_end":28,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":975,"byte_end":978,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":979,"byte_end":986,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ extern crate cast;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":987,"byte_end":1009,"line_start":31,"line_end":31,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1010,"byte_end":1013,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ use std::u8;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1014,"byte_end":1030,"line_start":33,"line_end":33,"column_start":1,"column_end":17}},{"value":"/ use cast::{u8, u16};","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1031,"byte_end":1055,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1056,"byte_end":1059,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1060,"byte_end":1077,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"/ // `u8` as a type","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1078,"byte_end":1099,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/ let x: u8 = 0;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1100,"byte_end":1118,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/ // `u8` as a module","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1119,"byte_end":1142,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/ let y = u16(u8::MAX);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1143,"byte_end":1168,"line_start":40,"line_end":40,"column_start":1,"column_end":26}},{"value":"/ // `u8` as a function","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1169,"byte_end":1194,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/ let z = u8(y).unwrap();","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1195,"byte_end":1222,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1223,"byte_end":1230,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1231,"byte_end":1238,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1239,"byte_end":1242,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ The checked cast functionality is also usable with type aliases via the","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1243,"byte_end":1318,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ `cast` static method:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1319,"byte_end":1344,"line_start":47,"line_end":47,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1345,"byte_end":1348,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1349,"byte_end":1356,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ extern crate cast;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1357,"byte_end":1379,"line_start":50,"line_end":50,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1380,"byte_end":1383,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ use std::os::raw::c_ulonglong;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1384,"byte_end":1418,"line_start":52,"line_end":52,"column_start":1,"column_end":35}},{"value":"/ // NOTE avoid shadowing `std::convert::From` - cf. rust-lang/rfcs#1311","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1419,"byte_end":1493,"line_start":53,"line_end":53,"column_start":1,"column_end":75}},{"value":"/ use cast::From as _0;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1494,"byte_end":1519,"line_start":54,"line_end":54,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1520,"byte_end":1523,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1524,"byte_end":1541,"line_start":56,"line_end":56,"column_start":1,"column_end":18}},{"value":"/ assert_eq!(c_ulonglong::cast(0u8), 0u64);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1542,"byte_end":1587,"line_start":57,"line_end":57,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1588,"byte_end":1595,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1596,"byte_end":1603,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1604,"byte_end":1607,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This crate also provides a `From` trait that can be used, for example,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1608,"byte_end":1682,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"/ to create a generic function that accepts any type that can be infallibly","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1683,"byte_end":1760,"line_start":62,"line_end":62,"column_start":1,"column_end":78}},{"value":"/ casted to `u32`.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1761,"byte_end":1781,"line_start":63,"line_end":63,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1782,"byte_end":1785,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1786,"byte_end":1793,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ extern crate cast;","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1794,"byte_end":1816,"line_start":66,"line_end":66,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1817,"byte_end":1820,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ fn to_u32<T>(x: T) -> u32","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1821,"byte_end":1850,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/     // reads as: \"where u32 can be casted from T with output u32\"","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1851,"byte_end":1920,"line_start":69,"line_end":69,"column_start":1,"column_end":70}},{"value":"/     where u32: cast::From<T, Output=u32>,","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1921,"byte_end":1966,"line_start":70,"line_end":70,"column_start":1,"column_end":46}},{"value":"/ {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1967,"byte_end":1972,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/     cast::u32(x)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1973,"byte_end":1993,"line_start":72,"line_end":72,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":1994,"byte_end":1999,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2000,"byte_end":2003,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2004,"byte_end":2021,"line_start":75,"line_end":75,"column_start":1,"column_end":18}},{"value":"/ assert_eq!(to_u32(0u8), 0u32);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2022,"byte_end":2056,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(to_u32(1u16), 1u32);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2057,"byte_end":2092,"line_start":77,"line_end":77,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(to_u32(2u32), 2u32);","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2093,"byte_end":2128,"line_start":78,"line_end":78,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2129,"byte_end":2132,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ // to_u32(-1i32);  // Compile error","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2133,"byte_end":2172,"line_start":80,"line_end":80,"column_start":1,"column_end":40}},{"value":"/ # }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2173,"byte_end":2180,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2181,"byte_end":2188,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2189,"byte_end":2192,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ## Minimal Supported Rust Version","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2193,"byte_end":2230,"line_start":84,"line_end":84,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2231,"byte_end":2234,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ This crate is guaranteed to compile on stable Rust 1.13 and up. It *might* compile on older","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2235,"byte_end":2330,"line_start":86,"line_end":86,"column_start":1,"column_end":96}},{"value":"/ versions but that may change in any new patch release.","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2331,"byte_end":2389,"line_start":87,"line_end":87,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2390,"byte_end":2393,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ## Building without `std`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2394,"byte_end":2423,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2424,"byte_end":2427,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ This crate can be used without Rust's `std` crate by declaring it as","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2428,"byte_end":2500,"line_start":91,"line_end":91,"column_start":1,"column_end":73}},{"value":"/ follows in your `Cargo.toml`:","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2501,"byte_end":2534,"line_start":92,"line_end":92,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2535,"byte_end":2538,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ``` toml","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2539,"byte_end":2551,"line_start":94,"line_end":94,"column_start":1,"column_end":13}},{"value":"/ cast = { version = \"*\", default-features = false }","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2552,"byte_end":2606,"line_start":95,"line_end":95,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2607,"byte_end":2614,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"deny(missing_docs)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2616,"byte_end":2638,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"deny(warnings)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2639,"byte_end":2657,"line_start":99,"line_end":99,"column_start":1,"column_end":19}},{"value":"allow(const_err)","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2658,"byte_end":2678,"line_start":100,"line_end":100,"column_start":1,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":44},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":3097,"byte_end":3105,"line_start":121,"line_end":121,"column_start":5,"column_end":13},"name":"Infinite","qualname":"::Error::Infinite","value":"Error::Infinite","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" Infinite value casted to a type that can only represent finite values\n","sig":null,"attributes":[{"value":"/ Infinite value casted to a type that can only represent finite values","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":3019,"byte_end":3092,"line_start":120,"line_end":120,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":46},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":3179,"byte_end":3182,"line_start":123,"line_end":123,"column_start":5,"column_end":8},"name":"NaN","qualname":"::Error::NaN","value":"Error::NaN","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" NaN value casted to a type that can't represent a NaN value\n","sig":null,"attributes":[{"value":"/ NaN value casted to a type that can't represent a NaN value","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":3111,"byte_end":3174,"line_start":122,"line_end":122,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":48},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":3286,"byte_end":3294,"line_start":126,"line_end":126,"column_start":5,"column_end":13},"name":"Overflow","qualname":"::Error::Overflow","value":"Error::Overflow","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" Source value is greater than the maximum value that the destination type\n can hold\n","sig":null,"attributes":[{"value":"/ Source value is greater than the maximum value that the destination type","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":3188,"byte_end":3264,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/ can hold","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":3269,"byte_end":3281,"line_start":125,"line_end":125,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":50},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":3398,"byte_end":3407,"line_start":129,"line_end":129,"column_start":5,"column_end":14},"name":"Underflow","qualname":"::Error::Underflow","value":"Error::Underflow","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" Source value is smaller than the minimum value that the destination type\n can hold\n","sig":null,"attributes":[{"value":"/ Source value is smaller than the minimum value that the destination type","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":3300,"byte_end":3376,"line_start":127,"line_end":127,"column_start":5,"column_end":81}},{"value":"/ can hold","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":3381,"byte_end":3393,"line_start":128,"line_end":128,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":43},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":3007,"byte_end":3012,"line_start":119,"line_end":119,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"pub enum Error { Infinite, NaN, Overflow, Underflow, }","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50}],"decl_id":null,"docs":" Cast errors\n","sig":null,"attributes":[{"value":"/ Cast errors","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":2937,"byte_end":2952,"line_start":117,"line_end":117,"column_start":1,"column_end":16}}]},{"kind":"Trait","id":{"krate":0,"index":15},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4273,"byte_end":4277,"line_start":159,"line_end":159,"column_start":11,"column_end":15},"name":"From","qualname":"::From","value":"From<Src>","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18}],"decl_id":null,"docs":" The \"cast from\" operation\n","sig":null,"attributes":[{"value":"/ The \"cast from\" operation","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4233,"byte_end":4262,"line_start":158,"line_end":158,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":17},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4375,"byte_end":4381,"line_start":161,"line_end":161,"column_start":10,"column_end":16},"name":"Output","qualname":"::From::Output","value":"type Output;","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" The result of the cast operation: either `Self` or `Result<Self, Error>`\n","sig":null,"attributes":[{"value":"/ The result of the cast operation: either `Self` or `Result<Self, Error>`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4289,"byte_end":4365,"line_start":160,"line_end":160,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4433,"byte_end":4437,"line_start":164,"line_end":164,"column_start":8,"column_end":12},"name":"cast","qualname":"::From::cast","value":"pub fn cast(Src) -> Self::Output","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" Checked cast from `Src` to `Self`\n","sig":null,"attributes":[{"value":"/ Checked cast from `Src` to `Self`","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4388,"byte_end":4425,"line_start":163,"line_end":163,"column_start":5,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":63},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4773,"byte_end":4776,"line_start":181,"line_end":181,"column_start":6,"column_end":9},"name":"f32","qualname":"::f32","value":"pub fn f32<T>(T) -> <f32 as From<T>>::Output where f32: From<T>","parent":null,"children":[],"decl_id":null,"docs":" Checked cast function\n","sig":null,"attributes":[{"value":"/ Checked cast function","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4534,"byte_end":4559,"line_start":170,"line_end":170,"column_start":13,"column_end":38}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4572,"byte_end":4581,"line_start":171,"line_end":171,"column_start":13,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":65},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4778,"byte_end":4781,"line_start":181,"line_end":181,"column_start":11,"column_end":14},"name":"f64","qualname":"::f64","value":"pub fn f64<T>(T) -> <f64 as From<T>>::Output where f64: From<T>","parent":null,"children":[],"decl_id":null,"docs":" Checked cast function\n","sig":null,"attributes":[{"value":"/ Checked cast function","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4534,"byte_end":4559,"line_start":170,"line_end":170,"column_start":13,"column_end":38}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4572,"byte_end":4581,"line_start":171,"line_end":171,"column_start":13,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":67},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4783,"byte_end":4785,"line_start":181,"line_end":181,"column_start":16,"column_end":18},"name":"i8","qualname":"::i8","value":"pub fn i8<T>(T) -> <i8 as From<T>>::Output where i8: From<T>","parent":null,"children":[],"decl_id":null,"docs":" Checked cast function\n","sig":null,"attributes":[{"value":"/ Checked cast function","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4534,"byte_end":4559,"line_start":170,"line_end":170,"column_start":13,"column_end":38}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4572,"byte_end":4581,"line_start":171,"line_end":171,"column_start":13,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":69},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4787,"byte_end":4790,"line_start":181,"line_end":181,"column_start":20,"column_end":23},"name":"i16","qualname":"::i16","value":"pub fn i16<T>(T) -> <i16 as From<T>>::Output where i16: From<T>","parent":null,"children":[],"decl_id":null,"docs":" Checked cast function\n","sig":null,"attributes":[{"value":"/ Checked cast function","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4534,"byte_end":4559,"line_start":170,"line_end":170,"column_start":13,"column_end":38}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4572,"byte_end":4581,"line_start":171,"line_end":171,"column_start":13,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":71},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4792,"byte_end":4795,"line_start":181,"line_end":181,"column_start":25,"column_end":28},"name":"i32","qualname":"::i32","value":"pub fn i32<T>(T) -> <i32 as From<T>>::Output where i32: From<T>","parent":null,"children":[],"decl_id":null,"docs":" Checked cast function\n","sig":null,"attributes":[{"value":"/ Checked cast function","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4534,"byte_end":4559,"line_start":170,"line_end":170,"column_start":13,"column_end":38}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4572,"byte_end":4581,"line_start":171,"line_end":171,"column_start":13,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":73},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4797,"byte_end":4800,"line_start":181,"line_end":181,"column_start":30,"column_end":33},"name":"i64","qualname":"::i64","value":"pub fn i64<T>(T) -> <i64 as From<T>>::Output where i64: From<T>","parent":null,"children":[],"decl_id":null,"docs":" Checked cast function\n","sig":null,"attributes":[{"value":"/ Checked cast function","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4534,"byte_end":4559,"line_start":170,"line_end":170,"column_start":13,"column_end":38}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4572,"byte_end":4581,"line_start":171,"line_end":171,"column_start":13,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":75},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4802,"byte_end":4807,"line_start":181,"line_end":181,"column_start":35,"column_end":40},"name":"isize","qualname":"::isize","value":"pub fn isize<T>(T) -> <isize as From<T>>::Output where isize: From<T>","parent":null,"children":[],"decl_id":null,"docs":" Checked cast function\n","sig":null,"attributes":[{"value":"/ Checked cast function","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4534,"byte_end":4559,"line_start":170,"line_end":170,"column_start":13,"column_end":38}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4572,"byte_end":4581,"line_start":171,"line_end":171,"column_start":13,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":77},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4809,"byte_end":4811,"line_start":181,"line_end":181,"column_start":42,"column_end":44},"name":"u8","qualname":"::u8","value":"pub fn u8<T>(T) -> <u8 as From<T>>::Output where u8: From<T>","parent":null,"children":[],"decl_id":null,"docs":" Checked cast function\n","sig":null,"attributes":[{"value":"/ Checked cast function","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4534,"byte_end":4559,"line_start":170,"line_end":170,"column_start":13,"column_end":38}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4572,"byte_end":4581,"line_start":171,"line_end":171,"column_start":13,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":79},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4813,"byte_end":4816,"line_start":181,"line_end":181,"column_start":46,"column_end":49},"name":"u16","qualname":"::u16","value":"pub fn u16<T>(T) -> <u16 as From<T>>::Output where u16: From<T>","parent":null,"children":[],"decl_id":null,"docs":" Checked cast function\n","sig":null,"attributes":[{"value":"/ Checked cast function","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4534,"byte_end":4559,"line_start":170,"line_end":170,"column_start":13,"column_end":38}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4572,"byte_end":4581,"line_start":171,"line_end":171,"column_start":13,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":81},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4818,"byte_end":4821,"line_start":181,"line_end":181,"column_start":51,"column_end":54},"name":"u32","qualname":"::u32","value":"pub fn u32<T>(T) -> <u32 as From<T>>::Output where u32: From<T>","parent":null,"children":[],"decl_id":null,"docs":" Checked cast function\n","sig":null,"attributes":[{"value":"/ Checked cast function","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4534,"byte_end":4559,"line_start":170,"line_end":170,"column_start":13,"column_end":38}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4572,"byte_end":4581,"line_start":171,"line_end":171,"column_start":13,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":83},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4823,"byte_end":4826,"line_start":181,"line_end":181,"column_start":56,"column_end":59},"name":"u64","qualname":"::u64","value":"pub fn u64<T>(T) -> <u64 as From<T>>::Output where u64: From<T>","parent":null,"children":[],"decl_id":null,"docs":" Checked cast function\n","sig":null,"attributes":[{"value":"/ Checked cast function","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4534,"byte_end":4559,"line_start":170,"line_end":170,"column_start":13,"column_end":38}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4572,"byte_end":4581,"line_start":171,"line_end":171,"column_start":13,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":85},"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4828,"byte_end":4833,"line_start":181,"line_end":181,"column_start":61,"column_end":66},"name":"usize","qualname":"::usize","value":"pub fn usize<T>(T) -> <usize as From<T>>::Output where usize: From<T>","parent":null,"children":[],"decl_id":null,"docs":" Checked cast function\n","sig":null,"attributes":[{"value":"/ Checked cast function","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4534,"byte_end":4559,"line_start":170,"line_end":170,"column_start":13,"column_end":38}},{"value":"inline","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4572,"byte_end":4581,"line_start":171,"line_end":171,"column_start":13,"column_end":22}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":3417,"byte_end":3422,"line_start":132,"line_end":132,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":10}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":3969,"byte_end":3974,"line_start":145,"line_end":145,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4146,"byte_end":4151,"line_start":152,"line_end":152,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":3417,"byte_end":3422,"line_start":132,"line_end":132,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":43},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":3969,"byte_end":3974,"line_start":145,"line_end":145,"column_start":23,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":43},"to":{"krate":2,"index":9602}},{"span":{"file_name":"/home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/cast-0.2.7/src/lib.rs","byte_start":4146,"byte_end":4151,"line_start":152,"line_end":152,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":43},"to":{"krate":1,"index":2452}}]}